{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Person\\\\Clerk\\\\Clerk.js\";\nimport React, { Component } from 'react';\nimport { Button, Pagination, Form, Modal, Input, message } from 'antd';\nimport IconFont from '../../../../iconfont/font';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Clerk.less';\nvar FormItem = Form.Item;\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp() {\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    //构造函数\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Temp).call(this));\n\n    _this.renderFunc = function (ele) {\n      //人员信息列表部分渲染;\n      return React.createElement(\"tr\", {\n        key: ele.num,\n        id: ele.num,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" \", ele.num, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", ele.name, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \", ele.sex, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" \", ele.cardNum, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" \", ele.birthday, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \" \", ele.age, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" \", ele.hiredate, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" \", ele.jobTitle, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" \", ele.state, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\" // href={`/pers/clerksDetails?num=${ele.num}`}\n        ,\n        ghost: \"true\",\n        onClick: _this.EditClick.bind(_assertThisInitialized(_this), ele.num),\n        style: {\n          marginRight: 10,\n          fontSize: 13,\n          width: 60,\n          height: 25,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" \\u7F16\\u8F91 \"), \" \"), \" \", React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: function onClick() {\n          _this.deleteInfo(ele.num);\n        },\n        style: {\n          fontSize: 13,\n          width: 60,\n          height: 25,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"\\u5220\\u9664 \"), \" \"), \" \");\n    };\n\n    _this.handleOk = function (e) {\n      // 通过回调函数将前端表单内容发送到后台;\n      //加上提交验证,组件自带方法\n      _this.props.form.validateFields(function (errors, values) {\n        if (!!errors) {\n          // 出现报错时判断函数\n          message.error('Error!');\n        } else {\n          //验证成功,向后台发送数据;\n          //向后台发送数据;\n          fetch(\"http://localhost:2000/pers?act=addClerks\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(_this.props.form.getFieldsValue())\n          }).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            // 后台返回数据后页面是否渲染???\n            _this.setState({\n              data: data.data,\n              storeData: data.data\n            });\n          }); // console.log(this.state)\n\n          message.success('Successfully!');\n\n          _this.setState({\n            visible: false\n          });\n        }\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.error = function () {\n      message.error(\"It doesn't exist !\");\n    };\n\n    _this.listItems = \"\"; //  人员信息列表数据;\n\n    _this.filterData = \"\"; // 过滤后的数据;\n\n    _this.itemsName = \" \"; // From 表单渲染时候的英文;\n\n    _this.state = {\n      data: '',\n      storeData: \"\",\n      current: 1,\n      refresh: true,\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      //请求数据函数\n      fetch(\"http://localhost:2000/pers/clerks\", {\n        method: 'GET'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          data: data.data,\n          storeData: data.data\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //挂载前,请求数据函数\n      this.getData();\n    }\n  }, {\n    key: \"EditClick\",\n    value: function EditClick(index) {\n      // e.preventDefault();\n      console.log(index); // pathname:'/pers/clerksDetails?num='+index,\n      // state:this.state.data[0].ClerkData.filter(e=>e.num==index)\n      // let vcode =[{aa:1}]\n\n      this.props.history.push({\n        //将此条完整人员信息藏在state中\n        pathname: \"/pers/clerksDetails\",\n        state: this.state.data[0].ClerkData.filter(function (e) {\n          return e.num == index;\n        }),\n        search: '?num=' + index\n      }); // this.props.history.push('/pers/clerksDetails?num='+index);\n      // this.props.history.push('/pers/clerksDetails?num='+index);\n      // this.props.location.state=1111\n      // console.log(this.props)\n    }\n  }, {\n    key: \"ClerksInfo\",\n    value: function ClerksInfo(data) {\n      var _this3 = this;\n\n      if (data) {\n        // 过滤例子： [32, 33, 16, 40].filter((a)=> a<40&a>20) \n        // 根据页码渲染当前页\n        // 对返回\n        // 把数据length传入底部页码组件,一共几页根据组件内设置每页items数量,自动生成\n        if (data[0].ClerkData.length === 1) {\n          this.listItems = data[0].ClerkData.map(this.renderFunc);\n        } else {\n          // 如果为完整数据对数据进行筛选后显示;\n          // 根据页码判断后结果,显示内容;\n          this.listItems = data[0].ClerkData.filter(function (e, index) {\n            return index >= 5 * (_this3.state.current - 1) && index < 5 * _this3.state.current;\n          }).map(this.renderFunc);\n\n          if (!this.listItems.length) {\n            var temp = this.state.current * 1;\n            this.setState({\n              current: temp - 1\n            });\n          }\n        }\n\n        return React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \" \", this.listItems, \" \");\n      }\n    }\n  }, {\n    key: \"ChangePage\",\n    value: function ChangePage(page) {\n      //<Pagination/>组件自带回调函数\n      this.setState({\n        current: page\n      }); // 使用setState的 \"回调函数\" 解决异步问题\n      // setState为异步  上面console以后 => setState为异步 => 先执行下面console \n      // 解决this.setState可能会引发不必要的渲染(renders) \n      // https://www.cnblogs.com/lgp142332/p/7270047.html\n    }\n    /* \r\n       问题：首次render也符合return中的判断,导致不渲染了;\r\n      shouldComponentUpdate(nextProps, nextState){ \r\n       解决this.setState可能引发不必要的渲染;\r\n       导致初始render也不渲染了;\r\n       return this.state.page !== nextState.page;\r\n      } \r\n     */\n\n  }, {\n    key: \"handleSearchClick\",\n    value: function handleSearchClick(e) {\n      var _this4 = this;\n\n      /* \r\n        步骤：\r\n           0. 操作数据之前将数据存为两份一份进行操作(渲染组件),一份完整数据预留查找使用;\r\n           1. 获取input内的value数值;  let value=document.getElementById(\"indexName\").value;\r\n           2. 使用filter把不符合条件的过滤掉,剩下符合条件内容;   this.state.data[0].ClerkData.filter((ele)=>ele.name===\"李旭\");\r\n           3. 让母数据的ClerkData直接等于筛选后的子数据,解决渲染方法没法操作问题;\r\n      */\n      var value = document.getElementById(\"indexName\").value.trim();\n      var result = this.state.storeData[0].ClerkData.filter(function (ele) {\n        return ele.name === value;\n      });\n\n      if (result.length) {\n        var temp = JSON.parse(JSON.stringify(this.state.data));\n        temp[0].ClerkData = result;\n        this.setState({\n          data: temp\n        }, function () {\n          _this4.ClerksInfo(_this4.state.data); // console.log(this.state.data)\n\n        });\n      } else {\n        this.error();\n        this.getData(); //如果结果不存在重新请求数据,也可以提前把数据存在\n      } //筛选完成后的数据\n\n    } // --------------------   添加人员信息部分组件    ---------------------------\n\n  }, {\n    key: \"addInfo\",\n    value: function addInfo(e) {\n      e.preventDefault();\n      this.setState({\n        //控制modal\n        visible: true\n      });\n    }\n  }, {\n    key: \"deleteInfo\",\n    value: function deleteInfo(num) {\n      var _this5 = this;\n\n      var obj = {\n        num: num\n      }; // console.log(JSON.stringify(obj))\n\n      fetch(\"http://localhost:2000/pers?act=deleteClerks\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        // 后台返回数据后页面是否渲染???\n        _this5.setState({\n          data: data.data,\n          storeData: data.data\n        });\n      });\n    }\n  }, {\n    key: \"handleResetClick\",\n    value: function handleResetClick() {\n      document.getElementById(\"indexName\").value = \"\";\n      this.setState({\n        current: 1\n      });\n      this.getData(); //如果结果不存在重新请求数据,也可以提前把数据存在\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var Page = null;\n      var data = this.state.data;\n      var _this$props$form = this.props.form,\n          resetFields = _this$props$form.resetFields,\n          getFieldDecorator = _this$props$form.getFieldDecorator; //  --------------------    表单部分    ---------------\n\n      var formItemLayout = {\n        //样式\n        // span是整体左移 pull是label左移   \n        labelCol: {\n          xs: {\n            span: 24\n          },\n          offset: 2,\n          sm: {\n            span: 6\n          }\n        },\n        //左侧 offset:3\n        wrapperCol: {\n          span: 10\n        } //input 长度控制\n\n      };\n\n      if (data) {\n        //  底部页码组件\n        Page = React.createElement(Pagination, {\n          defaultCurrent: 1,\n          pageSize: 5,\n          total: data[0].ClerkData.length,\n          onChange: this.ChangePage.bind(this),\n          style: {\n            marginRight: 30,\n            marginTop: 25,\n            float: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }); //  目的给Form.Item 规范命名让其和数据key值相同\n        //  获取所有key值,num渲染时候不需要num,使用时候给删除掉\n      }\n\n      var FormElement = function FormElement() {\n        var _this6 = this;\n\n        if (this.state.data) {\n          var titleProps = {\n            num: \"工号\",\n            name: \"姓名\",\n            sex: \"性别\",\n            cardNum: \"身份证号\",\n            birthday: \"出生年月\",\n            age: \"年龄\",\n            hiredate: \"入职时间\",\n            jobTitle: \"职位\",\n            state: \"状态\"\n          };\n          this.itemsName = Object.keys(titleProps).filter(function (e) {\n            return e !== \"num\";\n          });\n          return React.createElement(Form, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 363\n            },\n            __self: this\n          }, \" \", this.itemsName.map(function (ele, index) {\n            return React.createElement(FormItem, Object.assign({}, formItemLayout, {\n              key: index,\n              label: titleProps[_this6.itemsName[index]],\n              hasFeedback: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 366\n              },\n              __self: this\n            }), getFieldDecorator(_this6.itemsName[index], {\n              rules: [{\n                required: true,\n                min: 1,\n                message: '输入内容至少为 1 个字符',\n                pattern: new RegExp(/.+/g)\n              }]\n            })(React.createElement(Input, {\n              placeholder: \"......\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385\n              },\n              __self: this\n            })), \" \");\n          }), \" \");\n        }\n      };\n\n      return React.createElement(\"section\", {\n        className: \"clerk-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \" \", \" \", React.createElement(\"div\", {\n        className: \"app-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-serch-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-glass\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \" \\u7B5B\\u9009\\u68C0\\u7D22 \"), \" \", React.createElement(Button, {\n        className: \"btn\",\n        onClick: function onClick() {\n          _this7.handleSearchClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\\u7ED3\\u679C \"), \" \", React.createElement(Button, {\n        className: \"btn\",\n        style: {\n          color: \"#1890ff\",\n          marginRight: 20\n        },\n        ghost: true,\n        onClick: this.handleResetClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E \"), \" \"), \" \", React.createElement(\"div\", {\n        className: \"el-form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, \" \\u8F93\\u5165\\u68C0\\u7D22: \"), \" \", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n        id: \"indexName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), \" \"), \" \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n        className: \"el-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-list\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \" \\u6570\\u636E\\u5217\\u8868 \"), \" \", React.createElement(\"button\", {\n        className: \"add\",\n        style: {\n          margin: -4\n        },\n        onClick: this.addInfo.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\\u4EBA\\u5458\\u4FE1\\u606F \"), React.createElement(Modal, {\n        afterClose: function afterClose() {\n          return resetFields();\n        },\n        title: \"\\u5E97\\u5458\\u4FE1\\u606F\\u6DFB\\u52A0\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \" \", FormElement.bind(this)(), \" \"), \" \"), \" \"), \" \", React.createElement(\"main\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        cellPadding: \"0\",\n        cellSpacing: \"0\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \" \\u5DE5\\u53F7 \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \" \\u59D3\\u540D \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, \" \\u6027\\u522B \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, \" \\u8EAB\\u4EFD\\u8BC1\\u53F7 \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, \" \\u51FA\\u751F\\u5E74\\u6708 \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, \" \\u5E74\\u9F84 \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \" \\u5165\\u804C\\u65F6\\u95F4 \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \" \\u804C\\u4F4D \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, \" \\u72B6\\u6001 \"), \" \", React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \" \\u64CD\\u4F5C \"), \" \"), \" \"), \" \", this.ClerksInfo(this.state.data), \" \"), \" \"), \" \", Page, \" \"), \" \");\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar WrappedDemo = Form.create({\n  name: 'validate_other'\n})(Temp);\nexport default withRouter(WrappedDemo); // export default Temp","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Person\\Clerk\\Clerk.js"],"names":["React","Component","Button","Pagination","Form","Modal","Input","message","IconFont","Link","withRouter","FormItem","Item","Temp","renderFunc","ele","num","name","sex","cardNum","birthday","age","hiredate","jobTitle","state","EditClick","bind","marginRight","fontSize","width","height","borderRadius","deleteInfo","handleOk","e","props","form","validateFields","errors","values","error","fetch","method","headers","body","JSON","stringify","getFieldsValue","then","res","json","data","setState","storeData","success","visible","handleCancel","preventDefault","listItems","filterData","itemsName","current","refresh","getData","index","console","log","history","push","pathname","ClerkData","filter","search","length","map","temp","page","value","document","getElementById","trim","result","parse","ClerksInfo","obj","Page","resetFields","getFieldDecorator","formItemLayout","labelCol","xs","span","offset","sm","wrapperCol","ChangePage","marginTop","float","FormElement","titleProps","Object","keys","rules","required","min","pattern","RegExp","handleSearchClick","color","handleResetClick","margin","addInfo","WrappedDemo","create"],"mappings":"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","sourcesContent":["import React, {\r\n  Component\r\n} from 'react'\r\nimport {\r\n  Button,\r\n  Pagination,\r\n  Form,\r\n  Modal,\r\n  Input,\r\n  message\r\n} from 'antd';\r\nimport IconFont from '../../../../iconfont/font';\r\nimport {\r\n  Link,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport './Clerk.less';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Temp extends Component {\r\n  constructor() { //构造函数\r\n    super();\r\n    this.listItems = \"\"; //  人员信息列表数据;\r\n    this.filterData = \"\"; // 过滤后的数据;\r\n    this.itemsName = \" \";\r\n    // From 表单渲染时候的英文;\r\n    this.state = {\r\n      data: '',\r\n      storeData: \"\",\r\n      current: 1,\r\n      refresh: true,\r\n      visible: false,\r\n    }\r\n  }\r\n  getData() { //请求数据函数\r\n    fetch(`http://localhost:2000/pers/clerks`, {\r\n        method: 'GET'\r\n      })\r\n      .then(res => res.json())\r\n      .then(\r\n        data => {\r\n          this.setState({\r\n            data: data.data,\r\n            storeData: data.data\r\n          })\r\n        })\r\n  }\r\n  componentDidMount() {\r\n    //挂载前,请求数据函数\r\n    this.getData();\r\n  }\r\n  EditClick(index) {\r\n    // e.preventDefault();\r\n    console.log(index);\r\n    // pathname:'/pers/clerksDetails?num='+index,\r\n    // state:this.state.data[0].ClerkData.filter(e=>e.num==index)\r\n    // let vcode =[{aa:1}]\r\n    this.props.history.push({ //将此条完整人员信息藏在state中\r\n      pathname: \"/pers/clerksDetails\",\r\n      state: this.state.data[0].ClerkData.filter(e => e.num == index),\r\n      search: '?num=' + index\r\n    });\r\n    // this.props.history.push('/pers/clerksDetails?num='+index);\r\n    // this.props.history.push('/pers/clerksDetails?num='+index);\r\n    // this.props.location.state=1111\r\n    // console.log(this.props)\r\n  }\r\n  renderFunc = (ele) => { //人员信息列表部分渲染;\r\n      return ( <\r\n        tr key = {\r\n          ele.num\r\n        }\r\n        id = {\r\n          ele.num\r\n        } >\r\n        <\r\n        td > {\r\n          ele.num\r\n        } < /td> <\r\n        td > {\r\n          ele.name\r\n        } < /td> <\r\n        td > {\r\n          ele.sex\r\n        } < /td> <\r\n        td > {\r\n          ele.cardNum\r\n        } < /td> <\r\n        td > {\r\n          ele.birthday\r\n        } < /td> <\r\n        td > {\r\n          ele.age\r\n        } < /td> <\r\n        td > {\r\n          ele.hiredate\r\n        } < /td> <\r\n        td > {\r\n          ele.jobTitle\r\n        } < /td> <\r\n        td > {\r\n          ele.state\r\n        } < /td> <\r\n        td >\r\n        <\r\n        Button type = \"primary\"\r\n        size = \"small\"\r\n        // href={`/pers/clerksDetails?num=${ele.num}`}\r\n        ghost = \"true\"\r\n        onClick = {\r\n          this.EditClick.bind(this, ele.num)\r\n        }\r\n        style = {\r\n          {\r\n            marginRight: 10,\r\n            fontSize: 13,\r\n            width: 60,\r\n            height: 25,\r\n            borderRadius: 5\r\n          }\r\n        } >\r\n        <\r\n        span > 编辑 < /span> <\r\n        /Button> <\r\n        Button type = \"primary\"\r\n        size = \"small\"\r\n        onClick = {\r\n          () => {\r\n            this.deleteInfo(ele.num)\r\n          }\r\n        }\r\n        style = {\r\n          {\r\n            fontSize: 13,\r\n            width: 60,\r\n            height: 25,\r\n            borderRadius: 5\r\n          }\r\n        } >\r\n        删除 < /Button> <\r\n        /td> <\r\n        /tr>)\r\n      }\r\n      ClerksInfo(data) {\r\n        if (data) {\r\n          // 过滤例子： [32, 33, 16, 40].filter((a)=> a<40&a>20) \r\n          // 根据页码渲染当前页\r\n          // 对返回\r\n          // 把数据length传入底部页码组件,一共几页根据组件内设置每页items数量,自动生成\r\n          if (data[0].ClerkData.length === 1) {\r\n            this.listItems = data[0].ClerkData.map(this.renderFunc)\r\n          } else {\r\n            // 如果为完整数据对数据进行筛选后显示;\r\n            // 根据页码判断后结果,显示内容;\r\n            this.listItems = data[0].ClerkData.filter((e, index) =>\r\n              index >= 5 * (this.state.current - 1) && index < 5 * this.state.current\r\n            ).map(this.renderFunc)\r\n            if (!this.listItems.length) {\r\n              let temp = this.state.current * 1\r\n              this.setState({\r\n                current: temp - 1\r\n              })\r\n            }\r\n          }\r\n          return ( < tbody > {\r\n              this.listItems\r\n            } < /tbody>)\r\n          }\r\n        }\r\n        ChangePage(page) { //<Pagination/>组件自带回调函数\r\n          this.setState({\r\n            current: page\r\n          }) // 使用setState的 \"回调函数\" 解决异步问题\r\n\r\n          // setState为异步  上面console以后 => setState为异步 => 先执行下面console \r\n\r\n          // 解决this.setState可能会引发不必要的渲染(renders) \r\n          // https://www.cnblogs.com/lgp142332/p/7270047.html\r\n        }\r\n        /* \r\n           问题：首次render也符合return中的判断,导致不渲染了;\r\n\r\n        shouldComponentUpdate(nextProps, nextState){ \r\n           解决this.setState可能引发不必要的渲染;\r\n           导致初始render也不渲染了;\r\n           return this.state.page !== nextState.page;\r\n          } \r\n         */\r\n        handleSearchClick(e) {\r\n          /* \r\n            步骤：\r\n               0. 操作数据之前将数据存为两份一份进行操作(渲染组件),一份完整数据预留查找使用;\r\n               1. 获取input内的value数值;  let value=document.getElementById(\"indexName\").value;\r\n               2. 使用filter把不符合条件的过滤掉,剩下符合条件内容;   this.state.data[0].ClerkData.filter((ele)=>ele.name===\"李旭\");\r\n               3. 让母数据的ClerkData直接等于筛选后的子数据,解决渲染方法没法操作问题;\r\n          */\r\n          let value = document.getElementById(\"indexName\").value.trim();\r\n          let result = this.state.storeData[0].ClerkData.filter((ele) => ele.name === value)\r\n\r\n          if (result.length) {\r\n            let temp = JSON.parse(JSON.stringify(this.state.data));\r\n            temp[0].ClerkData = result;\r\n            this.setState({\r\n              data: temp\r\n            }, () => {\r\n              this.ClerksInfo(this.state.data)\r\n              // console.log(this.state.data)\r\n            })\r\n          } else {\r\n            this.error()\r\n            this.getData() //如果结果不存在重新请求数据,也可以提前把数据存在\r\n          }\r\n          //筛选完成后的数据\r\n        }\r\n        // --------------------   添加人员信息部分组件    ---------------------------\r\n        addInfo(e) {\r\n          e.preventDefault();\r\n          this.setState({ //控制modal\r\n            visible: true,\r\n          });\r\n        }\r\n        deleteInfo(num) {\r\n          let obj = {\r\n            num\r\n          };\r\n          // console.log(JSON.stringify(obj))\r\n          fetch(`http://localhost:2000/pers?act=deleteClerks`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(obj)\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n              // 后台返回数据后页面是否渲染???\r\n              this.setState({\r\n                data: data.data,\r\n                storeData: data.data\r\n              })\r\n            })\r\n\r\n        }\r\n        handleOk = (e) => {\r\n          // 通过回调函数将前端表单内容发送到后台;\r\n          //加上提交验证,组件自带方法\r\n          this.props.form.validateFields((errors, values) => {\r\n            if (!!errors) { // 出现报错时判断函数\r\n              message.error('Error!')\r\n            } else {\r\n              //验证成功,向后台发送数据;\r\n              //向后台发送数据;\r\n              fetch(`http://localhost:2000/pers?act=addClerks`, {\r\n                  method: 'POST',\r\n                  headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify(this.props.form.getFieldsValue())\r\n                })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                  // 后台返回数据后页面是否渲染???\r\n                  this.setState({\r\n                    data: data.data,\r\n                    storeData: data.data\r\n                  })\r\n                })\r\n              // console.log(this.state)\r\n              message.success('Successfully!')\r\n              this.setState({\r\n                visible: false,\r\n              });\r\n\r\n            }\r\n          });\r\n\r\n        }\r\n        handleCancel = (e) => {\r\n          e.preventDefault();\r\n          this.setState({\r\n            visible: false,\r\n          });\r\n        }\r\n        error = () => {\r\n          message.error(\"It doesn't exist !\");\r\n        };\r\n        handleResetClick() {\r\n          document.getElementById(\"indexName\").value = \"\"\r\n          this.setState({\r\n            current: 1\r\n          })\r\n\r\n          this.getData() //如果结果不存在重新请求数据,也可以提前把数据存在\r\n        }\r\n\r\n        render() {\r\n          let Page = null;\r\n          let {\r\n            data\r\n          } = this.state;\r\n          const {\r\n            resetFields,\r\n            getFieldDecorator\r\n          } = this.props.form;\r\n          //  --------------------    表单部分    ---------------\r\n          const formItemLayout = { //样式\r\n            // span是整体左移 pull是label左移   \r\n            labelCol: {\r\n              xs: {\r\n                span: 24\r\n              },\r\n              offset: 2,\r\n              sm: {\r\n                span: 6\r\n              }\r\n            }, //左侧 offset:3\r\n            wrapperCol: {\r\n              span: 10\r\n            }, //input 长度控制\r\n          };\r\n          if (data) {\r\n            //  底部页码组件\r\n            Page = < Pagination\r\n            defaultCurrent = {\r\n              1\r\n            }\r\n            pageSize = {\r\n              5\r\n            }\r\n            total = {\r\n              data[0].ClerkData.length\r\n            }\r\n            onChange = {\r\n              this.ChangePage.bind(this)\r\n            }\r\n            style = {\r\n              {\r\n                marginRight: 30,\r\n                marginTop: 25,\r\n                float: \"right\"\r\n              }\r\n            }\r\n            />\r\n\r\n            //  目的给Form.Item 规范命名让其和数据key值相同\r\n            //  获取所有key值,num渲染时候不需要num,使用时候给删除掉\r\n          }\r\n          const FormElement = function () {\r\n            if (this.state.data) {\r\n              let titleProps = {\r\n                num: \"工号\",\r\n                name: \"姓名\",\r\n                sex: \"性别\",\r\n                cardNum: \"身份证号\",\r\n                birthday: \"出生年月\",\r\n                age: \"年龄\",\r\n                hiredate: \"入职时间\",\r\n                jobTitle: \"职位\",\r\n                state: \"状态\"\r\n              }\r\n              this.itemsName = Object.keys(titleProps).filter(e => e !== \"num\");\r\n              return ( <\r\n                Form > {\r\n                  this.itemsName.map((ele, index) =>\r\n                    <\r\n                    FormItem {\r\n                      ...formItemLayout\r\n                    }\r\n                    key = {\r\n                      index\r\n                    }\r\n                    label = {\r\n                      titleProps[this.itemsName[index]]\r\n                    }\r\n                    hasFeedback >\r\n                    {\r\n                      getFieldDecorator(this.itemsName[index], {\r\n                        rules: [{\r\n                          required: true,\r\n                          min: 1,\r\n                          message: '输入内容至少为 1 个字符',\r\n                          pattern: new RegExp(/.+/g),\r\n                        }]\r\n                      })( <\r\n                        Input placeholder = {\r\n                          \"......\"\r\n                        }\r\n                        />\r\n                      )\r\n                    } <\r\n                    /FormItem>\r\n                  )\r\n                } <\r\n                /Form>\r\n              )\r\n            }\r\n          }\r\n\r\n          return ( <\r\n            section className = \"clerk-info\" > {\r\n              /*   员工信息组件  */ } <\r\n            div className = \"app-container\" >\r\n            <\r\n            div className = \"el-serch-wrap\" >\r\n            <\r\n            div className = \"el-title-body\" >\r\n            <\r\n            Form >\r\n            <\r\n            div >\r\n            <\r\n            IconFont type = \"mall-doc-glass\"\r\n            style = {\r\n              {\r\n                fontSize: 16,\r\n                marginRight: 5\r\n              }\r\n            }\r\n            /> <\r\n            span > 筛选检索 < /span> <\r\n            Button className = \"btn\"\r\n            onClick = {\r\n              () => {\r\n                this.handleSearchClick()\r\n              }\r\n            } >\r\n            查询结果 < /Button> <\r\n            Button className = \"btn\"\r\n            style = {\r\n              {\r\n                color: \"#1890ff\",\r\n                marginRight: 20\r\n              }\r\n            }\r\n            ghost onClick = {\r\n              this.handleResetClick.bind(this)\r\n            } >\r\n            重置 < /Button> <\r\n            /div> <\r\n            div className = \"el-form-item\" >\r\n            <\r\n            span > 输入检索: < /span> <\r\n            input type = \"text\"\r\n            placeholder = \"请输入姓名\"\r\n            id = \"indexName\" >\r\n            <\r\n            /input> <\r\n            /div> <\r\n            /Form> <\r\n            /div> <\r\n            /div> <\r\n            div className = \"el-title\" >\r\n            <\r\n            div className = \"el-title-body\" >\r\n            <\r\n            IconFont type = \"mall-doc-list\"\r\n            style = {\r\n              {\r\n                fontSize: 16,\r\n                marginRight: 5\r\n              }\r\n            }\r\n            /> <\r\n            span > 数据列表 < /span> <\r\n            button className = \"add\"\r\n            style = {\r\n              {\r\n                margin: -4\r\n              }\r\n            }\r\n            onClick = {\r\n              this.addInfo.bind(this)\r\n            } >\r\n            添加人员信息 <\r\n            /button>\r\n\r\n            <\r\n            Modal afterClose = {\r\n              () => resetFields()\r\n            }\r\n            title = \"店员信息添加\"\r\n            visible = {\r\n              this.state.visible\r\n            }\r\n            onOk = {\r\n              this.handleOk\r\n            }\r\n            onCancel = {\r\n              this.handleCancel\r\n            } >\r\n            {\r\n              /* 添加人员信息表单组件*/ } {\r\n              FormElement.bind(this)()\r\n            } <\r\n            /Modal> <\r\n            /div> <\r\n            /div> <\r\n            main className = \"table-container\" >\r\n            <\r\n            table cellPadding = \"0\"\r\n            cellSpacing = \"0\"\r\n            style = {\r\n              {\r\n                width: \"100%\"\r\n              }\r\n            } >\r\n            <\r\n            thead >\r\n            <\r\n            tr >\r\n            <\r\n            th > 工号 < /th> <\r\n            th > 姓名 < /th> <\r\n            th > 性别 < /th> <\r\n            th > 身份证号 < /th> <\r\n            th > 出生年月 < /th> <\r\n            th > 年龄 < /th> <\r\n            th > 入职时间 < /th> <\r\n            th > 职位 < /th> <\r\n            th > 状态 < /th> <\r\n            th > 操作 < /th> <\r\n            /tr> <\r\n            /thead> {\r\n              this.ClerksInfo(this.state.data)\r\n            } <\r\n            /table> <\r\n            /main> {\r\n              Page\r\n            } <\r\n            /div> <\r\n            /section>\r\n          )\r\n        }\r\n      }\r\n      const WrappedDemo = Form.create({\r\n        name: 'validate_other'\r\n      })(Temp);\r\n\r\n      export default withRouter(WrappedDemo)\r\n      // export default Temp"]},"metadata":{},"sourceType":"module"}