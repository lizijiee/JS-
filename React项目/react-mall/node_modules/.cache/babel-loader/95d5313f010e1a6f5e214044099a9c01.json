{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport AnnotationShape from './annotation-shape';\nimport { pluckNumber, clampNumber } from '../../../../fc-core/src/lib';\nvar DEFAULT_POLYGON_SIDES = 5,\n    DEFAULT_ANGLE_START = 0;\n\nvar PolygonAnnotation =\n/*#__PURE__*/\nfunction (_AnnotationShape) {\n  _inherits(PolygonAnnotation, _AnnotationShape);\n\n  function PolygonAnnotation() {\n    _classCallCheck(this, PolygonAnnotation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PolygonAnnotation).apply(this, arguments));\n  }\n\n  _createClass(PolygonAnnotation, [{\n    key: \"getName\",\n    value: function getName() {\n      return 'polygon';\n    }\n  }, {\n    key: \"configureAttributes\",\n    value: function configureAttributes() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(PolygonAnnotation.prototype), \"configureAttributes\", this).call(this, a);\n\n      var b = this,\n          c = b.rawConfig;\n      b.config.sides = pluckNumber(clampNumber(c.sides, 3), DEFAULT_POLYGON_SIDES), b.config.startAngle = pluckNumber(parseFloat(c.startAngle), DEFAULT_ANGLE_START), b.config.xRadius = pluckNumber(parseFloat(c.radius), 0), b.config.elementType = 'polypath';\n    }\n  }, {\n    key: \"updateAttr\",\n    value: function updateAttr() {\n      var a,\n          b = this,\n          c = b.config,\n          d = c.calculatedAttrs;\n      a = [c.sides, pluckNumber(d.x, b.getScaledVal(c.x, !0)), pluckNumber(d.y, b.getScaledVal(c.y, !1)), b.getScaledVal(c.xRadius), c.startAngle, 0], b._setConfig('attr', {\n        polypath: a\n      });\n    }\n  }, {\n    key: \"_getAnnotationAttrs\",\n    value: function _getAnnotationAttrs() {\n      var a = this,\n          b = a.config,\n          c = a._getConfig('attr') || {},\n          d = b.sides,\n          e = b.x,\n          f = b.y,\n          g = b.color,\n          h = b.startAngle,\n          i = b.borderColor,\n          j = b.borderThickness,\n          k = b.dashArrayStr,\n          l = b.xRadius;\n      return c.fill = g, c.stroke = i, c['stroke-width'] = j, c['stroke-dasharray'] = k, c.polypath = c.polypath || [d, a.getScaledVal(e, !0), a.getScaledVal(f, !1), a.getScaledVal(l), h, 0], c;\n    }\n  }]);\n\n  return PolygonAnnotation;\n}(AnnotationShape);\n\nexport default PolygonAnnotation;","map":null,"metadata":{},"sourceType":"module"}