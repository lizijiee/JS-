{"ast":null,"code":"import { UNDEF, BLANK } from '../lib';\nimport { triggerEvent } from '../event-api';\nimport { getDepsByType, getDep } from '../dependency-manager';\nimport { priorityList } from '../schedular';\nimport GlobalStore from './global-store';\n\nvar percentRegex = /\\%/,\n    globalStore = new GlobalStore(),\n    handleContainerResize = function () {\n  var a,\n      b,\n      c = {},\n      d = function d() {\n    var e,\n        f,\n        g,\n        h,\n        i,\n        j,\n        k,\n        l,\n        m = 0,\n        n = parseInt(b.options.resizeTrackingInterval, 10) || 300,\n        o = {},\n        p = function p() {\n      o.itemVar._containerOffsetW = o.parentEle.offsetWidth, o.itemVar._containerOffsetH = o.parentEle.offsetHeight;\n    };\n\n    for (e in c) {\n      m += 1, f = c[e], g = f.jsVars, i = f.ref, !f.disposed && (h = i && i.parentNode) && (j = i.style) && (percentRegex.test(j.width) || percentRegex.test(j.height)) ? (k = h.offsetWidth, l = h.offsetHeight, !g.resizeLocked && (k && g._containerOffsetW !== k || l && g._containerOffsetH !== l) && (f.resizeTo && f.resizeTo(), o.itemVar = g, o.parentEle = h, setTimeout(p, 1))) : (delete c[e], m -= 1);\n    }\n\n    a = m ? setTimeout(d, n) : clearTimeout(a);\n  };\n\n  return function (e, f, g) {\n    var h = e.jsVars,\n        i = f || e.ref && e.ref.parentNode || {};\n    b = g, h._containerOffsetW = i.parentNode.offsetWidth, h._containerOffsetH = i.parentNode.offsetHeight, c[e.id] = e, a || (a = setTimeout(d, parseInt(g.options.resizeTrackingInterval, 10) || 300));\n  };\n}();\n\nfunction createChart(a, b, c, d, e, f, g, h) {\n  var i,\n      j,\n      k,\n      l,\n      m,\n      n,\n      o = b.apiInstance,\n      p = b.jsVars,\n      q = percentRegex.test(b.width) ? c.offsetWidth : b.width,\n      r = percentRegex.test(b.height) ? c.offsetHeight : b.height;\n  if (c.FusionCharts = a.items[b.id], b.__state.beforedrawFired = !0, d = d || b.chartType(), i = getDep(d, 'chartapi'), !i && (k = getDep(d, 'maps')) && (i = getDep('maps', 'chartapi'), l = !0), o && o.getName().toLowerCase() !== d.toLowerCase() && (o.remove({\n    instant: !0\n  }), o = UNDEF), o && o.getName().toLowerCase() === d.toLowerCase() || (o = b.apiInstance = new i(), globalStore.attachChild(o, 'chartAPI')), l) for (var _a in k = k[0], k) {\n    k.hasOwnProperty(_a) && (o.config[_a] = k[_a]);\n  }\n  if (o.addToEnv('core-options', a.options), o.addToEnv('chartInstance', b), o.addToEnv('chart', o), o.addToEnv('chart-container', c), o.addToEnv('eventListeners', []), o.addToEnv('chartWidth', q), o.addToEnv('chartHeight', r), o._removeWaitingJobs(), o.setDummyEImethods(d), o.config.origRenderWidth = b.__state.renderedWidth, o.config.origRenderHeight = b.__state.renderedHeight, 'base' === d || f) isDataErroneous(b, h), setChartMsgStyle(b, g), o.createBaseComponent(), o.getFromEnv('animationManager').setAnimationState('chartmessage'), o.setChartMessage(f, b, c), o.drawChartMessage();else if (!b.__state.resize) {\n    if (o.getFromEnv('toolTipController') || (m = getDep('ToolTipController'), n = new m(c), o.addToEnv('toolTipController', n)), o.disposeChartStyleSheet(), c.jsVars = b.jsVars, j = o.eiMethods, b.ref = c, p.type = d, j && 'string' != typeof j) for (var _a2 in j) {\n      c[_a2] = j[_a2];\n    }\n    !h && b.__state.newDataArrived ? triggerEvent('beforedataload', b, {\n      data: b.getChartData(getDepsByType('transcoder').JSON, !0, !0)\n    }, void 0, dataloadSuccess, dataloadCancel) : dataloadSuccess.call(b, void 0, void 0, h);\n  } else o.asyncDraw();\n  b.disposed || invokeCallback(b, c, e, {\n    hasRendered: !0,\n    container: c\n  }, a);\n}\n\nfunction dataloadSuccess(a, b) {\n  var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n  var d = this,\n      e = d.apiInstance,\n      f = d.jsVars && d.jsVars.themeObject && d.jsVars.themeObject.getThemedJSONData() || d.getChartData(getDepsByType('transcoder').JSON, !0, !0),\n      g = f.data;\n  c || triggerEvent('dataloaded', d, {}, [d.id]), d.__state && (d.__state.newDataArrived = !1), e.addToEnv('dataSource', g), e.addToEnv('chart-attrib', g.chart), e._checkInvalidData() || e._checkInvalidSpecificData() ? (e.getContainer('parentgroup') && e.getContainer('parentgroup').hide(), e.createBaseComponent(), e.getFromEnv('animationManager').setAnimationState('chartmessage'), e.setChartMessage(), e.drawChartMessage(), d._sudoSetState(1), triggerEvent('nodatatodisplay', d, {}, [d.id])) : (e.config.hasChartMessage = !1, e.setData(g));\n}\n\nfunction dataloadCancel(a) {\n  triggerEvent('dataloadcancelled', a, {}, [a.id]), a.__state && (a.__state.newDataArrived = !1);\n}\n\nfunction postRenderHooks(a, b, c) {\n  a.apiInstance.addJob('fire-rendered', function () {\n    if ((a.apiInstance.config.hasRendered = c.hasRendered, 'waiting' === a._getState() || 'function' != typeof b || b(c), 'waiting' === a._getState() || (triggerEvent('drawcomplete', a, {\n      width: a.jsVars.width,\n      height: a.jsVars.height,\n      drawCount: a.jsVars.drawCount,\n      displayingMessage: 'waiting' === a._getState() || 'error' === a._getState(),\n      renderer: 'javascript'\n    }, [a.id]), a.__state && delete a.__state.beforedrawFired), !a.disposed) && 'ready' === a._getState()) {\n      if (a.__state.rendering && triggerEvent('rendered', a, {\n        renderer: 'javascript'\n      }, [a.id]), a.disposed) return;\n      if (triggerEvent('renderComplete', a, {\n        width: a.jsVars.width,\n        height: a.jsVars.height,\n        drawCount: a.jsVars.drawCount,\n        renderer: 'javascript'\n      }), a.disposed) return;\n      a.__state && delete a.__state.rendering, a.__state.renderComplete = !0;\n    }\n  }, priorityList.postRender);\n}\n\nfunction invokeCallback(a, b, c, d, e) {\n  var f = a.jsVars,\n      g = a.apiInstance,\n      i = f.fcObj,\n      j = i.width,\n      k = i.height,\n      h = f.overlayButton;\n  f.width = g.getFromEnv('chartWidth'), f.height = g.getFromEnv('chartHeight'), f.container = b, f.hcObj = a, f.hcObj.container = b, f.instanceAPI = g, a.hasRendered && f.overlayButtonActive && h && (h.innerHTML = BLANK, h.appendChild(document.createTextNode(f.overlayButtonMessage)), a.container.appendChild(h)), (/\\%/g.test(j) || /\\%/g.test(k)) && b && b.parentNode && !e.options.preventTrackResize && handleContainerResize(a, b, e), postRenderHooks(a, c, d);\n}\n\nfunction isDataErroneous(a) {\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n  var c = a.options.dataErroneous;\n  return !!c && (a.__state.dataReady = !1, b || triggerEvent('dataInvalid', a, {\n    error: c\n  }, UNDEF, function () {\n    triggerEvent('dataxmlinvalid', a, {}, [a.id]);\n  }), !0);\n}\n\nfunction setChartMsgStyle(a) {\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  a._chartMessageImageStyle = b.image || {}, a._chartMessageStyle = b.message || {};\n}\n\nexport { globalStore };\nexport default createChart;","map":null,"metadata":{},"sourceType":"module"}