{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\Add\\\\Add.js\";\nimport React, { Component } from 'react';\nimport \"./Step/Add.less\";\nimport { Steps, Button, message, Form, Modal } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport StepOne from './Step/StepOne';\nimport StepTwo from './Step/StepTwo';\nimport StepThree from './Step/StepThree';\nvar confirm = Modal.confirm;\nvar Step = Steps.Step;\n\nvar success = function success() {\n  message.success('The information is changed');\n};\n\nvar steps = [{\n  title: '填写菜品信息',\n  content: '填写商品信息'\n}, {\n  title: '填写菜品促销',\n  content: 'Second-content'\n}, {\n  title: '填写商品属性',\n  content: 'Last-content'\n}];\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp(props) {\n    var _storeData;\n\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Temp).call(this, props));\n    _this.state = {\n      current: 0,\n      categoryName: null,\n      storeData: (_storeData = {\n        activityTag: \"\",\n        categoryName: \"主食\",\n        currentPrice: 13,\n        spuName: \"酱油炒饭\",\n        unit: \"份\",\n        activityStock: 0,\n        originPrice: 13,\n        realStock: 999,\n        saleVolume: 40,\n        url: undefined,\n        折扣: false,\n        推荐: false,\n        热销: false,\n        count: 0,\n        praiseNum: 0\n      }, _defineProperty(_storeData, \"saleVolume\", 40), _defineProperty(_storeData, \"spuDesc\", \"\"), _storeData)\n    };\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"next\",\n    value: function next() {\n      //下一页\n      var current = this.state.current + 1;\n      this.setState({\n        current: current\n      });\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      //上一页\n      var current = this.state.current - 1;\n      this.setState({\n        current: current\n      }); //回调函数\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      // 表单内容提交组件,校验并获取一组输入域的值与 Error;\n      // 获取编辑后内容判断是否有变化没有有变化发出请求;\n      // 修改数据库,更新redux; (重新获取数据);\n      this.props.form.validateFields(function (errors, values) {\n        if (!!errors) {\n          message.error('验证失败!');\n          return;\n        }\n\n        var storeData = Object.assign({}, _this2.state.storeData, _this2.props.form.getFieldsValue());\n\n        _this2.setState({\n          storeData: storeData\n        });\n\n        _this2.next();\n      });\n    }\n  }, {\n    key: \"showConfirm\",\n    value: function showConfirm() {\n      var _this3 = this;\n\n      //最后验证，前端验证后发给后端，进行请求\n      // 先获取修改后的数值,在判断是否修改数据库\n      // let storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue())\n      // this.setState({\n      //     storeData\n      // })\n      confirm({\n        wrapClassName: '提示',\n        title: '提示:',\n        content: '是否提交数据',\n        okText: '确认',\n        cancelText: '取消',\n        icon: \"info-circle\",\n        bodyStyle: {\n          \".ant-modal-confirm-btns\": {\n            marginTop: 0\n          }\n        },\n        onOk: function () {\n          var _onOk = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (_this3.isObjectValueEqual(_this3.props.location.state.ele, _this3.state.storeData)) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return fetch(\"http://localhost:2000/pers?act=editFood&&num=\".concat(_this3.state.storeData.spuId), {\n                      method: 'POST',\n                      // mode: 'cors',\n                      // credentials: 'include', // cookie\n                      headers: {\n                        'Content-Type': 'application/json'\n                      },\n                      body: JSON.stringify(_this3.state.storeData)\n                    }).then(function (res) {\n                      return res.json();\n                    }).then(function (data) {\n                      success(); // this.setState({ ...data })\n                      //   console.log(data)\n                    });\n\n                  case 3:\n                    _context.next = 6;\n                    break;\n\n                  case 5:\n                    //进行修改直接跳转到列表页\n                    success();\n\n                  case 6:\n                    _this3.props.history.push({\n                      //退回到列表页\n                      pathname: \"/food/list\"\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          function onOk() {\n            return _onOk.apply(this, arguments);\n          }\n\n          return onOk;\n        }()\n        /* \r\n        onCancel() {  //取消回调函数\r\n          console.log('Cancel');\r\n        }, \r\n        */\n\n      });\n    }\n  }, {\n    key: \"selest\",\n    value: function selest(params) {\n      //控制步骤条对应内容\n      if (this.state.storeData) {\n        // console.log(this.state.storeData)\n        switch (params) {\n          case 0:\n            return React.createElement(StepOne, {\n              props: this.props,\n              handleSubmit: this.handleSubmit,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136\n              },\n              __self: this\n            });\n            break;\n\n          case 1:\n            return React.createElement(StepTwo, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            });\n            break;\n\n          case 2:\n            return React.createElement(StepThree, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            });\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var current = this.state.current;\n      return React.createElement(\"main\", {\n        className: \"food-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"food-add-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Steps, {\n        current: current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, steps.map(function (item) {\n        return React.createElement(Step, {\n          key: item.title,\n          title: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"form-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.selest(current)), React.createElement(\"div\", {\n        className: \"steps-action\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, current > 0 && React.createElement(Button, {\n        style: {\n          textAlign: \"left\",\n          marginRight: 30\n        },\n        onClick: function onClick() {\n          return _this4.prev();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"\\u4E0A\\u4E00\\u6B65\\uFF0C\", steps[current].title), current === steps.length - 1 && React.createElement(Button, {\n        style: {},\n        type: \"primary\",\n        onClick: this.showConfirm.bind(this) // onClick={(e) => {\n        //     message.success('Processing complete!')\n        //     this.Submit(e)\n        // }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"\\u5B8C\\u6210\\uFF0C\\u63D0\\u4EA4\\u83DC\\u54C1\"), current < steps.length - 1 && React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          margin: \"0 auto\",\n          textAlign: \"right\"\n        },\n        onClick: function onClick(e) {\n          _this4.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\u4E0B\\u4E00\\u6B65\\uFF0C\", steps[current].title) // 下一步，填写商品信息\n      )));\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar createForm = Form.create;\nexport default withRouter(createForm()(Temp)); //将Form表单,通过props获取到各种方法","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\Add\\Add.js"],"names":["React","Component","Steps","Button","message","Form","Modal","withRouter","StepOne","StepTwo","StepThree","confirm","Step","success","steps","title","content","Temp","props","state","current","categoryName","storeData","activityTag","currentPrice","spuName","unit","activityStock","originPrice","realStock","saleVolume","url","undefined","折扣","推荐","热销","count","praiseNum","setState","e","form","validateFields","errors","values","error","Object","assign","getFieldsValue","next","wrapClassName","okText","cancelText","icon","bodyStyle","marginTop","onOk","isObjectValueEqual","location","ele","fetch","spuId","method","headers","body","JSON","stringify","then","res","json","data","history","push","pathname","params","handleSubmit","map","item","selest","textAlign","marginRight","prev","length","showConfirm","bind","margin","createForm","create"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,IAAjC,EAAuCC,KAAvC,QAAoD,MAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,IAAMC,OAAO,GAAGL,KAAK,CAACK,OAAtB;AACA,IAAMC,IAAI,GAAGV,KAAK,CAACU,IAAnB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBT,EAAAA,OAAO,CAACS,OAAR,CAAgB,4BAAhB;AACH,CAFD;;AAGA,IAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,KAAK,EAAE,QADI;AAEXC,EAAAA,OAAO,EAAE;AAFE,CAAD,EAGX;AACCD,EAAAA,KAAK,EAAE,QADR;AAECC,EAAAA,OAAO,EAAE;AAFV,CAHW,EAMX;AACCD,EAAAA,KAAK,EAAE,QADR;AAECC,EAAAA,OAAO,EAAE;AAFV,CANW,CAAd;;IAWMC,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CADA;AAETC,MAAAA,YAAY,EAAE,IAFL;AAGTC,MAAAA,SAAS;AACLC,QAAAA,WAAW,EAAE,EADR;AAELF,QAAAA,YAAY,EAAE,IAFT;AAGLG,QAAAA,YAAY,EAAE,EAHT;AAILC,QAAAA,OAAO,EAAE,MAJJ;AAKLC,QAAAA,IAAI,EAAE,GALD;AAOLC,QAAAA,aAAa,EAAE,CAPV;AAQLC,QAAAA,WAAW,EAAE,EARR;AASLC,QAAAA,SAAS,EAAE,GATN;AAULC,QAAAA,UAAU,EAAE,EAVP;AAWLC,QAAAA,GAAG,EAAEC,SAXA;AAYLC,QAAAA,EAAE,EAAE,KAZC;AAaLC,QAAAA,EAAE,EAAE,KAbC;AAcLC,QAAAA,EAAE,EAAE,KAdC;AAgBLC,QAAAA,KAAK,EAAE,CAhBF;AAiBLC,QAAAA,SAAS,EAAE;AAjBN,mDAkBO,EAlBP,0CAmBI,EAnBJ;AAHA,KAAb;AAFe;AA2BlB;;;;2BACM;AAAC;AACJ,UAAMjB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAArC;AACA,WAAKkB,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACH;;;2BACM;AAAC;AACJ,UAAMA,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAArC;AACA,WAAKkB,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAPA;AAAF,OAAd,EAFG,CAEuB;AAC7B;;;iCAEYmB,C,EAAG;AAAA;;AACZ;AACA;AACA;AACC,WAAKrB,KAAL,CAAWsB,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,MAAD,EAASC,MAAT,EAAoB;AAChD,YAAI,CAAC,CAACD,MAAN,EAAc;AACVtC,UAAAA,OAAO,CAACwC,KAAR,CAAc,OAAd;AACA;AACH;;AACD,YAAItB,SAAS,GAAGuB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAI,CAAC3B,KAAL,CAAWG,SAA7B,EAAwC,MAAI,CAACJ,KAAL,CAAWsB,IAAX,CAAgBO,cAAhB,EAAxC,CAAhB;;AACA,QAAA,MAAI,CAACT,QAAL,CAAc;AACVhB,UAAAA,SAAS,EAATA;AADU,SAAd;;AAGA,QAAA,MAAI,CAAC0B,IAAL;AACH,OAVA;AAWJ;;;kCAGa;AAAA;;AAAE;AACZ;AACA;AACA;AACA;AACA;AACArC,MAAAA,OAAO,CAAC;AACJsC,QAAAA,aAAa,EAAE,IADX;AAEJlC,QAAAA,KAAK,EAAE,KAFH;AAGJC,QAAAA,OAAO,EAAE,QAHL;AAIJkC,QAAAA,MAAM,EAAE,IAJJ;AAKJC,QAAAA,UAAU,EAAE,IALR;AAMJC,QAAAA,IAAI,EAAE,aANF;AAOJC,QAAAA,SAAS,EAAE;AACP,qCAA2B;AAAEC,YAAAA,SAAS,EAAE;AAAb;AADpB,SAPP;AAUJC,QAAAA,IAAI;AAAA;AAAA;AAAA,mCAAE;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG,MAAI,CAACC,kBAAL,CAAwB,MAAI,CAACtC,KAAL,CAAWuC,QAAX,CAAoBtC,KAApB,CAA0BuC,GAAlD,EAAuD,MAAI,CAACvC,KAAL,CAAWG,SAAlE,CADH;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAEQqC,KAAK,wDAAiD,MAAI,CAACxC,KAAL,CAAWG,SAAX,CAAqBsC,KAAtE,GACP;AACIC,sBAAAA,MAAM,EAAE,MADZ;AAEI;AACA;AACAC,sBAAAA,OAAO,EAAE;AACL,wCAAgB;AADX,uBAJb;AAOIC,sBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,MAAI,CAAC9C,KAAL,CAAWG,SAA1B;AAPV,qBADO,CAAL,CAWD4C,IAXC,CAWI,UAAAC,GAAG;AAAA,6BAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,qBAXP,EAYDF,IAZC,CAaE,UAAAG,IAAI,EAAI;AACJxD,sBAAAA,OAAO,GADH,CAEJ;AACA;AACH,qBAjBH,CAFR;;AAAA;AAAA;AAAA;;AAAA;AAoBO;AACLA,oBAAAA,OAAO;;AArBT;AAuBF,oBAAA,MAAI,CAACK,KAAL,CAAWoD,OAAX,CAAmBC,IAAnB,CAAwB;AAAG;AACvBC,sBAAAA,QAAQ,EAAE;AADU,qBAAxB;;AAvBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2BJ;;;;;;AArCI,OAAD,CAAP;AA2CH;;;2BACMC,M,EAAQ;AAAI;AACf,UAAI,KAAKtD,KAAL,CAAWG,SAAf,EAA0B;AACtB;AACA,gBAAQmD,MAAR;AACI,eAAK,CAAL;AACI,mBAAO,oBAAC,OAAD;AAAS,cAAA,KAAK,EAAE,KAAKvD,KAArB;AAA4B,cAAA,YAAY,EAAE,KAAKwD,YAA/C;AAA6D,cAAA,KAAK,EAAE,KAAKvD,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;;AACJ,eAAK,CAAL;AACI,mBAAO,oBAAC,OAAD;AAAS,cAAA,KAAK,EAAE,KAAKD,KAArB;AAA4B,cAAA,KAAK,EAAE,KAAKC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;;AACJ,eAAK,CAAL;AACI,mBAAO,oBAAC,SAAD;AAAW,cAAA,KAAK,EAAE,KAAKD,KAAvB;AAA8B,cAAA,KAAK,EAAE,KAAKC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AATR;AAWH;AAEJ;;;6BAEQ;AAAA;;AAAA,UACGC,OADH,GACe,KAAKD,KADpB,CACGC,OADH;AAEL,aACI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,KAAK,CAAC6D,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAAC7D,KAAhB;AAAuB,UAAA,KAAK,EAAE6D,IAAI,CAAC7D,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAd,CADL,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAK8D,MAAL,CAAYzD,OAAZ,CAFL,CALJ,EASI;AAAK,QAAA,SAAS,EAAC,cAAf;AACI,QAAA,KAAK,EAAE;AAAE0D,UAAAA,SAAS,EAAE;AAAb,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGQ1D,OAAO,GAAG,CAAV,IAEI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE;AACH0D,UAAAA,SAAS,EAAE,MADR;AAEHC,UAAAA,WAAW,EAAE;AAFV,SADX;AAKI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,IAAL,EAAN;AAAA,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMSlE,KAAK,CAACM,OAAD,CAAL,CAAeL,KANxB,CALZ,EAgBQK,OAAO,KAAKN,KAAK,CAACmE,MAAN,GAAe,CAA3B,IACG,oBAAC,MAAD;AACC,QAAA,KAAK,EAAE,EADR;AAEC,QAAA,IAAI,EAAC,SAFN;AAGC,QAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAHV,CAKH;AACA;AACA;AACA;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAjBX,EA6BQ/D,OAAO,GAAGN,KAAK,CAACmE,MAAN,GAAe,CAAzB,IACG,oBAAC,MAAD;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,KAAK,EAAE;AACHG,UAAAA,MAAM,EAAE,QADL;AAEHN,UAAAA,SAAS,EAAE;AAFR,SAFR;AAMC,QAAA,OAAO,EAAE,iBAACvC,CAAD,EAAO;AACZ,UAAA,MAAI,CAACmC,YAAL,CAAkBnC,CAAlB;AACH,SARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAQSzB,KAAK,CAACM,OAAD,CAAL,CAAeL,KARxB,CA9BX,CAsCkD;AAtClD,OATJ,CADJ,CADJ;AAwDH;;;;EAtLcd,S;;AAyLnB,IAAMoF,UAAU,GAAGhF,IAAI,CAACiF,MAAxB;AACA,eAAe/E,UAAU,CAAC8E,UAAU,GAAGpE,IAAH,CAAX,CAAzB,C,CAA6C","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./Step/Add.less\";\r\nimport { Steps, Button, message, Form, Modal } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport StepOne from './Step/StepOne';\r\nimport StepTwo from './Step/StepTwo';\r\nimport StepThree from './Step/StepThree';\r\n\r\nconst confirm = Modal.confirm;\r\nconst Step = Steps.Step;\r\nconst success = () => {\r\n    message.success('The information is changed');\r\n};\r\nconst steps = [{\r\n    title: '填写菜品信息',\r\n    content: '填写商品信息',\r\n}, {\r\n    title: '填写菜品促销',\r\n    content: 'Second-content',\r\n}, {\r\n    title: '填写商品属性',\r\n    content: 'Last-content',\r\n}];\r\n\r\nclass Temp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            current: 0,\r\n            categoryName: null,\r\n            storeData: {\r\n                activityTag: \"\",\r\n                categoryName: \"主食\",\r\n                currentPrice: 13,\r\n                spuName: \"酱油炒饭\",\r\n                unit: \"份\",\r\n\r\n                activityStock: 0,\r\n                originPrice: 13,\r\n                realStock: 999,\r\n                saleVolume: 40,\r\n                url: undefined,\r\n                折扣: false,\r\n                推荐: false,\r\n                热销: false,\r\n\r\n                count: 0,\r\n                praiseNum: 0,\r\n                saleVolume: 40,\r\n                spuDesc: \"\",\r\n            }\r\n        };\r\n    }\r\n    next() {//下一页\r\n        const current = this.state.current + 1;\r\n        this.setState({ current })\r\n    }\r\n    prev() {//上一页\r\n        const current = this.state.current - 1;\r\n        this.setState({ current })//回调函数\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        // 表单内容提交组件,校验并获取一组输入域的值与 Error;\r\n        // 获取编辑后内容判断是否有变化没有有变化发出请求;\r\n        // 修改数据库,更新redux; (重新获取数据);\r\n         this.props.form.validateFields((errors, values) => {\r\n            if (!!errors) {\r\n                message.error('验证失败!')\r\n                return;\r\n            }\r\n            let storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue())\r\n            this.setState({\r\n                storeData\r\n            })\r\n            this.next()\r\n        });\r\n    };\r\n    \r\n\r\n    showConfirm() { //最后验证，前端验证后发给后端，进行请求\r\n        // 先获取修改后的数值,在判断是否修改数据库\r\n        // let storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue())\r\n        // this.setState({\r\n        //     storeData\r\n        // })\r\n        confirm({\r\n            wrapClassName: '提示',\r\n            title: '提示:',\r\n            content: '是否提交数据',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            icon: \"info-circle\",\r\n            bodyStyle: {\r\n                \".ant-modal-confirm-btns\": { marginTop: 0 }\r\n            },\r\n            onOk: async () => { // 箭头函数解决this\r\n                if (!this.isObjectValueEqual(this.props.location.state.ele, this.state.storeData)) {\r\n                    await fetch(`http://localhost:2000/pers?act=editFood&&num=${this.state.storeData.spuId}`,\r\n                        {\r\n                            method: 'POST',\r\n                            // mode: 'cors',\r\n                            // credentials: 'include', // cookie\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify(this.state.storeData)\r\n                        }\r\n                    )\r\n                        .then(res => res.json())\r\n                        .then(\r\n                            data => {\r\n                                success()\r\n                                // this.setState({ ...data })\r\n                                //   console.log(data)\r\n                            })\r\n                } else { //进行修改直接跳转到列表页\r\n                    success();\r\n                }\r\n                this.props.history.push({  //退回到列表页\r\n                    pathname: \"/food/list\",\r\n                });\r\n            },\r\n            /* \r\n            onCancel() {  //取消回调函数\r\n              console.log('Cancel');\r\n            }, \r\n            */\r\n        })\r\n    }\r\n    selest(params) {   //控制步骤条对应内容\r\n        if (this.state.storeData) {\r\n            // console.log(this.state.storeData)\r\n            switch (params) {\r\n                case 0:\r\n                    return <StepOne props={this.props} handleSubmit={this.handleSubmit} state={this.state} />;\r\n                    break;\r\n                case 1:\r\n                    return <StepTwo props={this.props} state={this.state} />;\r\n                    break;\r\n                case 2:\r\n                    return <StepThree props={this.props} state={this.state} />;\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { current } = this.state;\r\n        return (\r\n            <main className=\"food-add\">\r\n                <div className=\"food-add-wrap\">\r\n                    <Steps current={current}   >\r\n                        {steps.map(item => <Step key={item.title} title={item.title} />\r\n                        )}\r\n                    </Steps>\r\n                    <div className=\"form-wrap\">\r\n                        {/* 分步组件 */}\r\n                        {this.selest(current)}\r\n                    </div>\r\n                    <div className=\"steps-action\"\r\n                        style={{ textAlign: \"center\" }}>\r\n                        {\r\n                            current > 0\r\n                            && (\r\n                                <Button\r\n                                    style={{\r\n                                        textAlign: \"left\",\r\n                                        marginRight: 30\r\n                                    }}\r\n                                    onClick={() => this.prev()}>\r\n                                    上一步，{steps[current].title}\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        {\r\n                            current === steps.length - 1\r\n                            && <Button\r\n                                style={{}}\r\n                                type=\"primary\"\r\n                                onClick={this.showConfirm.bind(this)}\r\n\r\n                            // onClick={(e) => {\r\n                            //     message.success('Processing complete!')\r\n                            //     this.Submit(e)\r\n                            // }}\r\n                            >完成，提交菜品</Button>\r\n                        }\r\n                        {\r\n                            current < steps.length - 1\r\n                            && <Button\r\n                                type=\"primary\"\r\n                                style={{\r\n                                    margin: \"0 auto\",\r\n                                    textAlign: \"right\",\r\n                                }}\r\n                                onClick={(e) => {\r\n                                    this.handleSubmit(e)\r\n                                }}>下一步，{steps[current].title}</Button>// 下一步，填写商品信息\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst createForm = Form.create;\r\nexport default withRouter(createForm()(Temp))//将Form表单,通过props获取到各种方法"]},"metadata":{},"sourceType":"module"}