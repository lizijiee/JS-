{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Person\\\\Clerk\\\\EditClick\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { Form, Select, InputNumber, Button, Input } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Edit.less';\nvar Option = Select.Option;\nvar FormItem = Form.Item;\nvar ButtonGroup = Button.Group;\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Temp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.normFile = function (e) {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"handleReset\",\n    value: function handleReset(e) {\n      //resetFields重置表单内容\n      e.preventDefault();\n      this.props.props.form.resetFields();\n    }\n  }, {\n    key: \"userExists\",\n    value: function userExists(rule, value, callback) {\n      //当做validator函数来用,用来作为判断条件\n      if (!value) {\n        callback();\n      } else {\n        setTimeout(function () {\n          if (value === '宫爆鸡丁') {\n            callback([new Error('抱歉，该菜名已被占用。')]);\n          } else {\n            callback();\n          }\n        }, 800);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.location.state); //数据\n      //分页组件提取出来，先进行一步数据是否获得到的判断，因为render渲染多次，前几次没有数据\n      //  姓名\t性别\t身份证号\t出生年月\t年龄\t入职时间\t职位\t状态\n      // return (<div>21321321</div>)\n\n      var data = this.props.state.data;\n      var nameProps = getFieldProps('name', {\n        //第一个参数为ID,第二个为options\n        initialValue: data.name,\n        rules: [{\n          required: true,\n          min: 1,\n          message: '菜品名至少为 1 个字符'\n        }, {\n          validator: this.userExists.bind(this)\n        }]\n      });\n      var selectProps = getFieldProps('select', {\n        initialValue: data.select,\n        rules: [{\n          required: true,\n          message: '请选择菜品类型'\n        }]\n      });\n      var textareaProps = getFieldProps('textarea', {\n        //textarea 为ID\n        initialValue: data.textarea // rules: [//判断条件\n        //   {  message: '输入内容不能为空' },\n        // ],\n\n      });\n      var priceProps = getFieldProps('price', {\n        //textarea 为ID\n        initialValue: data.price // rules: [//判断条件\n        //   {  message: '输入内容不能为空' },\n        // ],\n\n      });\n      var _this$props$props$for = this.props.props.form,\n          getFieldProps = _this$props$props$for.getFieldProps,\n          getFieldError = _this$props$props$for.getFieldError,\n          isFieldValidating = _this$props$props$for.isFieldValidating;\n      return React.createElement(\"section\", {\n        className: \"clerk-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u540D\\u79F0\\uFF1A\",\n        hasFeedback: true,\n        help: isFieldValidating('name') ? '校验中...' : (getFieldError('name') || []).join(', '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Input, Object.assign({}, nameProps, {\n        placeholder: \" \\u8F93\\u5165 \\u5BAB\\u7206\\u9E21\\u4E01 \\u770B\\u770B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u83DC\\u54C1\\u7C7B\\u578B\\uFF1A\"\n      }, formItemLayout, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Select, Object.assign({\n        style: {\n          width: 200\n        }\n      }, selectProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Option, {\n        value: \"\\u7279\\u8272\\u6C64\\u9762\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\u7279\\u8272\\u6C64\\u9762\"), React.createElement(Option, {\n        value: \"\\u9152\\u6C34\\u996E\\u6599\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\u9152\\u6C34\\u996E\\u6599\"), React.createElement(Option, {\n        value: \"\\u70E7\\u70E4\\u7CFB\\u5217\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"\\u70E7\\u70E4\\u7CFB\\u5217\"), React.createElement(Option, {\n        value: \"\\u7F8E\\u5473\\u76D6\\u996D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"\\u7F8E\\u5473\\u76D6\\u996D\"), React.createElement(Option, {\n        value: \"\\u5C0F\\u5403\\uFF0C\\u8089\\u5939\\u998D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"\\u5C0F\\u5403\\uFF0C\\u8089\\u5939\\u998D\"), React.createElement(Option, {\n        value: \"\\u6D77\\u9C9C\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"\\u6D77\\u9C9C\"))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u4EF7\\u683C\\uFF1A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(InputNumber, Object.assign({\n        style: {\n          width: 320\n        },\n        type: \"textarea\" // placeholder=\"菜品名称\"\n        ,\n        id: \"price\",\n        name: \"price\"\n      }, textareaProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        id: \"control-textarea\",\n        label: \"\\u83DC\\u54C1\\u4ECB\\u7ECD\\uFF1A\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"textarea\", Object.assign({\n        id: \"control-textarea\",\n        style: {\n          borderRadius: 6,\n          textAlign: \"left\",\n          verticalAlign: \"top\",\n          border: \"1px solid #d9d9d9\",\n          fontSize: 14,\n          lineHeight: \"20px\",\n          textIndent: \"1em\"\n        }\n      }, priceProps, {\n        placeholder: \"Please enter...\",\n        cols: \"45\",\n        rows: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        style: {\n          borderRadius: 15,\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleReset.bind(this),\n        style: {\n          marginLeft: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Reset\")))));\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar WrappedDemo = Form.create({\n  name: 'validate_other'\n})(Temp);\nexport default withRouter(WrappedDemo); // export default Temp","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Person\\Clerk\\EditClick\\Edit.js"],"names":["React","Component","Form","Select","InputNumber","Button","Input","Link","withRouter","Option","FormItem","Item","ButtonGroup","Group","Temp","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","resetFields","rule","value","callback","setTimeout","Error","location","state","data","nameProps","getFieldProps","initialValue","name","rules","required","min","message","validator","userExists","bind","selectProps","select","textareaProps","textarea","priceProps","price","getFieldError","isFieldValidating","formItemLayout","join","width","borderRadius","textAlign","verticalAlign","border","fontSize","lineHeight","textIndent","marginTop","handleReset","marginLeft","WrappedDemo","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  Form, Select, InputNumber, Button,Input\r\n} from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './Edit.less';\r\n\r\nconst { Option } = Select;\r\nconst FormItem = Form.Item;\r\nconst ButtonGroup = Button.Group;\r\n\r\nclass Temp extends Component {\r\n   handleReset(e) {\r\n    //resetFields重置表单内容\r\n    e.preventDefault();\r\n    this.props.props.form.resetFields();\r\n  };\r\n  userExists(rule, value, callback) {\r\n    //当做validator函数来用,用来作为判断条件\r\n    if (!value) {\r\n      callback();\r\n    } else {\r\n      setTimeout(() => {\r\n        if (value === '宫爆鸡丁') {\r\n          callback([new Error('抱歉，该菜名已被占用。')]);\r\n        } else {\r\n          callback();\r\n        }\r\n      }, 800);\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(this.props.location.state)//数据\r\n    //分页组件提取出来，先进行一步数据是否获得到的判断，因为render渲染多次，前几次没有数据\r\n    //  姓名\t性别\t身份证号\t出生年月\t年龄\t入职时间\t职位\t状态\r\n    // return (<div>21321321</div>)\r\n    const data = this.props.state.data;\r\n    const nameProps = getFieldProps('name', { //第一个参数为ID,第二个为options\r\n      initialValue: data.name,\r\n      rules: [\r\n        { required: true, min: 1, message: '菜品名至少为 1 个字符' },\r\n        { validator: this.userExists.bind(this) }\r\n      ]\r\n    });\r\n\r\n    const selectProps = getFieldProps('select', {\r\n      initialValue: data.select,\r\n      rules: [\r\n        { required: true, message: '请选择菜品类型' },\r\n      ],\r\n    });\r\n\r\n    const textareaProps = getFieldProps('textarea', {//textarea 为ID\r\n      initialValue: data.textarea,\r\n      // rules: [//判断条件\r\n      //   {  message: '输入内容不能为空' },\r\n      // ],\r\n    });\r\n    const priceProps = getFieldProps('price', {//textarea 为ID\r\n      initialValue: data.price,\r\n      // rules: [//判断条件\r\n      //   {  message: '输入内容不能为空' },\r\n      // ],\r\n    });\r\n    const { getFieldProps, getFieldError, isFieldValidating } = this.props.props.form;\r\n\r\n    return (\r\n      <section className=\"clerk-info\">\r\n        <div className=\"wrap\">\r\n          <Form >\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label=\"菜品名称：\"\r\n              hasFeedback\r\n              help={isFieldValidating('name') ? '校验中...' : (getFieldError('name') || []).join(', ')}\r\n            >\r\n              <Input {...nameProps} placeholder=\" 输入 宫爆鸡丁 看看\"\r\n              />\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              label=\"菜品类型：\"\r\n              {...formItemLayout}\r\n              required\r\n            >\r\n              <Select style={{ width: 200 }}\r\n                {...selectProps}\r\n              >\r\n                <Option value=\"特色汤面\">特色汤面</Option>\r\n                <Option value=\"酒水饮料\">酒水饮料</Option>\r\n                <Option value=\"烧烤系列\">烧烤系列</Option>\r\n                <Option value=\"美味盖饭\">美味盖饭</Option>\r\n                <Option value=\"小吃，肉夹馍\">小吃，肉夹馍</Option>\r\n                <Option value=\"海鲜\" disabled>海鲜</Option>\r\n              </Select>\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label=\"菜品价格：\"\r\n            >\r\n              {/*\r\n          给input设置名字和规则方法  之 其二\r\n         {getFieldDecorator('note', {\r\n            rules: [{ required: true, message: 'Please input your note!' }],\r\n          })(\r\n            <Input />\r\n          )} */}\r\n              <InputNumber\r\n                style={{ width: 320 }}\r\n                type=\"textarea\"\r\n                // placeholder=\"菜品名称\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n                {...textareaProps}\r\n              />\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              id=\"control-textarea\"\r\n              label=\"菜品介绍：\"\r\n              {...formItemLayout}\r\n            >\r\n              <textarea id=\"control-textarea\" style={{\r\n                borderRadius: 6, textAlign: \"left\", verticalAlign: \"top\", border: \"1px solid #d9d9d9\", fontSize: 14, lineHeight: \"20px\", textIndent: \"1em\"\r\n              }}\r\n                {...priceProps}\r\n                placeholder=\"Please enter...\"\r\n                cols=\"45\"\r\n                rows=\"4\" />\r\n            </FormItem>\r\n            <ButtonGroup style={{ borderRadius: 15, marginTop: 30 }}>\r\n              <Button\r\n                onClick={this.handleReset.bind(this)}\r\n                style={{ marginLeft: 400 }}>Reset</Button>\r\n            </ButtonGroup>\r\n          </Form >\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\nconst WrappedDemo = Form.create({ name: 'validate_other' })(Temp);\r\n\r\nexport default withRouter(WrappedDemo)\r\n// export default Temp"]},"metadata":{},"sourceType":"module"}