{"ast":null,"code":"import { isCanvasElemSupported } from './lib-svg-to-canvas';\nimport Ajax from '../../../fc-core/src/ajax';\n\nvar extractNonDataImageFromSVG = function extractNonDataImageFromSVG(a) {\n  var b, c, d, e, f, g;\n  b = /(<image [^\\>]*href=[\"']([^\\>'\"]*)[\"'][^\\>]*\\>)/g, c = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/i, d = [];\n\n  do {\n    e = b.exec(a), null !== e && (f = e[1], g = e[2], !c.test(g) && d.push(f));\n  } while (e && null !== e);\n\n  return d;\n},\n    removeImagesWithNonDataURL = function removeImagesWithNonDataURL(a) {\n  var b, c, d;\n\n  for (b = extractNonDataImageFromSVG(a), c = 0; c < b.length; c++) {\n    d = b[c], a = a.replace(d, '');\n  }\n\n  return a;\n},\n    extractNonDataURLFromSVG = function extractNonDataURLFromSVG(a, b) {\n  var c, d, e, f, g;\n  b = !(b !== void 0) || b, c = /<image [^\\>]*href=[\"']([^\\>'\"]*)[\"'][^\\>]*\\>/g, d = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/i, e = [];\n\n  do {\n    if (f = c.exec(a), null !== f) {\n      if (g = f[1], d.test(g)) continue;\n      b && (g = parseUrl(g).href), e.push(g);\n    }\n  } while (f && null !== f);\n\n  return e;\n},\n    parseUrl = function parseUrl(a) {\n  var b = document.createElement('div');\n  return b.innerHTML = '<a></a>', b.firstChild.href = a, b.innerHTML = b.innerHTML, b.firstChild;\n},\n    EXPORTACTION = {\n  DOWNLOAD: 'download',\n  SAVE: 'save',\n  DOWNLOADSAVE: 'download-save'\n},\n    EXPORTMODE = {\n  CLIENT: 'client',\n  SERVER: 'server',\n  AUTO: 'auto'\n},\n    EXPORTFORMAT = {\n  PNG: 'png',\n  SVG: 'svg',\n  JPEG: 'jpeg',\n  JPG: 'jpg',\n  PDF: 'pdf',\n  XLS: 'xls'\n},\n    LOGMODE = {\n  CLIENT: 'client',\n  SERVER: 'server',\n  AUTO: 'auto'\n},\n    createExportActionOldString = function createExportActionOldString(a) {\n  var b = {\n    download: EXPORTACTION.DOWNLOAD,\n    \"download-save\": EXPORTACTION.DOWNLOAD,\n    save: EXPORTACTION.SAVE\n  }[a];\n  return b;\n},\n    objCacheFunctions = function () {\n  var a, b, c, d;\n  return a = {}, a.cacheCompleted = !1, b = function b(_b, c, d) {\n    var e, f, g, h;\n    if (c = c || !1, e = extractNonDataURLFromSVG(_b), f = e.length, isCanvasElemSupported() && !c && f) for (g = 0, h = 0; h < f; h++) {\n      (function () {\n        var b, c, i;\n        return b = h, c = e[b], c in a ? (g++, void (f === g && (a.cacheCompleted = !0, d()))) : void (i = new Image(), i.crossOrigin = '', i.onload = function () {\n          var b, e, h;\n          b = document.createElement('canvas'), b.width = i.width, b.height = i.height, e = b.getContext('2d'), e.drawImage(this, 0, 0);\n\n          try {\n            h = b.toDataURL('image/png'), a[c] = {\n              loaded: !0,\n              notCORS: !0,\n              imageUri: h\n            };\n          } catch (b) {\n            a[c] = {\n              loaded: !0,\n              notCORS: !1\n            };\n          } finally {\n            g++, f === g && (a.cacheCompleted = !0, d());\n          }\n        }, i.onerror = function () {\n          a[c] = {\n            loaded: !1\n          }, g++, f === g && (a.cacheCompleted = !0, d());\n        }, i.src = c);\n      })();\n    } else d();\n  }, c = function c(b) {\n    return a[b];\n  }, d = function d() {\n    return a.cacheCompleted;\n  }, {\n    cacheAllImages: b,\n    getImageCachedDetails: c,\n    isCacheAllImagesCompleted: d\n  };\n}(),\n    cacheAllImages = objCacheFunctions.cacheAllImages,\n    getImageCachedDetails = objCacheFunctions.getImageCachedDetails,\n    isCacheAllImagesCompleted = objCacheFunctions.isCacheAllImagesCompleted,\n    makeImageUrlsAbsolute = function makeImageUrlsAbsolute(a) {\n  return a = a.replace(/<image [^\\>]*\\>/gi, function (a) {\n    return a = a.replace(/(:href=\")([^\"]*)(\")/gi, function (a, b, c, d) {\n      return b + parseUrl(c).href + d;\n    }), a;\n  }), a;\n},\n    embedImagesWithNonDataURL = function embedImagesWithNonDataURL(a) {\n  var b, c, d, e;\n\n  for (a = makeImageUrlsAbsolute(a), b = extractNonDataURLFromSVG(a), c = 0; c < b.length; c++) {\n    d = b[c], e = getImageCachedDetails(d), void 0 !== e && e.loaded && e.notCORS && e.imageUri && (a = a.replace(d, e.imageUri));\n  }\n\n  return a;\n},\n    replaceImagesWithNonDataUrl = function replaceImagesWithNonDataUrl(a) {\n  return a = embedImagesWithNonDataURL(a), a = removeImagesWithNonDataURL(a), a;\n},\n    hasUndownloadableImage = function hasUndownloadableImage(a) {\n  return a = embedImagesWithNonDataURL(a), a !== removeImagesWithNonDataURL(a);\n},\n    logChartsWithoutCheck = function logChartsWithoutCheck(a, b) {\n  var c = new Ajax(function () {}, function () {});\n\n  for (var _c in a) {\n    a.hasOwnProperty(_c) && (a[_c] = encodeURIComponent(a[_c]));\n  }\n\n  c.post(b.logHandler, a);\n},\n    logCharts = function logCharts(a, b) {\n  b.logEnabled && b.logMode !== LOGMODE.SERVER && logChartsWithoutCheck(a, b);\n},\n    addSVGHeader = function addSVGHeader(a) {\n  return '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">' + a;\n},\n    svgStrToDataUrl = function svgStrToDataUrl(a) {\n  var b = addSVGHeader(a);\n  return b = 'data:image/svg+xml;base64,' + window.btoa(window.unescape(encodeURIComponent(b))), b;\n};\n\nexport { EXPORTACTION, EXPORTMODE, EXPORTFORMAT, LOGMODE, createExportActionOldString, objCacheFunctions, cacheAllImages, getImageCachedDetails, isCacheAllImagesCompleted, makeImageUrlsAbsolute, embedImagesWithNonDataURL, replaceImagesWithNonDataUrl, hasUndownloadableImage, removeImagesWithNonDataURL, extractNonDataURLFromSVG, parseUrl, extractNonDataImageFromSVG, logCharts, svgStrToDataUrl };","map":null,"metadata":{},"sourceType":"module"}