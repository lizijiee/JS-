{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Person\\\\Member\\\\Member.js\";\nimport React, { Component } from 'react';\nimport { Button, Pagination, message } from 'antd';\nimport IconFont from '../../../../iconfont/font';\nimport './Member.less';\nimport { withRouter } from 'react-router-dom'; //  -----------------     redux      ----------\n\nimport * as actionCreators from '../../../../redux/actions/actions';\nimport PropTypes from 'prop-types'; //不用npm i\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\n\nvar ClerksMember =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClerksMember, _Component);\n\n  function ClerksMember() {\n    var _this;\n\n    _classCallCheck(this, ClerksMember);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClerksMember).call(this));\n\n    _this.renderItems = function (ele) {\n      //信息内容列表部分渲染;\n      return React.createElement(\"tr\", {\n        key: ele.Id,\n        id: ele.Id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, ele.Id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, ele.user), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, ele.phoneNum), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, ele.vipNum), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, ele.registerTime), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, ele.state), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, ele.password), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, ele.balance), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\",\n        ghost: \"true\",\n        onClick: _this.EditClick.bind(_assertThisInitialized(_this), ele.Id) //当前点击tr的索引\n        ,\n        style: {\n          marginRight: 10,\n          fontSize: 13,\n          width: 60,\n          height: 25,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\")), React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: function onClick() {\n          _this.deleteInfo(ele);\n        },\n        style: {\n          fontSize: 13,\n          width: 60,\n          height: 25,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")));\n    };\n\n    _this.Page = null; //用于包装Pagination组件;\n\n    _this.state = {\n      // 当前页码\n      current: 1,\n      storeData: []\n    };\n    return _this;\n  }\n\n  _createClass(ClerksMember, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //重复工作尽量用生命周期\n      this.props.fetchMemmberInfo(); //请求会员信息数据\n\n      console.log(this.props); //  this.setState({\n      //         storeData:this.props.data\n      //  })    \n    } //-------------------------- 点击 查询 事件  --------------------\n\n  }, {\n    key: \"handleSearchClick\",\n    value: function handleSearchClick() {\n      var value = document.getElementById(\"indexName\").value.trim(); //获取输入值\n\n      var storeData = this.state.storeData;\n\n      if (!value) {\n        var error = function error() {\n          message.error(\"It doesn't exist !\");\n        };\n\n        error();\n      } else {\n        console.log(storeData);\n        storeData = storeData.data[0].UsersData.filter(function (ele) {\n          return ele.user === value;\n        }); //筛选出结果\n\n        this.setState({\n          storeData: storeData\n        });\n      }\n    } //-------------------------- 底部页码组件部分(以下) --------------------\n\n    /* \r\n      组件声明变量:\r\n           this.Page 和 this.state.current:1\r\n        复用注意：首先判断数据格式     \r\n    */\n\n  }, {\n    key: \"ChangePage\",\n    value: function ChangePage(page) {\n      // 使用<Pagination/>组件自带回调函数来设置页码对应渲染内容\n      this.setState({\n        current: page\n      }); // 注意setState为异步,回调函数问题\n    }\n  }, {\n    key: \"renderPage\",\n    value: function renderPage(data) {\n      //page第二步骤;\n      if (Object.keys(data).length) {\n        var length = data.data[0].UsersData.length;\n        this.Page = React.createElement(Pagination //  底部页码组件\n        , {\n          defaultCurrent: 1,\n          pageSize: 5,\n          total: length,\n          onChange: this.ChangePage.bind(this),\n          style: {\n            marginRight: 30,\n            marginTop: 25,\n            float: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n        return this.Page;\n      }\n    } //-------------------------- 底部页码组件部分(以上) --------------------\n    //-------------------------- 列表内容组件部分(以下) --------------------\n\n  }, {\n    key: \"EditClick\",\n    value: function EditClick(index) {\n      //点击编辑 => 事件 => 需要使用withRouter包一下 => 得到history\n      var data = this.state.data.data;\n      this.props.history.push({\n        pathname: \"/pers/memberDetails\",\n        state: data[0].UsersData.filter(function (e) {\n          return e.Id == index;\n        }),\n        search: '?num=' + index\n      });\n    }\n  }, {\n    key: \"deleteInfo\",\n    value: function deleteInfo(obj) {\n      var _this2 = this;\n\n      //obj => 删除对象信息 \n      fetch(\"http://localhost:2000/pers?act=deleteMember\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        // 后台返回数据后页面是否渲染???\n        _this2.props.fetchMemmberInfo(); //调用redux方法:请求数据\n\n      });\n    }\n  }, {\n    key: \"render\",\n    //-------------------------- 列表内容组件部分(以上) --------------------\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.props); // let {data}=this.props;\n\n      var data = this.state.storeData; // console.log(this.props)\n\n      var Items = null; // console.log(\"Items  进行渲染啦！！！！！！！\"); \n      // if(this.props){\n      //   this.setState({\n      //     data:this.props.data\n      //   })\n      // }\n\n      if (Object.keys(data).length) {\n        //数据不是{}进入执行,防止render多余渲染\n        console.log(); // this.state.storeData=data;\n\n        console.log(this.state); // console.log(this.state)\n        //  this.setState({\n        //     data:data\n        //   })\n\n        if (data.length === 1) {\n          //只有一条数据,渲染条件,数据格式也在这里进行修改;\n          console.log(1111111);\n          Items = data.map(this.renderItems);\n        } else {\n          //完整数据,通过对页码判断 得到需要渲染数据\n          //按照数组类数据index进行筛选,按照id筛选导致删除后页面筛选有空\n          Items = data.data[0].UsersData.filter(function (e, index) {\n            return index >= 5 * (_this3.state.current - 1) && index < 5 * _this3.state.current;\n          }).map(this.renderItems);\n        }\n      }\n\n      return React.createElement(\"section\", {\n        className: \"clerk-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-serch-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-glass\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"\\u7B5B\\u9009\\u68C0\\u7D22\"), React.createElement(\"button\", {\n        className: \"add\",\n        onClick: function onClick() {\n          _this3.handleSearchClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\\u7ED3\\u679C\")), React.createElement(\"div\", {\n        className: \"el-form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"\\u8F93\\u5165\\u68C0\\u7D22:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n        id: \"indexName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"el-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-list\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"\\u6570\\u636E\\u5217\\u8868\"))), React.createElement(\"main\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        cellPadding: \"0\",\n        cellSpacing: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"\\u5E8F\\u53F7\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"\\u4F1A\\u5458\\u59D3\\u540D\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"\\u4F1A\\u5458\\u5361\\u53F7\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"\\u5F00\\u5361\\u65F6\\u95F4\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"\\u4F1A\\u5458\\u72B6\\u6001\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"\\u521D\\u59CB\\u5BC6\\u7801\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"\\u4F59\\u989D\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"\\u64CD\\u4F5C\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, Items))), this.renderPage(data)));\n    }\n  }]);\n\n  return ClerksMember;\n}(Component);\n/*\r\n//类型检查\r\n ClerksMember.propTypes={\r\n    num:PropTypes.number.isRequired,\r\n    onDecrement:PropTypes.func.isRequired,\r\n    onIncrement:PropTypes.func.isRequired\r\n}\r\n*/\n//使用connect\n//需要触发什么行为\n//连接组件\n\n\nexport default withRouter(connect(function (state) {\n  return {\n    data: state.memberData\n  };\n}, //将redux变量赋值到组件,成组件变量Data\nfunction (dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n})(ClerksMember));\n/*   \r\n   export function addTodo(text) {\r\n      return {\r\n        type: 'ADD_TODO',\r\n        text\r\n      }\r\n    }\r\n    \r\n    export function removeTodo(id) {\r\n      return {\r\n        type: 'REMOVE_TODO',\r\n        id\r\n      }\r\n    }\r\n    {\r\n      addTodo : text => \r\n       { \r\n         type: 'ADD_TODO',\r\n         text\r\n       },\r\n      removeTodo : id => {\r\n         type: 'REMOVE_TODO',\r\n         id\r\n       }\r\n   }\r\n   {\r\n      addTodo : text => dispatch(addTodo('text'));\r\n      removeTodo : id => dispatch(removeTodo('id'));\r\n   } */","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Person\\Member\\Member.js"],"names":["React","Component","Button","Pagination","message","IconFont","withRouter","actionCreators","PropTypes","connect","bindActionCreators","ClerksMember","renderItems","ele","Id","user","phoneNum","vipNum","registerTime","state","password","balance","EditClick","bind","marginRight","fontSize","width","height","borderRadius","deleteInfo","Page","current","storeData","props","fetchMemmberInfo","console","log","value","document","getElementById","trim","error","data","UsersData","filter","setState","page","Object","keys","length","ChangePage","marginTop","float","index","history","push","pathname","e","search","obj","fetch","method","headers","body","JSON","stringify","then","res","json","Items","map","handleSearchClick","renderPage","memberData","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Pagination, message } from 'antd';\r\nimport IconFont from '../../../../iconfont/font'\r\nimport './Member.less';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//  -----------------     redux      ----------\r\nimport * as actionCreators from '../../../../redux/actions/actions';\r\nimport PropTypes from 'prop-types';//不用npm i\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from \"redux\"\r\nclass ClerksMember extends Component {\r\n    constructor() { \r\n        super()\r\n        this.Page = null  //用于包装Pagination组件;\r\n        this.state = { // 当前页码\r\n          current: 1,\r\n          storeData: [],\r\n        }\r\n }\r\ncomponentDidMount() {//重复工作尽量用生命周期\r\n      this.props.fetchMemmberInfo()\r\n          //请求会员信息数据\r\n         console.log(this.props)\r\n    //  this.setState({\r\n    //         storeData:this.props.data\r\n    //  })    \r\n }\r\n//-------------------------- 点击 查询 事件  --------------------\r\n handleSearchClick() {\r\n  let value = document.getElementById(\"indexName\").value.trim();//获取输入值\r\n  let {storeData} = this.state;\r\n  if(!value){\r\n    const  error = () => {\r\n      message.error(\"It doesn't exist !\");\r\n    };\r\n    error()\r\n  }else{\r\n    console.log(storeData)\r\n    storeData = storeData.data[0].UsersData.filter((ele)=>ele.user===value);//筛选出结果\r\n    this.setState({\r\n      storeData\r\n    })\r\n  }\r\n}\r\n\r\n //-------------------------- 底部页码组件部分(以下) --------------------\r\n    /* \r\n      组件声明变量:\r\n           this.Page 和 this.state.current:1\r\n\r\n      复用注意：首先判断数据格式     \r\n    */\r\n  ChangePage(page) {\r\n      // 使用<Pagination/>组件自带回调函数来设置页码对应渲染内容\r\n       this.setState({ current: page })// 注意setState为异步,回调函数问题\r\n  }\r\n  renderPage(data){ //page第二步骤;\r\n    if (Object.keys(data).length) {\r\n       let length=data.data[0].UsersData.length;\r\n       this.Page = <Pagination  //  底部页码组件\r\n          defaultCurrent={1}\r\n          pageSize={5}\r\n          total={length}\r\n          onChange={this.ChangePage.bind(this)}\r\n          style={{\r\n            marginRight: 30, marginTop: 25, float: \"right\"\r\n          }} />\r\n         return this.Page\r\n      }\r\n  }\r\n  //-------------------------- 底部页码组件部分(以上) --------------------\r\n\r\n  //-------------------------- 列表内容组件部分(以下) --------------------\r\n  EditClick(index){  \r\n    //点击编辑 => 事件 => 需要使用withRouter包一下 => 得到history\r\n    let {data}=this.state.data;\r\n    this.props.history.push({\r\n      pathname: \"/pers/memberDetails\",\r\n      state: data[0].UsersData.filter(e => e.Id == index),\r\n      search: '?num=' + index\r\n    });\r\n  }\r\n  deleteInfo(obj) {//obj => 删除对象信息 \r\n    fetch(`http://localhost:2000/pers?act=deleteMember`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(obj)\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // 后台返回数据后页面是否渲染???\r\n        this.props.fetchMemmberInfo()//调用redux方法:请求数据\r\n      })\r\n\r\n  }\r\n  renderItems = (ele) => {  //信息内容列表部分渲染;\r\n             return (\r\n              <tr key={ele.Id} id={ele.Id}>\r\n              <td>{ele.Id}</td>\r\n                <td>{ele.user}</td>\r\n                <td>{ele.phoneNum}</td>\r\n                <td>{ele.vipNum}</td>\r\n                <td>{ele.registerTime}</td>\r\n                <td>{ele.state}</td>\r\n                <td>{ele.password}</td>\r\n                <td>{ele.balance}</td>\r\n                <td>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    ghost=\"true\"\r\n                    onClick={this.EditClick.bind(this,ele.Id)}//当前点击tr的索引\r\n                    style={{ marginRight: 10, fontSize: 13, width: 60, height: 25, borderRadius: 5 }}\r\n                  >\r\n                    <span>编辑</span>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={()=>{this.deleteInfo(ele)}}\r\n                    style={{ fontSize: 13, width: 60, height: 25, borderRadius: 5 }}\r\n                  >删除</Button>\r\n                </td>\r\n              </tr>)\r\n  }\r\n  \r\n    //-------------------------- 列表内容组件部分(以上) --------------------\r\n  \r\n    render() {\r\n        console.log(this.props)\r\n        // let {data}=this.props;\r\n        let {storeData:data} = this.state;\r\n        // console.log(this.props)\r\n        let Items=null;\r\n        // console.log(\"Items  进行渲染啦！！！！！！！\"); \r\n        // if(this.props){\r\n        //   this.setState({\r\n        //     data:this.props.data\r\n        //   })\r\n        // }\r\n      if (Object.keys(data).length) {//数据不是{}进入执行,防止render多余渲染\r\n       console.log()\r\n        // this.state.storeData=data;\r\n        console.log(this.state)  \r\n        // console.log(this.state)\r\n        //  this.setState({\r\n        //     data:data\r\n        //   })\r\n      \r\n        if (data.length === 1) {//只有一条数据,渲染条件,数据格式也在这里进行修改;\r\n       console.log(1111111)\r\n         Items= data.map(this.renderItems)                    \r\n       } else {  //完整数据,通过对页码判断 得到需要渲染数据\r\n         //按照数组类数据index进行筛选,按照id筛选导致删除后页面筛选有空\r\n         Items = data.data[0].UsersData.filter((e,index) =>\r\n         index >= 5 * (this.state.current - 1) && index < 5 * this.state.current\r\n         ).map(this.renderItems)\r\n        \r\n       }\r\n     }       \r\n         return (\r\n            <section className=\"clerk-list\">\r\n                {/*   员工信息组件  */}\r\n                <div className=\"app-container\">\r\n                    <div className=\"el-serch-wrap\">\r\n                        <div className=\"el-title-body\">\r\n                            <div>\r\n                                <IconFont type=\"mall-doc-glass\" style={{ fontSize: 16, marginRight: 5 }} />\r\n                                <span>筛选检索</span>\r\n                                <button className=\"add\"\r\n                                onClick={()=>{this.handleSearchClick()}}\r\n                                >查询结果</button>\r\n                            </div>\r\n                            <div className=\"el-form-item\">\r\n                                <span>输入检索:</span>\r\n                                <input type=\"text\" placeholder=\"请输入姓名\" id=\"indexName\">\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"el-title\">\r\n                        <div className=\"el-title-body\">\r\n                            <IconFont type=\"mall-doc-list\" style={{ fontSize: 16, marginRight: 5 }} />\r\n                            <span>数据列表</span>\r\n                            {/* <button className=\"add\">添加人员信息</button> */}\r\n                        </div>\r\n                    </div>\r\n                    <main className=\"table-container\">\r\n                        <table cellPadding=\"0\" cellSpacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>序号</th>\r\n                                    <th>会员姓名</th>\r\n                                    <th>联系电话</th>\r\n                                    <th>会员卡号</th>\r\n                                    <th>开卡时间</th>\r\n                                    <th>会员状态</th>\r\n                                    <th>初始密码</th>\r\n                                    <th>余额</th>\r\n                                    <th>操作</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>{ Items }</tbody>\r\n                             </table>\r\n                    </main>\r\n                    {this.renderPage(data)}\r\n                </div>\r\n            </section>\r\n        \r\n         \r\n        )\r\n    }\r\n}\r\n/*\r\n//类型检查\r\n ClerksMember.propTypes={\r\n    num:PropTypes.number.isRequired,\r\n    onDecrement:PropTypes.func.isRequired,\r\n    onIncrement:PropTypes.func.isRequired\r\n}\r\n*/\r\n\r\n\r\n//使用connect\r\n\r\n//需要触发什么行为\r\n\r\n//连接组件\r\n    export default withRouter(  connect(\r\n    state => { return { data: state.memberData } },//将redux变量赋值到组件,成组件变量Data\r\n    dispatch => bindActionCreators(actionCreators,dispatch))(ClerksMember))\r\n\r\n  /*   \r\n     export function addTodo(text) {\r\n        return {\r\n          type: 'ADD_TODO',\r\n          text\r\n        }\r\n      }\r\n      \r\n      export function removeTodo(id) {\r\n        return {\r\n          type: 'REMOVE_TODO',\r\n          id\r\n        }\r\n      }\r\n      {\r\n        addTodo : text => \r\n         { \r\n           type: 'ADD_TODO',\r\n           text\r\n         },\r\n        removeTodo : id => {\r\n           type: 'REMOVE_TODO',\r\n           id\r\n         }\r\n     }\r\n     {\r\n        addTodo : text => dispatch(addTodo('text'));\r\n        removeTodo : id => dispatch(removeTodo('id'));\r\n     } */"]},"metadata":{},"sourceType":"module"}