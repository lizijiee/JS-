{"ast":null,"code":"import _objectSpread from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\List\\\\EditClick\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport \"./Step/Add.less\";\nimport { Steps, Button, message, Form, Modal } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport StepOne from './Step/StepOne';\nimport StepTwo from './Step/StepTwo';\nimport StepThree from './Step/StepThree';\nimport * as actionCreators from '../../../../redux/actions/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { reject, all } from 'q';\nimport { promises } from 'fs';\nvar confirm = Modal.confirm;\nvar Step = Steps.Step;\n\nvar success = function success() {\n  message.success('The information is changed');\n};\n\nvar steps = [{\n  title: '填写菜品信息',\n  content: '填写商品信息'\n}, {\n  title: '填写菜品促销',\n  content: 'Second-content'\n}, {\n  title: '填写商品属性',\n  content: 'Last-content'\n}];\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp(props) {\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Temp).call(this, props));\n    _this.state = {\n      current: 0,\n      storeData: null,\n      categoryName: null\n    };\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"next\",\n    value: function next() {\n      //下一页\n      var current = this.state.current + 1;\n      this.setState({\n        current: current\n      });\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      //上一页\n      var current = this.state.current - 1;\n      this.setState({\n        current: current\n      }); //回调函数\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setState({\n                  storeData: this.props.location.state.ele,\n                  categoryName: this.props.location.state.categoryName\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      // 表单内容提交组件,校验并获取一组输入域的值与 Error;\n      // 获取编辑后内容判断是否有变化没有有变化发出请求;\n      // 修改数据库,更新redux; (重新获取数据);\n      this.props.form.validateFields(function (errors, values) {\n        if (!!errors) {\n          message.error('验证失败!');\n          return;\n        }\n\n        var storeData = Object.assign({}, _this2.state.storeData, _this2.props.form.getFieldsValue());\n\n        _this2.setState({\n          storeData: storeData\n        });\n\n        _this2.next();\n      });\n    }\n  }, {\n    key: \"isObjectValueEqual\",\n    value: function isObjectValueEqual(a, b) {\n      //注释： 见人员信息管理组件\n      var aProps = Object.keys(a); // let bProps = Object.keys(b);  a、b的key值相同\n      //判断属性名的length是否一致\n      //表单两次提交内容对比不需要对length进行判断\n      //循环取出属性名，再判断属性值是否一致\n\n      for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        if (a[propName] + \"\" !== b[propName] + \"\") {\n          //\"\" 处理数据类型\n          return false; //进入后 => return 直接跳出下面不执行\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"showConfirm\",\n    value: function showConfirm() {\n      var _this3 = this;\n\n      //最后验证，前端验证后发给后端，进行请求\n      // 先获取修改后的数值,在判断是否修改数据库\n      // console.log(this.props.form.getFieldsValue())\n      var storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue());\n      this.setState({\n        storeData: storeData\n      });\n      confirm({\n        wrapClassName: '提示',\n        title: '提示:',\n        content: '是否提交数据',\n        okText: '确认',\n        cancelText: '取消',\n        icon: \"info-circle\",\n        bodyStyle: {\n          \".ant-modal-confirm-btns\": {\n            marginTop: 0\n          }\n        },\n        onOk: function () {\n          var _onOk = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2() {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (_this3.isObjectValueEqual(_this3.props.location.state.ele, _this3.state.storeData)) {\n                      _context2.next = 5;\n                      break;\n                    }\n\n                    _context2.next = 3;\n                    return fetch(\"http://localhost:2000/food?act=editFood&&spuId=\".concat(_this3.state.storeData.spuId), {\n                      method: 'POST',\n                      // mode: 'cors',\n                      // credentials: 'include', // cookie\n                      headers: {\n                        'Content-Type': 'application/json'\n                      },\n                      body: JSON.stringify(_this3.state.storeData)\n                    }).then(function (res) {\n                      return res.json();\n                    }).then(function (data) {\n                      success();\n\n                      _this3.setState(_objectSpread({}, data));\n\n                      console.log(data);\n                    });\n\n                  case 3:\n                    _context2.next = 6;\n                    break;\n\n                  case 5:\n                    //进行修改直接跳转到列表页\n                    success();\n\n                  case 6:\n                    _this3.props.history.push({\n                      //退回到列表页\n                      pathname: \"/food/list\"\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          function onOk() {\n            return _onOk.apply(this, arguments);\n          }\n\n          return onOk;\n        }()\n        /* \r\n        onCancel() {  //取消回调函数\r\n          console.log('Cancel');\r\n        }, \r\n        */\n\n      });\n    }\n  }, {\n    key: \"selest\",\n    value: function selest(params) {\n      //控制步骤条对应内容\n      if (this.state.storeData) {\n        // console.log(this.state.storeData)\n        switch (params) {\n          case 0:\n            return React.createElement(StepOne, {\n              props: this.props,\n              handleSubmit: this.handleSubmit,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            });\n            break;\n\n          case 1:\n            return React.createElement(StepTwo, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            });\n            break;\n\n          case 2:\n            return React.createElement(StepThree, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            });\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.props);\n      var current = this.state.current;\n      return React.createElement(\"main\", {\n        className: \"food-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"food-add-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Steps, {\n        current: current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, steps.map(function (item) {\n        return React.createElement(Step, {\n          key: item.title,\n          title: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"form-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.selest(current)), React.createElement(\"div\", {\n        className: \"steps-action\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, current > 0 && React.createElement(Button, {\n        style: {\n          textAlign: \"left\",\n          marginRight: 30\n        },\n        onClick: function onClick() {\n          return _this4.prev();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"\\u4E0A\\u4E00\\u6B65\\uFF0C\", steps[current].title), current === steps.length - 1 && React.createElement(Button, {\n        style: {},\n        type: \"primary\",\n        onClick: this.showConfirm.bind(this) // onClick={(e) => {\n        //     message.success('Processing complete!')\n        //     this.Submit(e)\n        // }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"\\u5B8C\\u6210\\uFF0C\\u63D0\\u4EA4\\u83DC\\u54C1\"), current < steps.length - 1 && React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          margin: \"0 auto\",\n          textAlign: \"right\"\n        },\n        onClick: function onClick(e) {\n          _this4.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"\\u4E0B\\u4E00\\u6B65\\uFF0C\", steps[current].title) // 下一步，填写商品信息\n      )));\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar createForm = Form.create;\nexport default withRouter(connect(function (state) {\n  return {\n    data: state.foodData\n  };\n}, //将redux变量赋值到组件,成组件变量Data\nfunction (dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n})(createForm()(Temp))); // export default withRouter( createForm()(Temp)   )//将Form表单,通过props获取到各种方法","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\List\\EditClick\\Edit.js"],"names":["React","Component","Steps","Button","message","Form","Modal","withRouter","StepOne","StepTwo","StepThree","actionCreators","connect","bindActionCreators","reject","all","promises","confirm","Step","success","steps","title","content","Temp","props","state","current","storeData","categoryName","setState","location","ele","e","form","validateFields","errors","values","error","Object","assign","getFieldsValue","next","a","b","aProps","keys","i","length","propName","wrapClassName","okText","cancelText","icon","bodyStyle","marginTop","onOk","isObjectValueEqual","fetch","spuId","method","headers","body","JSON","stringify","then","res","json","data","console","log","history","push","pathname","params","handleSubmit","map","item","selest","textAlign","marginRight","prev","showConfirm","bind","margin","createForm","create","foodData","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./Step/Add.less\";\r\nimport { Steps, Button, message, Form,Modal } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport StepOne from './Step/StepOne';\r\nimport StepTwo from './Step/StepTwo';\r\nimport StepThree from './Step/StepThree';\r\n\r\n\r\n\r\nimport * as actionCreators from '../../../../redux/actions/actions';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from \"redux\"\r\nimport { reject, all } from 'q';\r\nimport { promises } from 'fs';\r\nconst confirm = Modal.confirm;\r\nconst Step = Steps.Step;\r\nconst success = () => {\r\n    message.success('The information is changed');\r\n};\r\nconst steps = [{\r\n    title: '填写菜品信息',\r\n    content: '填写商品信息',\r\n}, {\r\n    title: '填写菜品促销',\r\n    content: 'Second-content',\r\n}, {\r\n    title: '填写商品属性',\r\n    content: 'Last-content',\r\n}];\r\n\r\nclass Temp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            current: 0,\r\n            storeData: null,\r\n            categoryName: null,\r\n        };\r\n    }\r\n    next() {//下一页\r\n        const current = this.state.current + 1;\r\n        this.setState({ current })\r\n    }\r\n    prev() {//上一页\r\n        const current = this.state.current - 1;\r\n        this.setState({ current })//回调函数\r\n    }\r\n    async  componentDidMount() {\r\n        await this.setState({\r\n            storeData: this.props.location.state.ele,\r\n            categoryName: this.props.location.state.categoryName\r\n        })\r\n        // this.props.form.setFieldsValue( this.state.data) \r\n    }\r\n\r\n    handleSubmit(e) {\r\n        // 表单内容提交组件,校验并获取一组输入域的值与 Error;\r\n        // 获取编辑后内容判断是否有变化没有有变化发出请求;\r\n        // 修改数据库,更新redux; (重新获取数据);\r\n        this.props.form.validateFields((errors, values) => {\r\n            if (!!errors) {\r\n                message.error('验证失败!')\r\n                return;\r\n            }\r\n            let storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue())\r\n            this.setState({\r\n                storeData\r\n            })\r\n            this.next()\r\n        });\r\n    };\r\n    isObjectValueEqual(a, b) { //注释： 见人员信息管理组件\r\n        let aProps = Object.keys(a);\r\n        // let bProps = Object.keys(b);  a、b的key值相同\r\n        //判断属性名的length是否一致\r\n        //表单两次提交内容对比不需要对length进行判断\r\n\r\n        //循环取出属性名，再判断属性值是否一致\r\n\r\n        for (let i = 0; i < aProps.length; i++) {\r\n            let propName = aProps[i];\r\n              if (a[propName] + \"\" !== b[propName] + \"\") {//\"\" 处理数据类型\r\n                 return false;//进入后 => return 直接跳出下面不执行\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    showConfirm() { //最后验证，前端验证后发给后端，进行请求\r\n        // 先获取修改后的数值,在判断是否修改数据库\r\n        // console.log(this.props.form.getFieldsValue())\r\n        let storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue())\r\n        this.setState({\r\n            storeData\r\n        })\r\n        confirm({\r\n            wrapClassName: '提示',\r\n            title: '提示:',\r\n            content: '是否提交数据',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            icon: \"info-circle\",\r\n            bodyStyle: {\r\n                \".ant-modal-confirm-btns\": { marginTop: 0 }\r\n            },\r\n            onOk: async () => { // 箭头函数解决this\r\n                if (!this.isObjectValueEqual(this.props.location.state.ele,this.state.storeData)) {\r\n                    await fetch(`http://localhost:2000/food?act=editFood&&spuId=${this.state.storeData.spuId}`,\r\n                    {\r\n                      method: 'POST',\r\n                      // mode: 'cors',\r\n                      // credentials: 'include', // cookie\r\n                      headers: {\r\n                        'Content-Type': 'application/json'\r\n                      },\r\n                      body:JSON.stringify(this.state.storeData)\r\n                    }\r\n                    ) \r\n                      .then(res => res.json())\r\n                      .then(\r\n                        data => {\r\n                            success()\r\n                          this.setState({ ...data })\r\n                          console.log(data)\r\n                        })\r\n                } else { //进行修改直接跳转到列表页\r\n                    success();\r\n                }\r\n                this.props.history.push({  //退回到列表页\r\n                    pathname: \"/food/list\",\r\n                });\r\n            },\r\n            /* \r\n            onCancel() {  //取消回调函数\r\n              console.log('Cancel');\r\n            }, \r\n            */\r\n        })\r\n    }\r\n    selest(params) {   //控制步骤条对应内容\r\n        if (this.state.storeData) {\r\n            // console.log(this.state.storeData)\r\n            switch (params) {\r\n                case 0:\r\n                    return <StepOne props={this.props} handleSubmit={this.handleSubmit} state={this.state} />;\r\n                    break;\r\n                case 1:\r\n                    return <StepTwo props={this.props} state={this.state} />;\r\n                    break;\r\n                case 2:\r\n                    return <StepThree props={this.props} state={this.state} />;\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const { current } = this.state;\r\n         return (\r\n            <main className=\"food-add\">\r\n                <div className=\"food-add-wrap\">\r\n                    <Steps current={current}   >\r\n                        {steps.map(item => <Step key={item.title} title={item.title} />\r\n                        )}\r\n                    </Steps>\r\n                    <div className=\"form-wrap\">\r\n                        {/* 分步组件 */}\r\n                        {this.selest(current)}\r\n                    </div>\r\n                    <div className=\"steps-action\"\r\n                        style={{ textAlign: \"center\" }}>\r\n                        {\r\n                            current > 0\r\n                            && (\r\n                                <Button\r\n                                    style={{\r\n                                        textAlign: \"left\",\r\n                                        marginRight: 30\r\n                                    }}\r\n                                    onClick={() => this.prev()}>\r\n                                    上一步，{steps[current].title}\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        {\r\n                            current === steps.length - 1\r\n                            && <Button\r\n                                style={{}}\r\n                                type=\"primary\"\r\n                                onClick={this.showConfirm.bind(this)}\r\n\r\n                                // onClick={(e) => {\r\n                                //     message.success('Processing complete!')\r\n                                //     this.Submit(e)\r\n                                // }}\r\n                            >完成，提交菜品</Button>\r\n                        }\r\n                        {\r\n                            current < steps.length - 1\r\n                            && <Button\r\n                                type=\"primary\"\r\n                                style={{\r\n                                    margin: \"0 auto\",\r\n                                    textAlign: \"right\",\r\n                                }}\r\n                                onClick={(e) => {\r\n                                    this.handleSubmit(e)\r\n                                }}>下一步，{steps[current].title}</Button>// 下一步，填写商品信息\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst createForm = Form.create;\r\n\r\n\r\nexport default withRouter(connect(\r\n    state => { return { data: state.foodData } },//将redux变量赋值到组件,成组件变量Data\r\n    dispatch => bindActionCreators(actionCreators, dispatch))( createForm()(Temp)))\r\n\r\n// export default withRouter( createForm()(Temp)   )//将Form表单,通过props获取到各种方法\r\n"]},"metadata":{},"sourceType":"module"}