{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { ComponentInterface } from '../../../../../fc-core/src/component-interface';\nimport { pluck } from '../../../../../fc-core/src/lib';\n\nvar UNDEF,\n    setterGetter = function setterGetter(a, b) {\n  return a = 'comp_' + a, b && (this.config[a] = b), (b || !this.config[a]) && this || this.config[a];\n},\n    _getTranslationString = function _getTranslationString(a, b) {\n  return ['T', a, ',', b].join('');\n},\n    _getTranslation = function _getTranslation(a) {\n  return -a.getTranslation();\n},\n    calculateTranslation = function calculateTranslation(a) {\n  return _getTranslationString(_getTranslation(a.h), _getTranslation(a.v));\n},\n    getHVOb = function getHVOb(a, b) {\n  return {\n    h: a,\n    v: b\n  };\n},\n    groupsArr = ['columnShadowVcanvasGroup', 'columnVcanvasGroup', 'areaShadowVcanvasGroup', 'areaVcanvasGroup', 'lineShadowVcanvasGroup', 'lineVcanvasGroup', 'defaultShadowVcanvasGroup', 'defaultVcanvasGroup', 'sumLabelsLayer', 'vcanvasLabelGroup'],\n    createGroup = function createGroup(a, b, c) {\n  var d = c.getFromEnv('animationManager');\n  return d.setAnimation({\n    el: 'group',\n    attr: {\n      name: a\n    },\n    container: b,\n    state: 'appearing',\n    component: c,\n    label: 'group'\n  });\n},\n    limitToBeUpdated = function limitToBeUpdated(a) {\n  return !/category/i.test(a.getName());\n};\n\nvar VISIBLE = 'visible',\n    REMOVED = 'removed',\n    DATASET = 'dataset';\n\nvar VirtualCanvas =\n/*#__PURE__*/\nfunction (_ComponentInterface) {\n  _inherits(VirtualCanvas, _ComponentInterface);\n\n  function VirtualCanvas() {\n    _classCallCheck(this, VirtualCanvas);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VirtualCanvas).apply(this, arguments));\n  }\n\n  _createClass(VirtualCanvas, [{\n    key: \"getName\",\n    value: function getName() {\n      return 'virtualCanvas';\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'canvas';\n    }\n  }, {\n    key: \"xAxis\",\n    value: function xAxis(a) {\n      var b = setterGetter.call(this, 'xAxis', a);\n      return a && this.listenToAxis(a), a && this.addToEnv('xAxis', a), b;\n    }\n  }, {\n    key: \"yAxis\",\n    value: function yAxis(a) {\n      var b = setterGetter.call(this, 'yAxis', a);\n      return a && this.listenToAxis(a), a && this.addToEnv('yAxis', a), b;\n    }\n  }, {\n    key: \"paper\",\n    value: function paper(a) {\n      return setterGetter.call(this, 'paper', a);\n    }\n  }, {\n    key: \"canvas\",\n    value: function canvas(a) {\n      return setterGetter.call(this, 'canvas', a);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var b = this,\n          c = b.getFromEnv('chartConfig'),\n          d = b.config;\n      Object.assign(d, a), d.transposeAxis = c.transposeAxis, this._mapChildren(function (a) {\n        a.getState(REMOVED) || a.getType() === DATASET || a.configure && a.configure();\n      });\n    }\n  }, {\n    key: \"getHorizontalVerticalAxes\",\n    value: function getHorizontalVerticalAxes() {\n      var a = this,\n          b = a.xAxis(),\n          c = a.yAxis();\n      return c.config.isVertical ? getHVOb(b, c) : getHVOb(c, b);\n    }\n  }, {\n    key: \"preDraw\",\n    value: function preDraw() {\n      this._mapChildren(function (a) {\n        a.getState('removed') || 'dataset' === a.getType() || a.setVisibility && a.setVisibility();\n      });\n\n      var a,\n          b = this.config.transposeAxis,\n          c = this.getFromEnv('chart'),\n          _this$getAxisValuePad = this.getAxisValuePadding(),\n          d = _this$getAxisValuePad.left,\n          e = _this$getAxisValuePad.right,\n          f = _this$getAxisValuePad.top,\n          g = _this$getAxisValuePad.bottom;\n\n      a = this.getDataLimits(!b), a.min !== 1 / 0 || a.max !== -Infinity ? (this._setYAxisLimits(a.min, a.max), c._storeIntialLimit && c._storeIntialLimit(a.min, a.max)) : (this._setYAxisLimits(UNDEF, UNDEF), c._storeIntialLimit && c._storeIntialLimit(UNDEF, UNDEF)), this._setXAxisLimits(a.xMin, a.xMax), this._setAxisValuePadding(d, e, f, g);\n    }\n  }, {\n    key: \"childChanged\",\n    value: function childChanged() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var b,\n          c = this,\n          d = c.config,\n          e = d.transposeAxis;\n      !1 !== a.dataLimitChanged && (b = c.getDataLimits(!e), e && (b.min !== d.range.min || b.max !== d.range.max) && (d.range.min = b.min, d.range.max = b.max, this.getFromEnv('yAxis').resetStoredLimits(), b.min !== 1 / 0 || b.max !== -Infinity ? c._setYAxisLimits(b.min, b.max) : c._setYAxisLimits(UNDEF, UNDEF)), (b.xMin !== d.range.xMin || b.xMax !== d.range.xMax) && (d.range.xMin = b.xMin, d.range.xMax = b.xMax, this.getFromEnv('xAxis').resetStoredLimits(), c._setXAxisLimits(b.xMin, b.xMax))), c.asyncDraw();\n    }\n  }, {\n    key: \"_setAxisValuePadding\",\n    value: function _setAxisValuePadding(a, b, c, d) {\n      this.getFromEnv('xAxis').setAxisPadding(a, b), c && d && this.getFromEnv('yAxis').setAxisPadding(a, b);\n    }\n  }, {\n    key: \"getAxisValuePadding\",\n    value: function getAxisValuePadding() {\n      var a = Math.max;\n      var b = {},\n          c = -Infinity,\n          d = -Infinity,\n          e = -Infinity,\n          f = -Infinity;\n      return this._mapChildren(function (g) {\n        g.getState(REMOVED) || (b = g.getAxisValuePadding && g.getAxisValuePadding() || {}, c = a(c, b.left || -Infinity), d = a(d, b.right || -Infinity), e = a(e, b.top || -Infinity), f = a(f, b.bottom || -Infinity));\n      }), c === -Infinity && (c = 0), d === -Infinity && (d = 0), e === -Infinity && (e = 0), f === -Infinity && (f = 0), this.config.padding || (this.config.padding = {}, this.config.padding.left = c, this.config.padding.right = d, this.config.padding.top = e, this.config.padding.bottom = f), {\n        left: c,\n        right: d,\n        top: e,\n        bottom: f\n      };\n    }\n  }, {\n    key: \"_setYAxisLimits\",\n    value: function _setYAxisLimits(a, b) {\n      var c = this.getFromEnv('yAxis');\n      limitToBeUpdated(c) && c.setDataLimit(b, a);\n    }\n  }, {\n    key: \"_setXAxisLimits\",\n    value: function _setXAxisLimits(a, b) {\n      var c = this.getFromEnv('xAxis');\n      limitToBeUpdated(c) && (b !== -Infinity || a !== +Infinity ? c.setDataLimit(b, a) : c.setDataLimit(UNDEF, UNDEF));\n    }\n  }, {\n    key: \"getDataLimits\",\n    value: function getDataLimits(a) {\n      var b,\n          c,\n          d,\n          e = Math.max,\n          f = this,\n          g = f.getFromEnv('chart'),\n          h = -Infinity,\n          i = +Infinity,\n          j = h,\n          k = i,\n          l = i,\n          m = h,\n          n = function n(a) {\n        var b = Math.min;\n        c = pluck(a.xMax, h), d = pluck(a.xMin, i), j = e(j, a.max), k = b(k, a.min), m = e(m, c), l = b(l, d);\n      };\n\n      return f._mapChildren(function (c) {\n        c.getDataLimits && !c.getState(REMOVED) && (a || c.getState(VISIBLE)) && (b = c.getDataLimits(a), n(b));\n      }), this.config.range || (this.config.range = {}, this.config.range.min = k, this.config.range.max = j, this.config.range.xMin = l, this.config.range.xMax = m), g.config.yMax = j, g.config.yMin = k, {\n        min: k,\n        max: j,\n        xMin: l,\n        xMax: m\n      };\n    }\n  }, {\n    key: \"listenToAxis\",\n    value: function listenToAxis(a) {\n      var b,\n          c = this;\n      b = function b() {\n        c.getState('drawn') && c.asyncDraw();\n      }, this.getState('visiblerangeset' + a.getId()) || (this.setState('visiblerangeset' + a.getId(), !0), c.addExtEventListener('visiblerangeset', b, a));\n    }\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var a = this,\n          b = a.getLinkedParent();\n      a.getChildContainer('columnShadowVcanvasGroup') || a.addChildContainer('columnShadowVcanvasGroup', createGroup('vcanvas-column-shadow', b.getChildContainer('columnShadowGroup'), a)), a.getChildContainer('columnVcanvasGroup') || a.addChildContainer('columnVcanvasGroup', createGroup('vcanvas-column-plot', b.getChildContainer('columnGroup'), a)), a.getChildContainer('areaShadowVcanvasGroup') || a.addChildContainer('areaShadowVcanvasGroup', createGroup('vcanvas-area-shadow', b.getChildContainer('areaShadowGroup'), a)), a.getChildContainer('areaVcanvasGroup') || a.addChildContainer('areaVcanvasGroup', createGroup('vcanvas-area-plot', b.getChildContainer('areaGroup'), a)), a.getChildContainer('lineShadowVcanvasGroup') || a.addChildContainer('lineShadowVcanvasGroup', createGroup('vcanvas-line-shadow', b.getChildContainer('lineShadowGroup'), a)), a.getChildContainer('lineVcanvasGroup') || a.addChildContainer('lineVcanvasGroup', createGroup('vcanvas-line-plot', b.getChildContainer('lineGroup'), a)), a.getChildContainer('defaultShadowVcanvasGroup') || a.addChildContainer('defaultShadowVcanvasGroup', createGroup('vcanvas-default-shadow', b.getChildContainer('defaultShadowGroup'), a)), a.getChildContainer('defaultVcanvasGroup') || a.addChildContainer('defaultVcanvasGroup', createGroup('vcanvas-default-plot', b.getChildContainer('defaultGroup'), a)), a.getChildContainer('vcanvasLabelGroup') || a.addChildContainer('vcanvasLabelGroup', createGroup('vcanvas-label', b.getChildContainer('datalabelsGroup'), a)), a.getChildContainer('columnTrendGroup') || a.addChildContainer('columnTrendGroup', createGroup('columnTrendGroup', a.getChildContainer('columnVcanvasGroup'), a)), a.getChildContainer('sumLabelsLayer') || a.addChildContainer('sumLabelsLayer', createGroup('vcanvas-sumLabelsLayer', b.getChildContainer('sumLabelsLayer'), a));\n    }\n  }, {\n    key: \"applyTranslation\",\n    value: function applyTranslation() {\n      var a = this,\n          b = a.getHorizontalVerticalAxes(),\n          c = calculateTranslation(b),\n          d = function d(b) {\n        b = a.getChildContainer(b), b.attr({\n          transform: c\n        });\n      };\n\n      a.createContainer(), groupsArr.forEach(function (a) {\n        d(a);\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.applyTranslation(), this.setState('drawn', !0);\n    }\n  }, {\n    key: \"getCanvasPadding\",\n    value: function getCanvasPadding() {\n      var a,\n          b,\n          c = this,\n          d = {\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        paddingBottom: 0\n      };\n      return c._mapChildren(function (c) {\n        if (c.getCanvasPadding && !c.getState(REMOVED)) for (b in a = c.getCanvasPadding() || {}, a) {\n          a.hasOwnProperty(b) && (d[b] = Math.max(a[b], d[b]));\n        }\n      }), d;\n    }\n  }, {\n    key: \"rtShiftAnim\",\n    value: function rtShiftAnim(a, b) {\n      var c,\n          d = this,\n          e = d.getFromEnv('xAxis'),\n          f = d.getFromEnv('yAxis'),\n          g = e.getPixel(1) - e.getPixel(0),\n          h = f.getPixel(1) - f.getPixel(0),\n          i = d.getFromEnv('animationManager');\n      a = (a || 0) * g, b = (b || 0) * h, c = _getTranslationString(a, b), groupsArr.forEach(function (a) {\n        d.getChildContainer(a).attr({\n          transform: c\n        }), i.setAnimation({\n          el: d.getChildContainer(a),\n          attrs: {\n            transform: 'T0,0'\n          }\n        });\n      });\n    }\n  }]);\n\n  return VirtualCanvas;\n}(ComponentInterface);\n\nexport default VirtualCanvas;","map":null,"metadata":{},"sourceType":"module"}