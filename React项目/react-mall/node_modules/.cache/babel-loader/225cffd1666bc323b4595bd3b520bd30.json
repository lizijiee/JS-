{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Message from './message';\nimport { ComponentInterface } from '../../../fc-core/src/component-interface';\nimport { pluckNumber, pluck, HEXtoRGB } from '../../../fc-core/src/lib';\nvar mathMin = Math.min;\nvar defAnimEffect = 'normal',\n    PX = 'px';\nvar UNDEF;\n\nvar MessageLogger =\n/*#__PURE__*/\nfunction (_ComponentInterface) {\n  _inherits(MessageLogger, _ComponentInterface);\n\n  function MessageLogger() {\n    var _this;\n\n    _classCallCheck(this, MessageLogger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageLogger).call(this)), _this.pIndex = 1, _this.linkedItems = _this.linkedItems || (_this.linkedItems = {}), _this.components = _this.components || {}, _this.components.messages = _this.components.messages || [], _this.graphics = _this.graphics || {}, _this.config = _this.config || (_this.config = {});\n    return _this;\n  }\n\n  _createClass(MessageLogger, [{\n    key: \"getType\",\n    value: function getType() {\n      return 'extension';\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'MessageLogger';\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(a) {\n      this.linkedItems.chart = a;\n      var b = a.getFromEnv('chart-attrib') || {},\n          c = this.config.usemessagelog = a.getFromEnv('chartConfig').usemessagelog;\n      this.config.messageLogWPercent = mathMin(pluckNumber(b.messagelogwpercent, 80), 100), this.config.messageLogHPercent = mathMin(pluckNumber(b.messageloghpercent, 70), 100), this.config.messageLogShowTitle = pluckNumber(b.messagelogshowtitle, 1), this.config.messageLogTitle = pluck(b.messagelogtitle, 'Message Log'), this.config.messageLogColor = pluck(b.messagelogcolor, '#fbfbfb').replace(/^#?([a-f0-9]+)/ig, '$1'), this.config.messageLogColorRgb = HEXtoRGB(this.config.messageLogColor), this.config.messageGoesToJS = pluckNumber(b.messagegoestojs, 0), this.config.messageGoesToLog = pluckNumber(b.messagegoestolog, 1), this.config.messageJSHandler = pluck(b.messagejshandler, ''), this.config.messagePassAllToJS = pluckNumber(b.messagepassalltojs, 0), this.config.messagePassAsObject = pluckNumber(b.messagepassasobject, 0), this.config.messageLogIsCancelable = pluckNumber(b.messagelogiscancelable, 1), this.config.alwaysShowMessageLogMenu = pluckNumber(b.alwaysshowmessagelogmenu, c), a.config.useShowLogMenu = c && this.config.messageGoesToLog, this.config.dynamicScrolling = !1, this.config.scrollToBottom = !0;\n    }\n  }, {\n    key: \"_createMessage\",\n    value: function _createMessage(a) {\n      var b = this,\n          c = new Message(a, b);\n      return this.graphics.container && c.draw(), c;\n    }\n  }, {\n    key: \"addLog\",\n    value: function addLog(a) {\n      var b,\n          c = this.components.messages,\n          d = pluckNumber(a.msgGoesToLog, this.config.messageGoesToLog),\n          e = pluckNumber(a.msgGoesToJS, this.config.messageGoesToJS),\n          f = window[this.config.messageJSHandler],\n          g = pluck(a.msgId, ''),\n          h = pluck(a.msgTitle, ''),\n          i = pluck(a.msgText, ''),\n          j = pluck(a.msgType, 'literal');\n      0 == this.config.usemessagelog || (e && f && 'function' == typeof f && (this.config.messagePassAllToJS ? this.config.messagePassAsObject ? f(a) : f(g, h, i, j) : f(i)), '1' === a.clearLog && this.clearLog(), d && (a.msgTitle || a.msgText) && (b = this._createMessage(a), c.push(b), 1 === c.length && !this.config.visible && this.show()));\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.config.visible || 1 != this.config.usemessagelog || (this.config.visible = !0, this.draw(), !this.graphics.container && this.draw(), this.graphics.container && this.graphics.container.show());\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.config.visible = !1, this.graphics.container && this.graphics.container.hide();\n    }\n  }, {\n    key: \"clearLog\",\n    value: function clearLog() {\n      var a,\n          b = this.components.messages,\n          c = b.length;\n\n      for (a = 0; a < c; a += 1) {\n        b[a] && b[a].dispose && b[a].dispose();\n      }\n\n      b.splice(0, c);\n    }\n  }, {\n    key: \"isDrawn\",\n    value: function isDrawn() {\n      return !!this.graphics.container;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a,\n          b,\n          c = this.components.messages;\n      if (0 === this.config.usemessagelog) this.isDrawn() && (this.clearLog(), this.hide());else for (this._createHTMLDialogue(), this.config.visible || this.hide(), b = c.length, a = 0; a < b; a += 1) {\n        c[a] && c[a].draw && c[a].draw();\n      }\n    }\n  }, {\n    key: \"_createHTMLDialogue\",\n    value: function _createHTMLDialogue() {\n      var a,\n          b,\n          c,\n          d,\n          e = this,\n          f = this.config,\n          g = this.graphics,\n          h = this.linkedItems.chart,\n          i = this.getFromEnv('paper'),\n          j = this.getFromEnv('chart-container'),\n          k = h.config,\n          l = k.width,\n          m = k.height,\n          n = k.style,\n          o = n && n.inCanvasStyle,\n          p = this.config.messageLogWPercent,\n          q = this.config.messageLogHPercent,\n          r = this.config.messageLogShowTitle,\n          s = this.config.messageLogIsCancelable,\n          t = this.config.messageLogColor,\n          u = this.config.messageLogTitle,\n          v = l * (p / 100),\n          w = m * (q / 100),\n          x = v - 18 - 22,\n          y = w - 18 - 22,\n          z = g.container,\n          A = this.isDrawn() && k.animation && k.animation.transposeAnimDuration;\n      z || (z = g.container = i.html('div', {\n        fill: 'transparent'\n      }, {\n        fontSize: '10px',\n        lineHeight: '15px'\n      }, j), g.veil = i.html('div', {\n        id: 'veil',\n        fill: '000000',\n        opacity: .1\n      }, UNDEF, z).on('click', function () {\n        s && e.hide();\n      }), u && r && (g.title = i.html('p', {\n        id: 'Title',\n        innerHTML: u,\n        x: 5,\n        y: 5\n      }, {\n        \"font-weight\": 'bold'\n      }, z)), g.dialog = i.html('div', {\n        id: 'dialog',\n        strokeWidth: 1\n      }, {\n        borderRadius: '5px',\n        boxShadow: '1px 1px 3px #000000',\n        \"-webkit-border-radius\": '5px',\n        \"-webkit-box-shadow\": '1px 1px 3px #000000',\n        filter: 'progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=\"#000000\")'\n      }, z), g.logBackground = i.html('div', {\n        id: 'dialogBackground',\n        x: 0,\n        y: 0\n      }, UNDEF, g.dialog), s && (g.closeButton = i.html('div', {\n        id: 'closeButton',\n        x: v - 11 - 3,\n        y: 2,\n        innerHTML: '<b>x</b>'\n      }, {\n        cursor: 'pointer',\n        _cursor: 'hand'\n      }, g.dialog).on('click', function () {\n        s && e.hide();\n      })), g.logWrapper = i.html('div', {\n        id: 'logWrapper'\n      }, {\n        overflow: 'auto'\n      }, g.dialog).on('scroll', function () {\n        var a = this,\n            b = a && a.scrollTop,\n            c = a && a.scrollHeight,\n            d = a && a.offsetHeight;\n        return f.dynamicScrolling ? void (f.dynamicScrolling = !1) : void (f.scrollToBottom = c - b === d);\n      }), g.log = i.html('div', {\n        id: 'log',\n        x: 0,\n        y: 0\n      }, {}, g.logWrapper)), z.css({\n        fontFamily: o.fontFamily\n      }), g.dialog.attr({\n        fill: 'ffffff',\n        stroke: t\n      }), g.logBackground.attr({\n        fill: t\n      }), a = {\n        width: l,\n        height: m\n      }, b = {\n        x: (l - v) / 2,\n        y: (m - w) / 2,\n        width: v,\n        height: w\n      }, c = {\n        width: v,\n        height: w\n      }, d = {\n        x: (v - x) / 2,\n        y: (w - y) / 2,\n        width: x,\n        height: y\n      }, A ? (z.animate(a, A, defAnimEffect), g.veil.animate(a, A, defAnimEffect), g.dialog.animate(b, A, defAnimEffect), g.logBackground.animate(c, A, defAnimEffect), g.logWrapper.animate(d, A, defAnimEffect)) : (z.attr(a), g.veil.attr(a), g.dialog.attr(b), g.logBackground.attr(c), g.logWrapper.attr(d));\n    }\n  }]);\n\n  return MessageLogger;\n}(ComponentInterface);\n\nexport default MessageLogger;","map":null,"metadata":{},"sourceType":"module"}