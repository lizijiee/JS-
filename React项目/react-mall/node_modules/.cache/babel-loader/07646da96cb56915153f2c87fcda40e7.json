{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { parseUnsafeString, pluck, pluckNumber, NORMAL, BOLD, convertColor, getValidValue, setLineHeight, visibleStr, hiddenStr, BLANKSTRING } from '../../../../../fc-core/src/lib';\nimport { ComponentInterface } from '../../../../../fc-core/src/component-interface';\nimport { addDep } from '../../../../../fc-core/src/dependency-manager';\nimport captionAnimation from './index.animation';\nvar mathMax = Math.max,\n    mathMin = Math.min,\n    mathCeil = Math.ceil,\n    PXSTRING = 'px',\n    POSITION_RIGHT = 'right',\n    POSITION_LEFT = 'left',\n    POSITION_CENTER = 'center',\n    POSITION_TOP = 'top',\n    POSITION_BOTTOM = 'bottom',\n    POSITION_MIDDLE = 'middle',\n    POSITION_START = 'start',\n    POSITION_END = 'end';\naddDep({\n  name: 'captionAnimation',\n  type: 'animationRule',\n  extension: captionAnimation\n});\n\nvar Caption =\n/*#__PURE__*/\nfunction (_ComponentInterface) {\n  _inherits(Caption, _ComponentInterface);\n\n  function Caption() {\n    _classCallCheck(this, Caption);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Caption).apply(this, arguments));\n  }\n\n  _createClass(Caption, [{\n    key: \"getType\",\n    value: function getType() {\n      return 'caption';\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'caption';\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var a = this.getFromEnv('chart'),\n          b = a.getFromEnv('chart-attrib'),\n          c = this,\n          d = c.config || {},\n          e = a.getFromEnv('style'),\n          f = e.outCanfontFamily,\n          g = e.outCancolor,\n          h = e.fontSize,\n          i = ['top', 'center'];\n\n      switch (c.config.text = parseUnsafeString(b.caption), d.style = {\n        fontFamily: pluck(b.captionfont, f),\n        color: convertColor(pluck(b.captionfontcolor, g).replace(/^#? ([a-f0-9]+)/ig, '#$1')),\n        fontSize: pluckNumber(b.captionfontsize, h + 3) + PXSTRING,\n        fontWeight: 0 === pluckNumber(b.captionfontbold) ? NORMAL : BOLD\n      }, d.align || (d.align = ''), d.align = pluck(b.captionposition, b.captionalignment, POSITION_CENTER), d.align && (i = d.align.split('-'), i[0] && (i[0] = i[0].toLowerCase()), i[1] && (i[1] = i[1].toLowerCase()), 2 > i.length && (i[1] = i[0])), i[0]) {\n        case POSITION_TOP:\n          d.isOnTop = 1;\n          break;\n\n        case POSITION_BOTTOM:\n          d.isOnTop = 0;\n          break;\n\n        default:\n          d.isOnTop = pluckNumber(b.captionontop, 1);\n      }\n\n      switch (i[1]) {\n        case POSITION_RIGHT:\n          d.align = POSITION_END;\n          break;\n\n        case POSITION_LEFT:\n          d.align = POSITION_START;\n          break;\n\n        default:\n          d.align = POSITION_MIDDLE;\n      }\n\n      d.isOnLeft = !pluckNumber(b.captiononright, 0), d.captionPosition = getValidValue(b.captionposition, POSITION_TOP).toLowerCase(), d.alignWithCanvas = pluckNumber(b.aligncaptionwithcanvas, a.config.alignCaptionWithCanvas, 1), d.horizontalPadding = pluckNumber(b.captionhorizontalpadding, d.alignWithCanvas ? 0 : 15), d.drawCaption = !0, setLineHeight(d.style);\n    }\n  }, {\n    key: \"allocatePosition\",\n    value: function allocatePosition() {\n      var a = this,\n          b = a.getFromEnv('chart');\n\n      b._manageCaptionPosition();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a,\n          b,\n          c = this,\n          d = this.getFromEnv('chart'),\n          e = d.config,\n          f = d.getFromEnv('animationManager'),\n          g = d.config.textDirection,\n          h = d.getChildContainer().captionGroup,\n          i = d.getFromEnv('smartLabel'),\n          j = c.getGraphicalElement('captionElement'),\n          k = c.getFromEnv('toolTipController'),\n          l = c.config,\n          m = l.style,\n          n = l.text,\n          o = l.x,\n          p = l.align;\n      n ? (a = {\n        text: l.text,\n        fill: m.color,\n        x: o,\n        y: l.y,\n        \"text-anchor\": p || POSITION_MIDDLE,\n        \"vertical-align\": l.verticalAlign || POSITION_TOP,\n        visibility: l.drawCaption ? visibleStr : hiddenStr,\n        direction: g\n      }, j = c.addGraphicalElement('captionElement', f.setAnimation({\n        el: j || 'text',\n        attr: a,\n        container: h,\n        state: b,\n        component: c,\n        label: 'text'\n      })), j.css(m), e.showtooltip ? k.enableToolTip(j, l.originalText) : k.disableToolTip(j), i && (i.useEllipsesOnOverflow(e.useEllipsesWhenOverflow), i.setStyle(m))) : j && f.setAnimation({\n        el: j,\n        component: c,\n        callback: function callback() {\n          this.hide();\n        },\n        doNotRemove: !0\n      }), e.savedCaption = j;\n    }\n  }, {\n    key: \"manageSpace\",\n    value: function manageSpace(a, b) {\n      var c,\n          d,\n          e,\n          f,\n          g,\n          h = this.getFromEnv('chart'),\n          i = h.config,\n          j = h.getChildren('caption')[0],\n          k = h.getChildren('subCaption')[0],\n          l = j.config,\n          m = k.config,\n          n = h.getFromEnv('dataSource').chart,\n          o = h.getFromEnv('smartLabel'),\n          p = a,\n          q = parseUnsafeString(n.caption),\n          r = parseUnsafeString(n.subcaption),\n          s = pluckNumber(n.captionpadding, 10),\n          t = s,\n          u = !1,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0,\n          A = h.getChildren('canvas'),\n          B = mathMax(A && A[0].config.canvasBorderThickness, 0),\n          C = 0,\n          D = 0;\n      return 3 < p ? (s < B && (s = B + 2), q !== BLANKSTRING && (e = l.style, y = mathCeil(pluckNumber(parseFloat(e.fontHeight, 10), parseFloat(e.lineHeight, 10), 12))), r !== BLANKSTRING && (g = m.style, z = pluckNumber(parseInt(g.fontHeight, 10), parseInt(g.lineHeight, 10), 12)), (0 < y || 0 < z) && (p = mathMax(p, 0), v = y + z + s, v > p ? (w = p - v, u = !0, w < s ? s = mathMax(w, 5) : (w -= s, s = 0, z > w ? (x = z - w + 10, z = 0, m._originalText = m.text, m.text = BLANKSTRING) : (w -= z, z = 0, y > w && (x = y - w)))) : x = p - v, o.useEllipsesOnOverflow(i.useEllipsesWhenOverflow), 0 < y && (o.setStyle(e), y += x, c = o.getSmartText(q, b, y), x = y - c.height, l.height = y = c.height, l.text = c.text, l.originalText = !!c.tooltext && c.tooltext, C = c.width), 0 < z && (o.setStyle(g), z += x, d = o.getSmartText(r, b, z), x = z - d.height, z = d.height, m.text = d.text, m.height = d.height, m.originalText = !!d.tooltext && d.tooltext, D = d.width), u && 0 < x && (s += mathMin(t - s, x)), l.captionPadding = s, l.height = y, l.width = C, m.width = D, m.height = z, v = y + z + s), v > i.canvasHeight ? (v = 0, l.drawCaption = !1) : l.drawCaption = !0, f = l.isOnTop ? {\n        top: v\n      } : {\n        bottom: v,\n        top: 5\n      }) : (f = {\n        bottom: 0,\n        top: 0\n      }, l.drawCaption = !1), f;\n    }\n  }, {\n    key: \"setDimention\",\n    value: function setDimention(a) {\n      var b = this,\n          c = b.config;\n      c.x = a.x, c.y = a.y;\n    }\n  }]);\n\n  return Caption;\n}(ComponentInterface);\n\nexport default Caption;","map":null,"metadata":{},"sourceType":"module"}