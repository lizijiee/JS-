{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { ComponentInterface } from '../component-interface';\nvar UNDEF,\n    MOUSEOVER = 'fc-mouseover',\n    MOUSEDOWN = 'fc-mousedown',\n    MOUSEUP = 'fc-mouseup',\n    MOUSEMOVE = 'fc-mousemove',\n    MOUSEOUT = 'fc-mouseout',\n    CLICK = 'fc-click';\n\nvar MouseTracker =\n/*#__PURE__*/\nfunction (_ComponentInterface) {\n  _inherits(MouseTracker, _ComponentInterface);\n\n  function MouseTracker() {\n    var _this;\n\n    _classCallCheck(this, MouseTracker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MouseTracker).call(this)), _this.pIndex = 1, _this.handler = function (a) {\n      return function (b) {\n        b.originalEvent && a.getFromEnv('chart')._mouseEvtHandler(b, a.config.evtData);\n      };\n    }(_assertThisInitialized(_this)), _this.eventsList = [MOUSEDOWN, MOUSEUP, MOUSEMOVE, CLICK, MOUSEOVER], _this.config = {}, _this.config.evtData = {};\n    return _this;\n  }\n\n  _createClass(MouseTracker, [{\n    key: \"getMouseEvents\",\n    value: function getMouseEvents(a, b, c) {\n      var d = this,\n          e = d._lastDatasetIndex,\n          f = d._lastPointIndex,\n          g = a.type,\n          h = {\n        fireOut: !1,\n        events: []\n      };\n      return g === CLICK ? h.events.push(CLICK) : g === MOUSEMOVE ? e === b && f === c ? (clearTimeout(d.mouseoutTimer), h.events.push(MOUSEMOVE)) : (h.events.push(MOUSEOVER), h.fireOut = !0) : g === MOUSEDOWN ? ((e !== b || f !== c) && (h.fireOut = !0, h.events.push(MOUSEOVER)), h.events.push(MOUSEDOWN)) : g === MOUSEOVER ? e === b && f === c ? clearTimeout(d.mouseoutTimer) : (h.fireOut = !0, h.events.push(MOUSEOVER)) : g === MOUSEUP ? (d.hasTouchEvent = !1, h.events.push(MOUSEUP)) : g === MOUSEOUT ? h.fireOut = !0 : void 0, h;\n    }\n  }, {\n    key: \"addEvents\",\n    value: function addEvents() {\n      var a,\n          b,\n          c,\n          d = this,\n          e = d.getFromEnv('chart'),\n          f = e.getChildren('canvas'),\n          g = d.config.evtData,\n          h = d.eventsList;\n\n      for (e.config.enableMouseOutEvent && h.push(MOUSEOUT), d._removeListners(), g.chart = e, g.mouseTracker = d, b = 0; b < f.length; b++) {\n        for (c in a = f[b], h) {\n          a.addEventListener(h[c], d.handler);\n        }\n      }\n    }\n  }, {\n    key: \"_removeListners\",\n    value: function _removeListners() {\n      var a,\n          b,\n          c,\n          d = this,\n          e = d.getFromEnv('chart'),\n          f = e.getChildren('canvas'),\n          g = d.eventsList;\n\n      for (c = 0; c < f.length; c++) {\n        for (b in a = f[c], g) {\n          a.removeEventListener(g[b], d.handler);\n        }\n      }\n\n      d._removeDocEvents();\n    }\n  }, {\n    key: \"_removeDocEvents\",\n    value: function _removeDocEvents() {\n      this.eventOutput && this.eventOutput.unlisten(), this.eventOutput = UNDEF;\n    }\n  }, {\n    key: \"_dispose\",\n    value: function _dispose() {\n      this._removeListners(), _get(_getPrototypeOf(MouseTracker.prototype), \"_dispose\", this).call(this);\n    }\n  }]);\n\n  return MouseTracker;\n}(ComponentInterface);\n\nexport default MouseTracker;","map":null,"metadata":{},"sourceType":"module"}