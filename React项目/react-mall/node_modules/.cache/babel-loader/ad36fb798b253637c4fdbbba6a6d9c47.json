{"ast":null,"code":"var UNDEF,\n    BLANK = '__blank',\n    nullStr = \"\\u2400\",\n    E = '',\n    arrayToStr = '[object Array]',\n    objectToStr = '[object Object]',\n    objectStr = 'object',\n    dashedAttr2CSSMap = {\n  \"font-family\": 'fontFamily',\n  \"font-size\": 'fontSize',\n  \"text-anchor\": 'textAnchor',\n  \"font-weight\": 'fontWeight',\n  \"letter-spacing\": 'letterSpacing',\n  \"font-style\": 'fontStyle'\n},\n    loadRefImage = function loadRefImage(a, b) {\n  var c = b.src,\n      d = a._.RefImg;\n  d || (d = a._.RefImg = new Image());\n  void 0 === b.src || (d.src = c, a._.RefImg = d);\n},\n    showRecursively = function showRecursively(a) {\n  for (var b = {}, c = a, d = b, e = function e() {\n    for (var c = a, d = b; c;) {\n      d._doHide && c.hide(), c = c.parent, d = d.parent;\n    }\n  }; c;) {\n    c.node && c.node.style && 'none' === c.node.style.display && (c.show(), d._doHide = !0), c = c.parent, d.parent = {}, d = d.parent;\n  }\n\n  return e;\n},\n    checkCyclicRef = function checkCyclicRef(a, b) {\n  for (var c = b.length, d = -1; c--;) {\n    if (a === b[c]) return d = c, d;\n  }\n\n  return d;\n},\n    getArrayCopy = function getArrayCopy(a) {\n  var b, c, d;\n\n  for (b = 0, c = a.length, d = Array(c); b < c; b++) {\n    d[b] = a[b];\n  }\n\n  return d;\n},\n    merge = function merge(a, b, c, d, e) {\n  var f, g, h, i, j;\n  if (e ? (d.push(a), e.push(b)) : (d = [a], e = [b]), b instanceof Array) for (f = 0; f < b.length; f += 1) {\n    try {\n      g = a[f], h = b[f];\n    } catch (a) {\n      continue;\n    }\n\n    typeof h == objectStr ? ((null === g || typeof g != objectStr) && (g = a[f] = h instanceof Array ? [] : {}), j = checkCyclicRef(h, e), -1 === j ? merge(g, h, c, d, e) : g = a[f] = d[j]) : !(c && h === UNDEF) && (a[f] = h);\n  } else for (f in b) {\n    try {\n      g = a[f], h = b[f];\n    } catch (a) {\n      continue;\n    }\n\n    null !== h && typeof h == objectStr ? (i = Object.prototype.toString.call(h), i === objectToStr ? ((null === g || typeof g != objectStr) && (g = a[f] = {}), j = checkCyclicRef(h, e), -1 === j ? merge(g, h, c, d, e) : g = a[f] = d[j]) : i === arrayToStr ? ((null === g || !(g instanceof Array)) && (g = a[f] = []), j = checkCyclicRef(h, e), -1 === j ? merge(g, h, c, d, e) : g = a[f] = d[j]) : a[f] = h) : a[f] = h;\n  }\n  return a;\n};\n\nexport default function (a, b, c, d) {\n  if (typeof a != objectStr && typeof b != objectStr) return null;\n  if (typeof b != objectStr || null === b) return a;\n  if ('undefined' == typeof a && (a = b instanceof Array ? [] : {}), d) for (var e in b) {\n    a[e] = b[e];\n  } else merge(a, b, c);\n  return a;\n}\n\nvar cacher = function cacher(a, b, c, d, e, f, g) {\n  function h(f) {\n    var h,\n        k,\n        l,\n        m = g ? f : getArrayCopy(arguments).join(nullStr);\n    return m = m === E ? BLANK : m, h = i[m], h ? h.__prev && (i[h.__prev].__next = h.__next, h.__next ? h.__next.__prev = h.__prev : i.__end = h.__prev) : (h = i[m] = {}, a && (i[m][d] = c ? c(a.apply(b, arguments)) : a.apply(b, arguments)), null === i.__end && (i.__end = m), j++, j > e && i.__end && (k = i[i.__end], i[k.__prev].__next = null, delete i[i.__end], i.__end = k.__prev, j--)), l = i.__start, l !== h && (h.__prev = null, h.__next = l, l && (l.__prev = m), i.__start = h), i[m][d];\n  }\n\n  var i = f || {},\n      j = 0;\n  return void 0 === i.__start && (i.__start = null), void 0 === i.__end && (i.__end = null), e = e || 1e3, d = d || 'item', h;\n};\n\nexport { merge, getArrayCopy, dashedAttr2CSSMap, loadRefImage, showRecursively, cacher };","map":null,"metadata":{},"sourceType":"module"}