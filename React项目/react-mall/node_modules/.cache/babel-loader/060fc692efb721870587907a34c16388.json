{"ast":null,"code":"import _slicedToArray from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { pluck } from '../../../lib';\nexport default function (b) {\n  var a,\n      c = window,\n      d = c.navigator.userAgent,\n      e = /msie/i.test(d) && !c.opera,\n      f = Math,\n      g = f.min,\n      i = f.round,\n      h = c.parseFloat,\n      j = String,\n      k = 'rgba(192,192,192,' + (e ? .002 : 1e-6) + ')',\n      l = {\n    enabled: !1,\n    false: !1,\n    0: !1,\n    disabled: !0,\n    true: !0,\n    1: !0\n  };\n  b.define && b.define([{\n    name: 'button',\n    button: function button(c, d, e, f, g, h) {\n      var i,\n          j = this,\n          l = d,\n          m = j.group('button', l),\n          n = c.labelFill,\n          o = c.symbolFill,\n          p = c.fill,\n          q = c.button[5],\n          r = c.button[6],\n          s = c.hoverFill,\n          t = c.stroke,\n          u = c['symbol-stroke'],\n          v = c['stroke-width'],\n          w = c['symbol-stroke-width'],\n          z = c.config;\n\n      for (i in 'object' == typeof c && c.button && (_c$button = c.button, _c$button2 = _slicedToArray(_c$button, 6), c = _c$button2[0], d = _c$button2[1], e = _c$button2[2], f = _c$button2[3], g = _c$button2[4], l = _c$button2[5], _c$button), l = l || h, m._.button = {\n        bound: j.rect(m),\n        tracker: j.rect(m).attr({\n          fill: k,\n          stroke: k,\n          cursor: 'pointer'\n        }).data('compositeButton', m)\n      }, b.is(g, 'object') || (g = {}), b.fn.button.fn) {\n        var _c$button, _c$button2;\n\n        m[i] = b.fn.button.fn[i];\n      }\n\n      for (i in b.fn.button.ca) {\n        m.ca[i] = b.fn.button.ca[i];\n      }\n\n      return z && m.attr({\n        config: z\n      }), m.attr({\n        \"button-padding\": [g.horizontalPadding, g.verticalPadding],\n        \"button-label\": e,\n        \"button-label-size\": q,\n        \"button-label-family\": r,\n        \"button-symbol\": f,\n        \"button-disabled\": g.disabled || 'false',\n        \"button-symbol-position\": g.symbolPosition,\n        \"button-symbol-padding\": g.symbolPadding\n      }).attr('button-repaint', [c, d, g.width, g.height, g.r]).attr({\n        labelFill: n,\n        symbolFill: o,\n        fill: p,\n        hoverFill: s,\n        stroke: t,\n        \"symbol-stroke\": u,\n        \"stroke-width\": v,\n        \"stroke-linecap\": 'round',\n        \"symbol-stroke-width\": w\n      });\n    },\n    data: {\n      hoverin: function hoverin() {\n        var a = this,\n            b = a._.button,\n            c = b.hoverbackIn,\n            d = a._hover || {};\n        d.fill || d['fill-symbol'] || d.stroke || d['stroke-width'] || d.cursor || d.labelFill || d['symbol-stroke'] ? (d.fill && a.bottom.attr('fill', d.fill) && !d['fill-symbol'] && b.symbol.attr('fill', d.fill), d['fill-symbol'] && b.symbol.attr('fill', d['fill-symbol']), d.stroke && a.bottom.attr('stroke', d.stroke) && b.symbol.attr('stroke', d.stroke), d['stroke-width'] && a.bottom.attr('stroke-width', d['stroke-width']) && b.symbol.attr('stroke-width', d['stroke-width']), d.cursor && b.tracker.attr('cursor', d.cursor), d.labelFill && b.label && b.label.attr('fill', d.labelFill), d['symbol-stroke'] && b.symbol.attr('stroke', d['symbol-stroke']), c && c()) : c && !1 === c(arguments) || a.attr('fill', 'hover'), a.hovered = !0;\n      },\n      hoverout: function hoverout() {\n        var a = this,\n            b = a._.button,\n            c = b.hoverbackOut,\n            d = a._normal || {};\n        d.fill || d['fill-symbol'] || d.stroke || d['stroke-width'] || d.cursor || d.labelFill || d['symbol-stroke'] ? (d.fill && a.bottom.attr('fill', d.fill) && !d['fill-symbol'] && b.symbol.attr('fill', d.fill), d.stroke && a.bottom.attr('stroke', d.stroke) && b.symbol.attr('stroke', d.stroke), d['fill-symbol'] && b.symbol.attr('fill', d['fill-symbol']), d['stroke-width'] && a.bottom.attr('stroke-width', d['stroke-width']) && b.symbol.attr('stroke-width', d['stroke-width']), d['symbol-stroke'] && b.symbol.attr('stroke', d['symbol-stroke']), d.labelFill && b.label && b.label.attr('fill', d.labelFill), d.cursor && b.tracker.attr('cursor', d.cursor), c && c()) : c && !1 === c(arguments) || a.attr('fill', (a.pressed || a.active) && 'active' || 'normal'), a.hovered = !1;\n      },\n      mousedown: function mousedown() {\n        var a = this,\n            b = a._.button,\n            c = a._pressed || {};\n        c.fill || c['fill-symbol'] || c.stroke || c['stroke-width'] || c.cursor || c.labelFill || c['symbol-stroke'] ? (c.fill && a.bottom.attr('fill', c.fill) && !c['fill-symbol'] && b.symbol.attr('fill', c.fill), c.stroke && a.bottom.attr('stroke', c.stroke) && b.symbol.attr('stroke', c.stroke), c['fill-symbol'] && b.symbol.attr('fill', c['fill-symbol']), c['stroke-width'] && a.bottom.attr('stroke-width', c['stroke-width']) && b.symbol.attr('stroke-width', c['stroke-width']), c.labelFill && b.label && b.label.attr('fill', c.labelFill), c['symbol-stroke'] && b.symbol.attr('stroke', c['symbol-stroke']), c.cursor && b.tracker.attr('cursor', c.cursor)) : a.attr('fill', 'active'), a.pressed = !0;\n      },\n      mouseup: function mouseup() {\n        var a = this,\n            b = a._.button,\n            c = b.callback,\n            d = a._normal || {};\n        d.fill || d['fill-symbol'] || d.stroke || d['stroke-width'] || d.cursor || d.labelFill || d['symbol-stroke'] ? (d.fill && a.bottom.attr('fill', d.fill) && !d['fill-symbol'] && b.symbol.attr('fill', d.fill), d.stroke && a.bottom.attr('stroke', d.stroke) && b.symbol.attr('stroke', d.stroke), d['fill-symbol'] && b.symbol.attr('fill', d['fill-symbol']), d['stroke-width'] && a.bottom.attr('stroke-width', d['stroke-width']) && b.symbol.attr('stroke-width', d['stroke-width']), d.labelFill && b.label && b.label.attr('fill', d.labelFill), d['symbol-stroke'] && b.symbol.attr('stroke', d['symbol-stroke']), d.cursor && b.tracker.attr('cursor', d.cursor)) : a.attr('fill', a.hovered && 'hover' || a.active && 'active' || 'normal'), a.pressed = !1, c && c(arguments);\n      },\n      mousemove: function mousemove() {\n        var a = this,\n            b = a._.button,\n            c = b.mousemove;\n        c && c(arguments);\n      }\n    },\n    fn: {\n      tooltip: function tooltip() {\n        return b.el.tooltip && b.el.tooltip.apply(this._.button.tracker, arguments), this;\n      },\n      buttonclick: function buttonclick(a, b) {\n        var c = this,\n            d = c._.button;\n        return b = b || c, d.callback = function () {\n          return a.apply(b, arguments);\n        }, c;\n      },\n      labelcss: function labelcss() {\n        var a = this._.button,\n            b = a.label;\n        return a.cssArg = arguments, b && b.css.apply(b, arguments), this.attr('button-repaint', this.attrs['button-repaint']);\n      },\n      buttonhover: function buttonhover(a, b, c, d, e, f) {\n        var g = this,\n            h = g._.button;\n        return c = c || g, d = d || g, f = f || g, e && (h.mousemove = function () {\n          return e.apply(f, arguments);\n        }), h.hoverbackIn = function () {\n          return a.apply(c, arguments);\n        }, h.hoverbackOut = function () {\n          return b.apply(d, arguments);\n        }, g;\n      },\n      remove: function remove() {\n        var a,\n            c = this,\n            d = c._.button;\n\n        for (a in c.attr('button-disabled', 'true'), d) {\n          d[a] && d[a].remove && d[a].remove(), d[a] = null;\n        }\n\n        delete c._.button, b.el.remove.apply(c, arguments);\n      }\n    },\n    ca: {\n      \"button-active\": function buttonActive(a) {\n        var b = this;\n        b.attr('fill', (b.active = !!a) ? 'active' : b.hovered && 'hover' || 'normal');\n      },\n      \"button-disabled\": function buttonDisabled(b) {\n        var c = this,\n            d = c.paper,\n            e = c._.button,\n            f = e.tracker,\n            g = c.attrs['button-disabled'],\n            h = d.button.data,\n            i = c._disabled || {};\n        (b = l[b], g = l[g], b !== a && b !== g) && (!0 === b ? (i.fill || i.stroke || i['stroke-width'] || i.cursor ? (i.fill && c.bottom.attr('fill', i.fill) && e.symbol.attr('fill', i.fill), i.stroke && c.bottom.attr('stroke', i.stroke) && e.symbol.attr('stroke', i.stroke), i['stroke-width'] && c.bottom.attr('stroke-width', i['stroke-width'] && e.symbol.attr('fill', i.fill)), i.cursor && e.tracker.attr('cursor', i.cursor)) : f.attr('fill', 'rgba(204,204,205,.5)'), f.off('fc-mousedown', h.mousedown).off('fc-unmouseup', h.mouseup).unhover(h.hoverin, h.hoverout).unmousemove(h.mousemove)) : !1 === b ? f.attr('fill', k).on('fc-mousedown', h.mousedown, c).on('fc-mouseup', h.mouseup, c).hover(h.hoverin, h.hoverout, c, c).mousemove(h.mousemove, c) : void 0);\n      },\n      \"button-label\": function buttonLabel(a) {\n        var b = this,\n            c = b._.button,\n            d = b.attrs,\n            e = c.label,\n            f = c.cssArg,\n            g = b.attrs['button-repaint'];\n        a = j(a || ''), 'none' === a ? e && (c.label = e.remove()) : a && (!e && (e = c.label = b.paper.text(b).insertBefore(c.tracker)), e.attr({\n          text: a,\n          \"text-anchor\": 'middle',\n          \"vertical-align\": 'middle'\n        }), f && f.length && e.css.apply(e, f)), g && d['button-label'] !== a && b.attr('button-repaint', g);\n      },\n      \"button-label-size\": function buttonLabelSize(a) {\n        var b = this,\n            c = b._.button,\n            d = b.attrs,\n            e = c.label,\n            f = b.attrs['button-label-size'];\n        e && e.attr({\n          \"font-size\": a\n        }), f && d['button-label-size'] !== a && b.attr('button-label-size', f);\n      },\n      \"button-label-family\": function buttonLabelFamily(b) {\n        var c = this,\n            d = c._.button,\n            e = c.attrs,\n            f = d.label,\n            g = c.attrs['button-label-family'];\n        f && (b === a && (b = 'sans-serif'), f.attr({\n          \"font-family\": b\n        }), g && e['button-label-family'] !== b && c.attr('button-label-family', g));\n      },\n      \"button-symbol\": function buttonSymbol(a) {\n        var b = this,\n            c = b._.button,\n            d = c.symbol,\n            e = b.attrs['button-repaint'];\n        a = j(a || ''), 'none' === a ? (d && (c.symbol = d.remove()), delete c.symbol) : a && !d && (d = c.symbol = b.paper.symbol(b).insertAfter(c.bound)), e && b.attr('button-repaint', e);\n      },\n      \"button-symbol-position\": function buttonSymbolPosition(a) {\n        return {\n          \"button-symbol-position\": {\n            top: 'top',\n            right: 'right',\n            bottom: 'bottom',\n            left: 'left',\n            none: 'none'\n          }[j(a).toLowerCase()] || 'none'\n        };\n      },\n      \"button-symbol-padding\": function buttonSymbolPadding(a) {\n        return {\n          \"button-symbol-padding\": h(a)\n        };\n      },\n      \"button-padding\": function buttonPadding(b, c) {\n        return {\n          \"button-padding\": [(null === b || b === a) && (b = 5) || h(b), (null === c || c === a) && b || h(c)]\n        };\n      },\n      \"button-repaint\": function buttonRepaint(c, d, e, f, j) {\n        var k,\n            l,\n            m,\n            n,\n            p,\n            q,\n            s,\n            t = this,\n            o = t._.button,\n            u = o.bound,\n            v = o.label,\n            z = o.symbol,\n            A = t.attrs,\n            B = A['button-padding'],\n            C = B[0],\n            D = B[1];\n\n        if (c === a && (c = 0), d === a && (d = 0), (e === a || f === a) && (q = v && v.getBBox() || {\n          width: 0,\n          height: 0\n        }, e === a && (e = 2 * C + q.width), f === a && (f = 2 * D + q.height)), s = b.crispBound(c, d, e, f, u.attr('stroke-width')), s.r = j = pluck(j, i(.1 * g(f, e))), c = s.x, d = s.y, e = s.width, f = s.height, v && v.attr({\n          x: c + e / 2,\n          y: d + f / 2\n        }), z) {\n          switch (b.is(p = A['button-symbol-padding'], 'finite') || (p = .2 * f), m = f - D, n = .5 * m, A['button-symbol-position'] + (v && '+' || '-')) {\n            case 'right+':\n              e += 2 * n + D, k = c + e - n - C, l = d + .5 * f, v.attr('transform', ['t', -(m + p), 0]);\n              break;\n\n            case 'left+':\n              e += 2 * n + D, k = c + C + n, l = d + .5 * f, v.attr('transform', ['t', m + p, 0]);\n              break;\n\n            case 'top+':\n              f += 2 * n + p, k = c + .5 * e, l = d + B[1] + n, v.attr('transform', ['t', 0, m + p]);\n              break;\n\n            case 'bottom+':\n              f += 2 * n + p, k = c + .5 * e, l = d + f - D - n, v.attr('transform', ['t', 0, -(m + p)]);\n              break;\n\n            default:\n              k = c + .5 * e, l = d + .5 * f;\n          }\n\n          z.attr('symbol', [A['button-symbol'], k, l, n, e, f]);\n        }\n\n        o.bound.attr(s), o.tracker.attr(s);\n      },\n      fill: function fill(a) {\n        var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n        var d = this,\n            e = d._.button,\n            f = e.bound,\n            g = {\n          normal: e.gradient,\n          active: e.gradientActive,\n          hover: e.gradientHover\n        }[a];\n        return g || (!c && (a = b.getRGB(a), a.error && (a = b.color('#cccccc')), a = 'opacity' in a ? 'rgba(' + [a.r, a.g, a.b, a.opacity] + ')' : 'rgb(' + [a.r, a.g, a.b] + ')'), e.gradient = c ? a : [90, b.tintshade(a, -.8).rgba + ':0', b.tintshade(a, .8).rgba + ':100'].join('-'), e.gradientActive = [270, b.tintshade(a, -.8).rgba + ':0', b.tintshade(a, .8).rgba + ':100'].join('-'), g = (d.pressed || d.active) && e.gradientActive || d.hovered && e.gradienthover || e.gradient), f.attr('fill', g), !1;\n      },\n      hoverFill: function hoverFill(a) {\n        var c = this,\n            d = c._.button;\n        return a = b.getRGB(a), a = 'opacity' in a ? 'rgba(' + [a.r, a.g, a.b, a.opacity] + ')' : 'rgb(' + [a.r, a.g, a.b] + ')', d.gradientHover = a, !1;\n      },\n      labelFill: function labelFill(a) {\n        var b = this,\n            c = b._.button,\n            d = c.label;\n        return d && a && (c.labelFill = a, d.attr('fill', a)), !1;\n      },\n      symbolFill: function symbolFill(a) {\n        var b = this,\n            c = b._.button,\n            d = c.symbol;\n        return d && a && (c.symbolFill = a, d.attr('fill', a)), !1;\n      },\n      stroke: function stroke(a) {\n        var c = this._.button;\n        return a = b.color(a), a.error && (a = b.color('#999999')), c.bound.attr('stroke', a), !1;\n      },\n      \"symbol-stroke\": function symbolStroke(a) {\n        var b = this._.button,\n            c = b.symbol;\n        return c && a && c.attr('stroke', a), !1;\n      },\n      \"stroke-width\": function strokeWidth(a) {\n        var b = this._.button;\n        return b.bound.attr('stroke-width', a), b.tracker.attr('stroke-width', a), !1;\n      },\n      \"symbol-stroke-width\": function symbolStrokeWidth(a) {\n        var b = this._.button,\n            c = b.symbol;\n        return c && a && c.attr('stroke-width', a), !1;\n      },\n      config: function config(a) {\n        var b = this;\n        a.hover && (b._hover = {\n          fill: a.hover.fill,\n          stroke: a.hover.stroke,\n          \"stroke-width\": a.hover['stroke-width'],\n          cursor: a.hover.cursor,\n          \"fill-symbol\": a.hover['fill-symbol'],\n          \"symbol-stroke\": a.hover['symbol-stroke'],\n          labelFill: a.hover.labelFill\n        }), a.disabled && (b._disabled = {\n          fill: a.disabled.fill,\n          stroke: a.disabled.stroke,\n          \"stroke-width\": a.disabled['stroke-width'],\n          \"symbol-stroke\": a.disabled['symbol-stroke'],\n          cursor: a.disabled.cursor,\n          labelFill: a.disabled.labelFill\n        }), a.pressed && (b._pressed = {\n          fill: a.pressed.fill,\n          stroke: a.pressed.stroke,\n          \"stroke-width\": a.pressed['stroke-width'],\n          cursor: a.pressed.cursor,\n          \"fill-symbol\": a.pressed['fill-symbol'],\n          \"symbol-stroke\": a.pressed['symbol-stroke'],\n          labelFill: a.pressed.labelFill\n        }), a.normal && (b._normal = {\n          fill: a.normal.fill,\n          stroke: a.normal.stroke,\n          \"stroke-width\": a.normal['stroke-width'],\n          cursor: a.normal.cursor,\n          \"fill-symbol\": a.normal['fill-symbol'],\n          \"symbol-stroke\": a.normal['symbol-stroke'],\n          labelFill: a.normal.labelFill\n        }), a.symbol && (a.symbol = {\n          stroke: a.normal.stroke,\n          \"stroke-width\": a.normal['stroke-width']\n        });\n      }\n    }\n  }]);\n}","map":null,"metadata":{},"sourceType":"module"}