{"ast":null,"code":"import { pluck, isIE9 } from '../../lib';\nexport default function (a) {\n  var b,\n      c,\n      d = window,\n      e = Math,\n      f = e.sqrt,\n      g = d.parseFloat,\n      h = d.parseInt,\n      i = d.SVGFilterElement || d.SVGFEColorMatrixElement && 2 === d.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE,\n      j = {\n    \"drop-shadow\": 'drop-shadow',\n    stroke: 'stroke',\n    fill: 'fill',\n    \"stroke-width\": 'stroke-width',\n    \"stroke-opacity\": 'stroke-opacity',\n    \"stroke-linecap\": 'stroke-linecap',\n    \"stroke-linejoin\": 'stroke-linejoin',\n    \"shape-rendering\": 'shape-rendering',\n    opacity: 'opacity',\n    \"fill-opacity\": 'fill-opacity'\n  };\n  a.svg ? (i && (a.filterShadow = function (b, c) {\n    var d,\n        e,\n        h,\n        i,\n        j = b.dx || 1,\n        k = b.dy || 1,\n        l = b.spread || 3,\n        m = b.color || 'rgb(64,64,64)',\n        n = b.paper,\n        o = n.cacheShadows || (n.cacheShadows = {}),\n        p = b.id || 'drop-shadow-' + (c ? 'layered' : 'non-layered') + '-' + [j, k, l, m].join(' '),\n        q = b.id || a.getElementID(p.replace(/[\\(\\)\\s%:,\\xb0#]/g, '_')),\n        r = b.id ? !!a._g.doc.getElementById(q) : !!o[p];\n    return n && !r ? (m = a.color(m), m.error && (m = a.color('rgba(0,0,0,1)')), h = pluck(m.opacity, 1), h = b.opacity || h, d = n.addDefs({\n      filter: {\n        tagName: 'filter',\n        id: q,\n        y: '-1000%',\n        x: '-1000%',\n        width: '2000%',\n        height: '2000%',\n        children: [{\n          tagName: 'feOffset',\n          result: 'offOut',\n          in: 'SourceGraphic',\n          dx: g(j),\n          dy: g(k)\n        }, {\n          tagName: 'feColorMatrix',\n          result: 'matrixOut',\n          in: 'offOut',\n          type: 'matrix',\n          values: '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ' + h + ' 0'\n        }, {\n          tagName: 'feGaussianBlur',\n          result: 'blurOut',\n          in: 'matrixOut',\n          stdDeviation: c ? 1 : f(g(l))\n        }, {\n          tagName: 'feComposite',\n          in: 'SourceGraphic',\n          in2: 'blurOut',\n          operator: 'over'\n        }]\n      }\n    }), e = d.filter.children, i = o[p] = {\n      use: 1,\n      hash: p,\n      id: q,\n      filter: d.filter.element,\n      offset: e[0].element,\n      matrix: e[1].element,\n      blur: e[2].element,\n      blend: e[3].element\n    }) : (i = o[p], i.use += 1), i;\n  }, a.el.dropshadow = function (b, d, e, f, g, h) {\n    var j,\n        k,\n        l,\n        m,\n        n,\n        p,\n        q,\n        r,\n        s = this,\n        o = s._.shadowFilter,\n        t = s.paper,\n        u = t.cacheShadows || (t.cacheShadows = {}),\n        v = 'drop-shadow' + [b, d, e, f].join(' ');\n\n    for (n = m = .05 * g, q = 1; 3 >= q; q++) {\n      n += m * q * (g - n);\n    }\n\n    if (j = h ? s.shadowElem || s.clone({\n      fill: 'none',\n      stroke: 'rgb(51, 51, 51)',\n      \"stroke-width\": s.attr('stroke-width') || 1,\n      opacity: n\n    }, h).translate(b, d).follow(s, c, !h && 'before') : s, k = j.shadowElem && j.shadowElem.node || j.node, 'none' !== b) h && !s.shadowElem && (p = !0), h && (s.shadowElem = j), o = o && u[v] ? u[v] : s._.shadowFilter = a.filterShadow({\n      paper: t,\n      dx: b,\n      dy: d,\n      spread: e,\n      color: f,\n      opacity: !h && n\n    }, !!h), !p && s.shadowElem && s.shadowElem.attr('opacity', n), k.setAttribute('filter', 'url(\"' + a._url + '#' + o.id + '\")');else if (o) {\n      if (o.use -= 1, k.removeAttribute('filter'), s.shadowElem && s.shadowElem.attr('opacity', 0), !o.use) {\n        for (l in v = o.hash, o) {\n          r = o[l], r.parentNode && r.parentNode.removeChild(r), delete o[l];\n        }\n\n        r = null, delete u[v];\n      }\n\n      o = null, delete s._.shadowFilter;\n    }\n    return this;\n  }), c = function c(a, b) {\n    var c,\n        d,\n        e = this,\n        f = {};\n\n    for (d in a) {\n      j[d] && (f[d] = a[d], delete a[d]), 'transform' === d ? (c = b.matrix.clone(), c.translate(e.__shadowx, e.__shadowy), e.transform(c.toTransformString())) : 'stroke-width' === d ? a[d] = f[d] || 1 : void 0;\n    }\n\n    for (d in e.attr(a), f) {\n      a[d] = f[d];\n    }\n  }, a.ca['drop-shadow'] = function (b, d, e, f, g, j) {\n    var k,\n        l,\n        m,\n        n,\n        p,\n        q,\n        r,\n        s = this,\n        o = s._.shadows || (s._.shadows = []);\n    if (s.__shadowblocked) return !1;\n    if ('none' === b) for (; l = o.pop();) {\n      l.remove();\n    } else for (f = a.color(f), f.error && (f = a.color('rgba(0,0,0,1)')), g instanceof Array ? (p = g[0], q = g[1]) : p = q = g, p = 1 / pluck(p, 1), q = 1 / pluck(q, 1), b = pluck(b, 1) * p, d = pluck(d, 1) * p, k = .05 * pluck(f.opacity, 1), m = h(s.attr('stroke-width') || 1, 10) + 6, n = s.matrix.clone(), n.translate(b, d), r = 1; 3 >= r; r++) {\n      l = (o[r - 1] || s.clone().follow(s, c, !j && 'before')).attr({\n        stroke: f.hex,\n        \"stroke-opacity\": k * r,\n        opacity: '1',\n        \"stroke-width\": (m - 2 * r) * q,\n        transform: n.toTransformString(),\n        \"stroke-linecap\": 'round',\n        \"stroke-linejoin\": 'round',\n        fill: 'none'\n      }), l.__shadowlevel = r, l.__shadowscale = q, l.__shadowx = b, l.__shadowy = d, j && j.appendChild(l), o.push(l);\n    }\n    return !1;\n  }, a.el.shadow = function (b, c, d, e) {\n    var f;\n\n    if (d && d.constructor === a.el.constructor && (e = d, d = void 0), 'object' == typeof b && (c && c.constructor === a.el.constructor && (e = c), c = b.opacity, d = b.scalefactor, f = void 0 === b.useFilter ? !isIE9 : !!b.useFilter, b = void 0 === b.apply ? !!c : b.apply), void 0 === c && (c = 1), this.dropshadow) {\n      if (f && !this.ca.hasOwnProperty('drop-shadow')) return b && this.dropshadow(1, 1, 3, 'rgb(64,64,64)', c, e) || this.dropshadow('none'), this;\n      this._.shadowFilter && this.dropshadow('none');\n    }\n\n    return this.attr('drop-shadow', b ? [1, 1, 3, 'rgba(64,64,64,' + c + ')', d, e] : 'none');\n  }) : a.vml ? (a.ca['drop-shadow'] = function (c, d, e, f, h, i) {\n    var j,\n        k,\n        l,\n        m,\n        n = this,\n        o = n._.shadow;\n    return !n.isShadow && ('none' === c ? o && (o = n._.shadow = o.remove()) : (!o && (o = n._.shadow = n.clone(), i && i.appendChild(o.follow(n)) || o.follow(n, b, 'before'), o.attr({\n      fill: 'none',\n      \"fill-opacity\": .5,\n      \"stroke-opacity\": 1\n    }).isShadow = !0, 0 >= o.attr('stroke-width') && o.attr('stroke-width', 1)), j = o.node.runtimeStyle, k = j.filter.replace(/ progid:\\S+Blur\\([^\\)]+\\)/g, ''), f = a.color(f), f.error && (f = a.color('rgba(0,0,0,1)')), m = pluck(f.opacity, 1) / 5, l = h instanceof Array ? h[0] : h, l = 1 / pluck(h, 1), c = pluck(c, 1) * l, d = pluck(d, 1) * l, o.translate(c, d), j.filter = k + ' progid:DXImageTransform.Microsoft.Blur(pixelRadius=' + g(.4 * e) + ' makeShadow=True Color=' + f.hex + ' shadowOpacity=\"' + m + '\");'), !1);\n  }, a.el.shadow = function (c, d, e, f) {\n    var g = this;\n    return e && e.constructor === a.el.constructor && (f = e, e = b), 'object' == typeof c && (d && 'group' === d.type && (f = d), d = c.opacity, e = c.scalefactor, c = c.apply === b ? !!d : c.apply), d === b && (d = 1), g.attr('drop-shadow', c || !d ? [1, 1, 5, 'rgba(64,64,64,' + d + ')', e, f] : 'none');\n  }) : a.canvas && (a.el.shadow = function () {\n    return this;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}