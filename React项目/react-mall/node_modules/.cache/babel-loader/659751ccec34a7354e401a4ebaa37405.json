{"ast":null,"code":"var lib = {\n  init: function init(a) {\n    var b = a.document,\n        c = a.navigator,\n        d = c.userAgent,\n        e = Math.ceil,\n        f = Math.floor;\n    return lib = {\n      win: a,\n      containerClass: 'fusioncharts-smartlabel-container',\n      classNameWithTag: 'fusioncharts-smartlabel-tag',\n      classNameWithTagBR: 'fusioncharts-smartlabel-br',\n      maxDefaultCacheLimit: 1e3,\n      classNameReg: /\\bfusioncharts-smartlabel-tag\\b/,\n      classNameBrReg: /\\bfusioncharts-smartlabel-br\\b/,\n      spanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n      spanAdditionReplacer: '$1<span class=\"fusioncharts-smartlabel-tag\">$2</span>',\n      spanRemovalRegx: /\\<span[^\\>]+?fusioncharts-smartlabel-tag[^\\>]{0,}\\>(.*?)\\<\\/span\\>/ig,\n      xmlTagRegEx: /<[^>][^<]*[^>]+>/i,\n      brRegex: /({br[ ]*})|(<br[ ]*>)|(<br[ ]*\\/>)|(<BR[ ]*\\/>)|(<br\\>)/g,\n      ltgtRegex: /&lt;|&gt;/g,\n      htmlSpecialEntityRegex: /&amp;|&quot;|&lt;|&gt;/g,\n      brReplaceRegex: /<br\\/>/ig,\n      testStrAvg: 'WgI',\n      parentContainerStyle: {\n        position: 'absolute',\n        top: '-9999em',\n        whiteSpace: 'nowrap',\n        padding: '0px',\n        width: '1px',\n        height: '1px',\n        overflow: 'hidden'\n      },\n      supportedStyle: {\n        font: 'font',\n        fontFamily: 'font-family',\n        \"font-family\": 'font-family',\n        fontWeight: 'font-weight',\n        \"font-weight\": 'font-weight',\n        fontSize: 'font-size',\n        \"font-size\": 'font-size',\n        lineHeight: 'line-height',\n        \"line-height\": 'line-height',\n        fontStyle: 'font-style',\n        \"font-style\": 'font-style'\n      },\n      getDocumentSupport: function getDocumentSupport() {\n        var c, e, f;\n        return b.getElementsByClassName ? (c = 'getElementsByClassName', e = 'fusioncharts-smartlabel-tag', f = !0) : (c = 'getElementsByTagName', e = 'span', f = !1), {\n          isIE: /msie/i.test(d) && !a.opera,\n          hasSVG: !!(a.SVGAngle || b.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n          isHeadLess: / HtmlUnit/.test(d),\n          isWebKit: / AppleWebKit\\//.test(d),\n          childRetriverFn: c,\n          childRetriverString: e,\n          noClassTesting: f\n        };\n      },\n      createContainer: function createContainer(a) {\n        var c, d;\n\n        if (a && (a.offsetWidth || a.offsetHeight)) {\n          if (a.appendChild) return a.appendChild(d = b.createElement('DIV')), d.className = 'fusioncharts-smartlabel-container', d.setAttribute('aria-hidden', 'true'), d.setAttribute('role', 'presentation'), d;\n        } else if (c = b.getElementsByTagName('body')[0], c && c.appendChild) return d = b.createElement('DIV'), d.className = 'fusioncharts-smartlabel-container', d.setAttribute('aria-hidden', 'true'), d.setAttribute('role', 'presentation'), c.appendChild(d), d;\n      },\n      getNearestBreakIndex: function getNearestBreakIndex(a, b, c) {\n        if (!a || !a.length) return 0;\n\n        var d,\n            g = c._getWidthFn(),\n            h = 0,\n            i = 0,\n            j = g(a),\n            k = j / a.length;\n\n        if (d = b, h = e(b / k), j < b) return a.length - 1;\n\n        for (h > a.length && (d = b - j, h = a.length); 0 < d;) {\n          if (d = b - g(a.substr(0, h)), i = f(d / k), i) h += i;else return h;\n        }\n\n        for (; 0 > d;) {\n          if (d = b - g(a.substr(0, h)), i = f(d / k), i) h += i;else return h;\n        }\n\n        return h;\n      },\n      setLineHeight: function setLineHeight(a) {\n        var b = a.fontSize = a.fontSize || a['font-size'] || '12px';\n        return a.lineHeight = a.lineHeight || a['line-height'] || 1.2 * parseInt(b, 10) + 'px', a;\n      },\n      _getCleanHeight: function _getCleanHeight(a) {\n        return a = a.replace(/px/g, ''), +a;\n      },\n      _getDimentionUsingDiv: function _getDimentionUsingDiv() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var b = arguments.length > 1 ? arguments[1] : undefined;\n        var c = b._container;\n        return a instanceof Array && (a = a.join('')), c.innerHTML = a, {\n          width: c.offsetWidth,\n          height: c.offsetHeight\n        };\n      },\n      _getDimentionUsingCanvas: function _getDimentionUsingCanvas() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var b = arguments.length > 1 ? arguments[1] : undefined;\n\n        var c = b.ctx,\n            d = b.style,\n            e = lib._getCleanHeight(d.lineHeight);\n\n        return a instanceof Array ? (a = a.join(''), a = a.replace(/<br \\/>/g, '')) : a = a.replace(/<br \\/>/g, ''), {\n          width: c.measureText(a).width,\n          height: e\n        };\n      },\n      _hasOnlyBRTag: function _hasOnlyBRTag() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var b,\n            c = a.replace(lib.brRegex, '<br />'),\n            d = c.split('<br />'),\n            e = d.length;\n\n        for (b = 0; b < e; b++) {\n          if (lib.xmlTagRegEx.test(d[b])) return !1;\n        }\n\n        return 1 < e;\n      },\n      _getDimentionOfMultiLineText: function _getDimentionOfMultiLineText() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var b = arguments.length > 1 ? arguments[1] : undefined;\n\n        var c,\n            d,\n            e,\n            f = Math.max,\n            g = a.replace(lib.brRegex, '<br />'),\n            h = lib._getTextArray(g),\n            j = 0,\n            k = 0,\n            l = b._getWidthFn(),\n            m = lib._getCleanHeight(b.style.lineHeight),\n            n = m,\n            o = {};\n\n        for (c = 0, d = h.length; c < d; c++) {\n          '<br />' === h[c] ? (k = f(k, j), j = 0, n += m) : (e = l(h[c]), j += e, o[h[c]] = e);\n        }\n\n        return k = f(k, j), {\n          height: n,\n          width: k,\n          detailObj: o\n        };\n      },\n      _getTextArray: function _getTextArray() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var b,\n            c,\n            d,\n            e,\n            f,\n            g,\n            h = [];\n\n        for (f = a.split('<br />'), d = f.length, b = 0; b < d; b++) {\n          for (g = f[b].split(''), e = g.length, c = 0; c < e; c++) {\n            h.push(g[c]);\n          }\n\n          b !== d - 1 && h.push('<br />');\n        }\n\n        return h;\n      },\n      _findLastIndex: function _findLastIndex() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var b = arguments.length > 1 ? arguments[1] : undefined;\n        var c,\n            d = a.length;\n\n        for (c = d - 1; 0 <= c; c--) {\n          if (a[c] === b) return c;\n        }\n\n        return -1;\n      }\n    }, lib;\n  }\n};\nexport default lib;","map":null,"metadata":{},"sourceType":"module"}