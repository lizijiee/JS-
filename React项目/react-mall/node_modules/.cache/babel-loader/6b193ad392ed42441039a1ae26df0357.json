{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { parseUnsafeString, pluck, pluckNumber, NORMAL, BOLD, setLineHeight, visibleStr, hiddenStr, convertColor } from '../../../../../fc-core/src/lib';\nimport Caption from '../caption';\nimport { addDep } from '../../../../../fc-core/src/dependency-manager';\nimport subcaptionAnimation from './index.animation';\nvar mathMax = Math.max,\n    PXSTRING = 'px',\n    POSITION_CENTER = 'center',\n    POSITION_TOP = 'top',\n    POSITION_BOTTOM = 'bottom',\n    POSITION_MIDDLE = 'middle';\naddDep({\n  name: 'subcaptionAnimation',\n  type: 'animationRule',\n  extension: subcaptionAnimation\n});\n\nvar SubCaption =\n/*#__PURE__*/\nfunction (_Caption) {\n  _inherits(SubCaption, _Caption);\n\n  function SubCaption() {\n    _classCallCheck(this, SubCaption);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SubCaption).apply(this, arguments));\n  }\n\n  _createClass(SubCaption, [{\n    key: \"getType\",\n    value: function getType() {\n      return 'caption';\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'subCaption';\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var a = this,\n          b = a.getFromEnv('chart'),\n          c = b.getFromEnv('chart-attrib'),\n          d = a.config || {},\n          e = b.getFromEnv('style'),\n          f = b.getChildren('caption')[0],\n          g = e.outCanfontFamily,\n          h = e.outCancolor,\n          i = e.fontSize,\n          j = ['top', 'center'];\n\n      switch (d.text = parseUnsafeString(c.subcaption), d.align || (d.align = ''), d.align = pluck(c.captionposition, c.captionalignment, POSITION_CENTER), f.config.align && (j = f.config.align.split('-'), j[0] && (j[0] = j[0].toLowerCase()), j[1] && (j[1] = j[1].toLowerCase()), 2 > j.length && (j[1] = j[0])), j[0]) {\n        case POSITION_TOP:\n          d.isOnTop = 1;\n          break;\n\n        case POSITION_BOTTOM:\n          d.isOnTop = 0;\n          break;\n\n        default:\n          d.isOnTop = pluckNumber(c.captionontop, 1);\n      }\n\n      d.alignWithCanvas = pluckNumber(b.aligncaptionwithcanvas, c.aligncaptionwithcanvas, 1), d.horizontalPadding = pluckNumber(c.captionhorizontalpadding, f.config.alignWithCanvas ? 0 : 15), d.style = {\n        fontFamily: pluck(c.subcaptionfont, c.captionfont, g),\n        color: convertColor(pluck(c.subcaptionfontcolor, c.captionfontcolor, h).replace(/^#? ([a-f0-9]+)/ig, '#$1')),\n        fontSize: pluckNumber(c.subcaptionfontsize, pluckNumber(mathMax(pluckNumber(c.captionfontsize) - 3, -1), i) + pluckNumber(b.subTitleFontSizeExtender, 1)) + PXSTRING,\n        fontWeight: 0 === pluckNumber(c.subcaptionfontbold, b.subTitleFontWeight, c.captionfontbold) ? NORMAL : BOLD\n      }, setLineHeight(d.style);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a,\n          b,\n          c = this,\n          d = c.getFromEnv('chart'),\n          e = d.getFromEnv('animationManager'),\n          f = d.getChildren('caption')[0],\n          g = d.config,\n          h = g.textDirection,\n          i = d.getChildContainer().captionGroup,\n          j = c.getGraphicalElement('subCaptionElement'),\n          k = c.getFromEnv('toolTipController'),\n          l = c.config,\n          m = l.style,\n          n = l.text,\n          o = f.config.align;\n      n ? (a = {\n        text: l.text,\n        fill: m.color,\n        x: l.x,\n        y: l.y,\n        \"text-anchor\": o || POSITION_MIDDLE,\n        \"vertical-align\": POSITION_TOP,\n        direction: h,\n        visibility: f.config.drawCaption ? visibleStr : hiddenStr\n      }, j = c.addGraphicalElement('subCaptionElement', e.setAnimation({\n        el: j || 'text',\n        attr: a,\n        container: i,\n        state: b,\n        component: c,\n        hookFn: function hookFn() {\n          this.css(m);\n        },\n        label: 'text'\n      })), j.css(m), g.showtooltip ? k.enableToolTip(j, l.originalText) : k.disableToolTip(j)) : j && c.removeGraphicalElement(j), g.savedSubCaption = j;\n    }\n  }, {\n    key: \"setDimention\",\n    value: function setDimention(a) {\n      this.config.x = a.x, this.config.y = a.y;\n    }\n  }]);\n\n  return SubCaption;\n}(Caption);\n\nexport default SubCaption;","map":null,"metadata":{},"sourceType":"module"}