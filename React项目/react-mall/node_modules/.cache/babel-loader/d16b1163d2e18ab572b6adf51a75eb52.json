{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport mergeDeepRight from 'ramda/src/mergeDeepRight';\nimport AnnotationBaseShape from './annotation-base';\nimport { toRaphaelColor, getDashStyle, pluckNumber, pluck, getFirstValue, POINTER, visibleStr, hiddenStr } from '../../../../fc-core/src/lib';\nimport { pluckBoolean, getEventData } from '../utils';\nvar selectionGroup,\n    UNDEF,\n    DEFAULT = 'default';\n\nvar DEFAULT_COLOR = '#FF0000',\n    DEFAULT_BORDER_COLOR = '#000000',\n    DEFAULT_ALPHA = 100,\n    DEFAULT_SHOW_BORDER = 0,\n    DEFAULT_BORDER_THICKNESS = 2,\n    DEFAULT_DASH_LEN = 5,\n    DEFAULT_DASH_GAP = 3,\n    FULL_ANGLE_DEGREES = 360,\n    DEFAULT_IS_DASHED = 0,\n    DEFAULT_SHOW_SHADOW = 0,\n    DEFAULT_TOOLTEXT = '',\n    RADIAL = 'radial',\n    DEFAULT_FILL_ANGLE = 0,\n    DEFAULT_IS_VISIBLE = !0,\n    isDefined = function isDefined(a) {\n  return a === UNDEF ? UNDEF : 1;\n};\n\nvar AnnotationShape =\n/*#__PURE__*/\nfunction (_AnnotationBaseShape) {\n  _inherits(AnnotationShape, _AnnotationBaseShape);\n\n  function AnnotationShape() {\n    _classCallCheck(this, AnnotationShape);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AnnotationShape).apply(this, arguments));\n  }\n\n  _createClass(AnnotationShape, [{\n    key: \"configureAttributes\",\n    value: function configureAttributes(a) {\n      var _ref, _ref2;\n\n      var b = this,\n          c = {},\n          d = b.config,\n          e = b.getFromEnv('chart'),\n          f = b.getLinkedParent();\n      b.groupConfig = {}, b.rawConfig = {}, null !== f && (b.groupConfig.x = f._getConfig('x'), b.groupConfig.y = f._getConfig('y'), b.groupConfig.grpXShift = f._getConfig('grpXShift'), b.groupConfig.grpYShift = f._getConfig('grpYShift'), b.groupConfig.color = f._getConfig('color'), b.groupConfig.alpha = f._getConfig('alpha'), b.groupConfig.font = f._getConfig('font'), b.groupConfig.fontSize = f._getConfig('fontSize'), b.groupConfig.textAlign = f._getConfig('textAlign'), b.groupConfig.textVAlign = f._getConfig('textVAlign'), b.groupConfig.rotateText = f._getConfig('rotateText'), b.groupConfig.wrapText = f._getConfig('wrapText'), b.groupConfig.toolText = f._getConfig('toolText'), b.groupConfig.scaleX = f._getConfig('scaleX'), b.groupConfig.scaleY = f._getConfig('scaleY'), b.groupConfig.scaleImageX = f._getConfig('scaleImageX'), b.groupConfig.scaleImageY = f._getConfig('scaleImageY'), b.groupConfig.link = f._getConfig('link')), c = mergeDeepRight(b.rawConfig, a), b.rawConfig = c, d.type = b.rawConfig.type, d.color = b._getFillColor(b.rawConfig, this.groupConfig), d.link = pluck(b.rawConfig.link, b.groupConfig.link), d.borderThickness = pluckNumber(parseFloat(b.rawConfig.borderThickness), parseFloat(b.rawConfig.thickness), DEFAULT_BORDER_THICKNESS), d.showBorder = pluckNumber(b.rawConfig.showBorder, parseFloat(b.rawConfig.borderThickness), parseFloat(b.rawConfig.thickness), isDefined(b.rawConfig.borderColor), isDefined(b.rawConfig.borderAlpha), DEFAULT_SHOW_BORDER), d.borderColor = b._getBorderColor(b.rawConfig), d.dashed = pluckNumber(b.rawConfig.dashed, DEFAULT_IS_DASHED), d.dashLen = pluckNumber(b.rawConfig.dashLen, DEFAULT_DASH_LEN), d.dashGap = pluckNumber(parseFloat(b.rawConfig.dashGap), DEFAULT_DASH_GAP), d.dashArrayStr = d.dashed ? getDashStyle(d.dashLen, d.dashGap) : 'none', d.x = pluckNumber(b.rawConfig.x, b.rawConfig.xPos, 0), d.y = pluckNumber(b.rawConfig.y, b.rawConfig.yPos, 0), d.tox = pluckNumber(b.rawConfig.toX, d.x, 0), d.toy = pluckNumber(b.rawConfig.toY, d.y, 0), 0 <= d.toy && 0 <= d.y && d.toy < d.y && (_ref = [d.toy, d.y], d.y = _ref[0], d.toy = _ref[1], _ref), 0 <= d.tox && 0 <= d.x && d.tox < d.x && (_ref2 = [d.tox, d.x], d.x = _ref2[0], d.tox = _ref2[1], _ref2), d.showShadow = pluckNumber(b.rawConfig.showShadow, f.config.showShadow, DEFAULT_SHOW_SHADOW), d.toolText = getFirstValue(b.rawConfig.toolText, this.groupConfig.toolText, DEFAULT_TOOLTEXT), d.isVisible = pluckBoolean(b.rawConfig.isVisible, DEFAULT_IS_VISIBLE), d.id = pluck(b.rawConfig.id, b.getId(b.config.elementType)), d.containerConfiguration = {\n        id: b.getLinkedParent().config.id,\n        label: 'group',\n        isParent: !0\n      }, b._clickHandler = b._clickHandler || function (a) {\n        b.config.link && b.getFromEnv('linkClickFN').call({\n          link: b.config.link\n        }, !0), b.rawConfig.onAnnotationClick instanceof Function ? b.rawConfig.onAnnotationClick() : f.rawConfig.onAnnotationClick instanceof Function ? f.rawConfig.onAnnotationClick() : e.fireChartInstanceEvent('annotationclick', getEventData(a, b, e), UNDEF, UNDEF, a);\n      }, b._rollOverHandler = b._rollOverHandler || function (a) {\n        b.rawConfig.onAnnotationRollover instanceof Function ? b.rawConfig.onAnnotationRollover() : f.rawConfig.onAnnotationRollover instanceof Function ? f.rawConfig.onAnnotationRollover() : e.fireChartInstanceEvent('annotationrollover', getEventData(a, b, e), UNDEF, UNDEF, a);\n      }, b._rollOutHandler = b._rollOutHandler || function (a) {\n        b.rawConfig.onAnnotationRollout instanceof Function ? b.rawConfig.onAnnotationRollout() : f.rawConfig.onAnnotationRollout instanceof Function ? f.rawConfig.onAnnotationRollout() : e.fireChartInstanceEvent('annotationrollout', getEventData(a, b, e), UNDEF, UNDEF, a);\n      };\n    }\n  }, {\n    key: \"_getBorderColor\",\n    value: function _getBorderColor(a) {\n      var b = this,\n          c = b.getType(),\n          d = 'none',\n          e = {\n        color: '',\n        alpha: ''\n      };\n      return 'line' !== c && (e.color = b.config.rawBorderColor = pluck(a.borderColor, a.fillColor && a.fillColor.split(',')[0], a.color && a.color.split(',')[0], DEFAULT_BORDER_COLOR), 0 === b.config.showBorder ? (e.alpha = 1, b.config.borderThickness = DEFAULT_BORDER_THICKNESS) : e.alpha = b.config.rawBorderAlpha = pluckNumber(parseFloat(a.borderAlpha), parseFloat(a.alpha), DEFAULT_ALPHA), d = toRaphaelColor(e)), d;\n    }\n  }, {\n    key: \"_getFillColor\",\n    value: function _getFillColor(a, b) {\n      var c = this,\n          d = c.getType(),\n          e = {\n        color: '',\n        alpha: '',\n        angle: '',\n        ratio: '',\n        radialGradient: 'circle' === d || 'arc' === d\n      };\n      return 'line' === d || 'image' === d ? (e.color = a.color || b.color || DEFAULT_COLOR, e.alpha = pluckNumber(parseFloat(a.alpha), b.alpha, DEFAULT_ALPHA)) : (e.color = a.fillColor || a.color || b.color || DEFAULT_COLOR, e.alpha = pluck(a.fillAlpha, parseFloat(a.alpha), b.alpha, DEFAULT_ALPHA), e.angle = FULL_ANGLE_DEGREES - pluckNumber(a.fillAngle, DEFAULT_FILL_ANGLE), e.ratio = pluck(a.fillRatio), a.fillPattern && (e.radialGradient = a.fillPattern.toLowerCase() === RADIAL || pluckNumber(a.fillPattern)), e.radialGradient && (e.gradientUnits = 'objectBoundingBox', e.cx = .5, e.cy = .5, e.fx = .5, e.fy = .5)), c.config.rawColor = e.color, c.config.rawAlpha = e.alpha, c.config.rawAngle = e.angle, c.config.rawFillPattern = e.radialGradient ? 'radial' : 'linear', c.config.rawRatio = e.ratio, toRaphaelColor(e);\n    }\n  }, {\n    key: \"_applyAttr\",\n    value: function _applyAttr(a) {\n      var b,\n          c = this,\n          d = c.getLinkedParent(),\n          e = c.rawConfig.animationLabel,\n          f = d.config.animationLabel,\n          g = c.config.elementType,\n          h = c.config.link,\n          i = Object.assign({}, a);\n      ('image' !== g || c.config.url) && (b = c.rawConfig.css || {}, b.cursor = h ? POINTER : DEFAULT, i.visibility = c.config.isVisible ? visibleStr : hiddenStr, c.addEventListener('fc-click', c._clickHandler), c.addEventListener('fc-mouseover', c._rollOverHandler), c.addEventListener('fc-mouseout', c._rollOutHandler), c.config.animationLabel = e || f || g, c.addGraphicalElement({\n        el: g,\n        attr: i,\n        css: b,\n        container: c.config.containerConfiguration,\n        component: c._getFromStore('component') || c,\n        label: c.config.animationLabel,\n        id: c.config.id,\n        tooltext: c.config.toolText,\n        shadow: {\n          opacity: 0 === c.config.showShadow ? 0 : 1,\n          useFilter: 'path' === g ? 0 : 1\n        }\n      }));\n    }\n  }, {\n    key: \"getScaledVal\",\n    value: function getScaledVal(a, b) {\n      var c = this.getLinkedParent();\n      return c ? c.getScaledVal(a, b) : a;\n    }\n  }, {\n    key: \"getScaledFont\",\n    value: function getScaledFont(a) {\n      var b = this.getLinkedParent();\n      return b ? b.getScaledFont(a) : a;\n    }\n  }, {\n    key: \"getScaledImageVal\",\n    value: function getScaledImageVal(a, b) {\n      var c = this.getLinkedParent();\n      return c ? c.getScaledImageVal(a, b) : a;\n    }\n  }, {\n    key: \"getScaleInfo\",\n    value: function getScaleInfo() {\n      return this.getLinkedParent().config.scaleInfo;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a,\n          b = this;\n      b.parseAndSetAttribute(), a = b._getAnnotationAttrs() || {}, b._applyAttr(a);\n    }\n  }], [{\n    key: \"destroySelectionBox\",\n    value: function destroySelectionBox() {\n      selectionGroup && selectionGroup.remove();\n    }\n  }]);\n\n  return AnnotationShape;\n}(AnnotationBaseShape);\n\nexport default AnnotationShape;","map":null,"metadata":{},"sourceType":"module"}