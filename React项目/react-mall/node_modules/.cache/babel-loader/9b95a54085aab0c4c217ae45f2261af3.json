{"ast":null,"code":"import SvgDeCanvo from '../_internal/vendors/svgtocanvas/src/svgdecanvo';\nimport { hasSVG, createElement } from '../../../fc-core/src/lib';\nimport { raiseWarning, triggerEvent } from '../../../fc-core/src/event-api';\nimport Ajax from '../../../fc-core/src/ajax';\n\nvar UNDEF,\n    win = window,\n    Image = win.Image,\n    doc = document,\n    EXPORTACTION = {\n  DOWNLOAD: 'download',\n  SAVE: 'save',\n  DOWNLOADSAVE: 'download-save'\n},\n    isCanvasElemSupported = function isCanvasElemSupported() {\n  var a = doc.createElement('canvas');\n  return !!(a.getContext && a.getContext('2d'));\n},\n    getBrowserDetails = function getBrowserDetails() {\n  var a,\n      b = win.navigator.userAgent;\n  return -1 === (a = b.indexOf('Edge')) ? -1 === (a = b.indexOf('Chrome')) ? -1 === (a = b.indexOf('MSIE')) ? -1 !== (a = b.indexOf('rv')) && -1 !== b.indexOf('Trident') ? {\n    name: 'ie',\n    version: b.substring(a + 5, a + 9)\n  } : -1 === (a = b.indexOf('Firefox')) ? -1 === (a = b.indexOf('Safari')) ? {\n    name: 'default',\n    version: 'Not Known'\n  } : {\n    name: 'Safari',\n    version: b.substring(a + 7, a + 11)\n  } : {\n    name: 'Firefox',\n    version: b.substring(a + 8, a + 12)\n  } : {\n    name: 'ie',\n    version: b.substring(a + 5, a + 9)\n  } : {\n    name: 'Chrome',\n    version: b.substring(a + 7, a + 11)\n  } : {\n    name: 'Edge',\n    version: b.substring(a + 5, a + 11)\n  };\n},\n    browserDetails = getBrowserDetails(),\n    sendExportData = function sendExportData(a, b) {\n  var c,\n      d,\n      e,\n      f,\n      g,\n      h,\n      i,\n      j,\n      k = b.exportAction,\n      l = b.exportTargetWindow,\n      m = b.exportCallback,\n      n = b.fusionCharts,\n      o = n.apiInstance,\n      p = b.paper,\n      q = b.chartId,\n      r = b.exportHandler,\n      s = a.parameters;\n\n  if (k === EXPORTACTION.DOWNLOAD || k === EXPORTACTION.DOWNLOADSAVE) {\n    for (c in /(webkit|gecko)/ig.test(win.navigator.userAgent) && '_self' === l && (l = e = q + 'export_iframe', !j && (j = f = createElement('IFRAME', {\n      name: e,\n      width: '1px',\n      height: '1px'\n    }, doc.body), f.style.cssText = 'position:absolute;left:-10px;top:-10px;')), d = createElement('form', {\n      method: 'POST',\n      action: r,\n      target: l,\n      style: 'display:none;'\n    }, doc.body), a) {\n      createElement('input', {\n        type: 'hidden',\n        name: c,\n        value: a[c]\n      }, d);\n    }\n\n    return d.submit(), doc.body.removeChild(d), d = UNDEF, h = s.match(/exportfilename=([^|]+)/)[1], i = s.match(/exportformat=([^|]+)/)[1], triggerEvent('exported', o, {\n      DOMId: q,\n      height: p.height,\n      width: p.width,\n      fileName: h + '.' + i,\n      statusCode: UNDEF,\n      statusMessage: UNDEF,\n      notice: UNDEF\n    }), m && win[m] && 'function' == typeof win[m] && win[m]({\n      statusCode: 1,\n      statusMessage: 'success',\n      DOMId: q,\n      width: p && p.width,\n      height: p && p.height\n    }), !0;\n  }\n\n  for (c in g = new Ajax(function (a) {\n    var b = {};\n    a.replace(/([^?=&]+)(=([^&]*))?/g, function (a, c, d, e) {\n      b[c] = e;\n    }), m && win[m] && 'function' == typeof win[m] && win[m](b), triggerEvent('exported', o, b);\n  }, function (a) {\n    var b = {\n      statusCode: 0,\n      statusMessage: 'failure',\n      error: a,\n      DOMId: q,\n      width: p && p.width,\n      height: p && p.height\n    };\n    m && win[m] && 'function' == typeof win[m] && win[m](b), triggerEvent('exported', o, b, [b]);\n  }), a) {\n    a.hasOwnProperty(c) && (a[c] = encodeURIComponent(a[c]));\n  }\n\n  g.post(r, a);\n},\n    dataurlToBlob = function dataurlToBlob(a) {\n  var b, c, d, e;\n\n  for (b = 0 <= a.split(',')[0].indexOf('base64') ? win.atob(a.split(',')[1]) : win.unescape(a.split(',')[1]), c = a.split(',')[0].split(':')[1].split(';')[0], d = new Uint8Array(b.length), e = 0; e < b.length; e++) {\n    d[e] = b.charCodeAt(e);\n  }\n\n  return new win.Blob([d], {\n    type: c\n  });\n},\n    makeClientSideDownload = function makeClientSideDownload(b, c, d) {\n  var e = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var f,\n      g,\n      h = getBrowserDetails(),\n      i = e.chartId,\n      j = e.exportCallback,\n      k = e.paper;\n  'Chrome' === h.name || 'Firefox' === h.name ? ('blob' === b && (c = win.URL.createObjectURL(c)), g = doc.createElement('a'), g.download = d, g.href = c, doc.body.appendChild(g), g.onclick = function () {\n    j && win[j] && 'function' == typeof win[j] && win[j]({\n      statusCode: 1,\n      statusMessage: 'success',\n      DOMId: i,\n      width: k && k.width,\n      height: k && k.height\n    }), g.parentNode.removeChild(g);\n  }, g.click()) : ('ie' === h.name || 'Edge' === h.name) && win.navigator.msSaveBlob && (f = 'url' === b ? dataurlToBlob(c) : c, win.navigator.msSaveBlob(f, d) && j && win[j] && 'function' == typeof win[j] && win[j]({\n    statusCode: 1,\n    statusMessage: 'success',\n    DOMId: i,\n    width: k && k.width,\n    height: k && k.height\n  }));\n},\n    byteLength = function byteLength(a) {\n  var b, c, d;\n\n  for (b = a.length, d = a.length - 1; 0 <= d; d--) {\n    c = a.charCodeAt(d), 127 < c && 2047 >= c ? b++ : 2047 < c && 65535 >= c && (b += 2), 56320 <= c && 57343 >= c && d--;\n  }\n\n  return b;\n},\n    isDataURITooLong = function isDataURITooLong(a) {\n  var b;\n  return !!(browserDetails.name.toLowerCase() === 'Chrome'.toLowerCase() && byteLength(a) > b);\n},\n    downloadCharts = function downloadCharts(a, b, c, d, e) {\n  b && !isDataURITooLong(b) ? makeClientSideDownload(a, b, c, e) : d && sendExportData(d, e);\n},\n    addSVGHeader = function addSVGHeader(a) {\n  return '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">' + a;\n},\n    svgStrToDataUrl = function svgStrToDataUrl(a) {\n  var b = addSVGHeader(a);\n  return b = 'data:image/svg+xml;base64,' + win.btoa(win.unescape(encodeURIComponent(b))), b;\n},\n    drawSvgOnCanvas = function drawSvgOnCanvas() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var b = arguments.length > 1 ? arguments[1] : undefined;\n  var c = a.svg,\n      d = a.canvas,\n      e = a.x,\n      f = a.y,\n      g = a.width,\n      h = a.height,\n      i = a.useCanvas;\n  if ('ie' === browserDetails.name || 'Edge' === browserDetails.name || i) new SvgDeCanvo(c, d, e, f, g, h, function () {\n    b();\n  });else {\n    var j, k, l;\n    l = svgStrToDataUrl(c), j = d.getContext('2d'), k = new Image(), k.onload = function () {\n      j.drawImage(k, e, f, g, h), b();\n    }, k.onerror = function () {\n      raiseWarning(this, '', 'run', 'libSVGToCanvas:drawSvgOnCanvas', 'Unable to load image for canvas drawing. Aborting attempt.');\n    }, k.src = l;\n  }\n};\n\nbrowserDetails.hasCanvas = isCanvasElemSupported(), browserDetails.hasSvg = hasSVG;\nexport { downloadCharts, browserDetails, drawSvgOnCanvas, isCanvasElemSupported };","map":null,"metadata":{},"sourceType":"module"}