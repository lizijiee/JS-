{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\List\\\\EditClick\\\\Step\\\\StepOne.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\nimport './Add.less';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar ButtonGroup = Button.Group;\nvar TextArea = Input.TextArea;\n/* \r\n    antd 表单使用\r\n    resetFields() 重置表单内数据\r\n\r\n    getFieldsValue([\"name\"],).name  校验并获取一组输入域的值与 Error(用于提交之前)\r\n    name为ID也为Key值，函数返回值为对象\r\n    前两个参数都为数组， [fieldNames: string[]], [options: object] \r\n\r\n     validateFieldsAndScroll([\"name\"])//直接调用就可以\t  参考 validateFields\r\n     如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围（建议用在Submit）\r\n\r\n     isFieldValidating\t判断一个输入控件是否在校验状态（可以扔到help里面）\r\n     两种报错方法 validateFields和rule中的min判断条件\r\n     min默认为 name is require 使用message进行修改\r\n*/\n\nvar StepOne =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepOne, _Component);\n\n  function StepOne() {\n    _classCallCheck(this, StepOne);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StepOne).apply(this, arguments));\n  }\n\n  _createClass(StepOne, [{\n    key: \"handleReset\",\n\n    /*  constructor(props) {//传入的props需要在constructor接收一下\r\n       super()\r\n     } */\n    value: function handleReset(e) {\n      //resetFields重置表单内容\n      e.preventDefault();\n      this.props.props.form.resetFields();\n    }\n  }, {\n    key: \"userExists\",\n    value: function userExists(rule, value, callback) {\n      //当做validator函数来用,用来作为判断条件\n      if (!value) {\n        callback();\n      } else {\n        setTimeout(function () {\n          if (value === '宫爆鸡丁') {\n            callback([new Error('抱歉，该菜名已被占用。')]);\n          } else {\n            callback();\n          }\n        }, 800);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.state.categoryName); // console.log(this.props.props)\n    } // componentWillReceiveProps() {\n    // console.log(this.props.form.getFieldError(\"name\"))\n    //返回值     [\"输入1时显示报错\"]\n    //          [\"菜品名至少为 1个字符\"]  message \n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // 子组件不能修改，但是还需要数值改变！！！！怎样处理，直接在对象里面搞个数值太low了\n      var data = this.props.state.data;\n      var storeData = this.props.state.storeData;\n      var categoryName = this.props.state.categoryName;\n      var categoryTag = [\"折扣\", \"热销\", \"推荐\"];\n      var categoryFilter = Object.values(categoryName).filter(function (ele) {\n        return ele != \"折扣\" && ele != \"热销\" && ele != \"推荐\";\n      });\n      console.log(categoryFilter); // console.log(data)  数据传数值\n\n      var _this$props$props$for = this.props.props.form,\n          getFieldProps = _this$props$props$for.getFieldProps,\n          getFieldError = _this$props$props$for.getFieldError,\n          isFieldValidating = _this$props$props$for.isFieldValidating; //--------------------------------需要-----------------------\n\n      var nameProps = getFieldProps('spuName', {\n        //第一个参数为ID,第二个为options\n        initialValue: storeData.spuName,\n        rules: [{\n          required: true,\n          min: 1,\n          message: '菜品名至少为 1 个字符'\n        }, {\n          validator: this.userExists.bind(this)\n        }]\n      });\n      var selectProps = getFieldProps('categoryName', {\n        //菜品类型\n        initialValue: storeData.categoryName,\n        rules: [{\n          required: true,\n          message: '请选择菜品类型'\n        }]\n      });\n      var priceProps = getFieldProps('currentPrice', {\n        //textarea 为ID\n        initialValue: storeData.currentPrice,\n        rules: [{\n          required: true,\n          message: '输入内容不能为空'\n        }]\n      });\n      var countProps = getFieldProps('count', {\n        //textarea 为ID\n        initialValue: storeData.count,\n        rules: [{\n          pattern: new RegExp(/^\\d(\\.\\d+)?$/, \"g\"),\n          message: '请输入折扣数字'\n        }]\n      });\n      var textareaProps = getFieldProps('spuDesc', {\n        //textarea 为ID\n        initialValue: storeData.spuDesc\n      });\n      var formItemLayout = {\n        //样式\n        labelCol: {\n          span: 7\n        },\n        wrapperCol: {\n          span: 12\n        }\n      };\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u540D\\u79F0\\uFF1A\",\n        hasFeedback: true,\n        help: isFieldValidating('spuName') ? '校验中...' : (getFieldError('spuName') || []).join(', '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Input, Object.assign({}, nameProps, {\n        placeholder: \" \\u8F93\\u5165 \\u5BAB\\u7206\\u9E21\\u4E01 \\u770B\\u770B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u83DC\\u54C1\\u7C7B\\u578B\\uFF1A\"\n      }, formItemLayout, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Select, Object.assign({\n        style: {\n          width: 200\n        }\n      }, selectProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), Object.values(categoryName).map(function (item, index) {\n        return React.createElement(Option, {\n          value: item,\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, item);\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u4EF7\\u683C\\uFF1A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(InputNumber, Object.assign({\n        style: {\n          width: 320,\n          fontSize: 13\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u83DC\\u54C1\\u4EF7\\u683C\",\n        id: \"price\",\n        name: \"price\"\n      }, priceProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u6298\\u6263\\uFF1A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(InputNumber, Object.assign({\n        style: {\n          width: 320,\n          fontSize: 13\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u6298\\u6263\"\n      }, countProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        id: \"control-textarea\",\n        label: \"\\u83DC\\u54C1\\u4ECB\\u7ECD\\uFF1A\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"textarea\", Object.assign({\n        id: \"control-textarea\",\n        style: {\n          borderRadius: 6,\n          textAlign: \"left\",\n          verticalAlign: \"top\",\n          border: \"1px solid #d9d9d9\",\n          fontSize: 14,\n          lineHeight: \"20px\",\n          textIndent: \"1em\"\n        }\n      }, priceProps, {\n        placeholder: \"Please enter...\",\n        cols: \"45\",\n        rows: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        style: {\n          borderRadius: 15,\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleReset.bind(this),\n        style: {\n          marginLeft: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Reset\")));\n    }\n  }]);\n\n  return StepOne;\n}(Component);\n\nexport default StepOne;","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\List\\EditClick\\Step\\StepOne.js"],"names":["React","Component","Button","Form","Input","Select","InputNumber","FormItem","Item","Option","ButtonGroup","Group","TextArea","StepOne","e","preventDefault","props","form","resetFields","rule","value","callback","setTimeout","Error","console","log","state","categoryName","data","storeData","categoryTag","categoryFilter","Object","values","filter","ele","getFieldProps","getFieldError","isFieldValidating","nameProps","initialValue","spuName","rules","required","min","message","validator","userExists","bind","selectProps","priceProps","currentPrice","countProps","count","pattern","RegExp","textareaProps","spuDesc","formItemLayout","labelCol","span","wrapperCol","join","width","map","item","index","fontSize","borderRadius","textAlign","verticalAlign","border","lineHeight","textIndent","marginTop","handleReset","marginLeft"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,WAAtC,QAAyD,MAAzD;AACA,OAAO,YAAP;AAGA,IAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAtB;AACA,IAAMC,MAAM,GAAGJ,MAAM,CAACI,MAAtB;AACA,IAAMC,WAAW,GAAGR,MAAM,CAACS,KAA3B;AACA,IAAMC,QAAQ,GAAGR,KAAK,CAACQ,QAAvB;AAEA;;;;;;;;;;;;;;;;IAeMC,O;;;;;;;;;;;;;;AACJ;;;gCAGYC,C,EAAG;AACb;AACAA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWA,KAAX,CAAiBC,IAAjB,CAAsBC,WAAtB;AACD;;;+BACUC,I,EAAMC,K,EAAOC,Q,EAAU;AAChC;AACA,UAAI,CAACD,KAAL,EAAY;AACVC,QAAAA,QAAQ;AACT,OAFD,MAEO;AACLC,QAAAA,UAAU,CAAC,YAAM;AACf,cAAIF,KAAK,KAAK,MAAd,EAAsB;AACpBC,YAAAA,QAAQ,CAAC,CAAC,IAAIE,KAAJ,CAAU,aAAV,CAAD,CAAD,CAAR;AACD,WAFD,MAEO;AACLF,YAAAA,QAAQ;AACT;AACF,SANS,EAMP,GANO,CAAV;AAOD;AACF;;;wCAEmB;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,YAA7B,EADkB,CAElB;AACD,K,CACD;AACA;AACA;AACA;AACA;;;;6BACS;AAEP;AAEA,UAAMC,IAAI,GAAG,KAAKZ,KAAL,CAAWU,KAAX,CAAiBE,IAA9B;AACA,UAAMC,SAAS,GAAG,KAAKb,KAAL,CAAWU,KAAX,CAAiBG,SAAnC;AACA,UAAMF,YAAY,GAAG,KAAKX,KAAL,CAAWU,KAAX,CAAiBC,YAAtC;AACA,UAAMG,WAAW,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAApB;AACA,UAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcN,YAAd,EAA4BO,MAA5B,CAAmC,UAACC,GAAD;AAAA,eAASA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,IAAtB,IAA8BA,GAAG,IAAI,IAA9C;AAAA,OAAnC,CAAvB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYM,cAAZ,EATO,CAWP;;AAXO,kCAYqD,KAAKf,KAAL,CAAWA,KAAX,CAAiBC,IAZtE;AAAA,UAYCmB,aAZD,yBAYCA,aAZD;AAAA,UAYgBC,aAZhB,yBAYgBA,aAZhB;AAAA,UAY+BC,iBAZ/B,yBAY+BA,iBAZ/B,EAaP;;AACA,UAAMC,SAAS,GAAGH,aAAa,CAAC,SAAD,EAAY;AAAE;AAC3CI,QAAAA,YAAY,EAAEX,SAAS,CAACY,OADiB;AAEzCC,QAAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,GAAG,EAAE,CAAvB;AAA0BC,UAAAA,OAAO,EAAE;AAAnC,SADK,EAEL;AAAEC,UAAAA,SAAS,EAAE,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB;AAAb,SAFK;AAFkC,OAAZ,CAA/B;AAQA,UAAMC,WAAW,GAAGb,aAAa,CAAC,cAAD,EAAiB;AAAC;AACjDI,QAAAA,YAAY,EAAEX,SAAS,CAACF,YADwB;AAEhDe,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBE,UAAAA,OAAO,EAAE;AAA3B,SAAD;AAFyC,OAAjB,CAAjC;AAKA,UAAMK,UAAU,GAAGd,aAAa,CAAC,cAAD,EAAiB;AAAC;AAChDI,QAAAA,YAAY,EAAEX,SAAS,CAACsB,YADuB;AAE/CT,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAiBE,UAAAA,OAAO,EAAE;AAA1B,SAAD;AAFwC,OAAjB,CAAhC;AAIA,UAAMO,UAAU,GAAEhB,aAAa,CAAC,OAAD,EAAU;AAAC;AACxCI,QAAAA,YAAY,EAAEX,SAAS,CAACwB,KADe;AAEvCX,QAAAA,KAAK,EAAE,CAAC;AAAGY,UAAAA,OAAO,EAAE,IAAIC,MAAJ,CAAW,cAAX,EAA2B,GAA3B,CAAZ;AAA4CV,UAAAA,OAAO,EAAE;AAArD,SAAD;AAFgC,OAAV,CAA/B;AAIA,UAAMW,aAAa,GAAGpB,aAAa,CAAC,SAAD,EAAY;AAAC;AAC9CI,QAAAA,YAAY,EAAEX,SAAS,CAAC4B;AADqB,OAAZ,CAAnC;AAIA,UAAMC,cAAc,GAAG;AAAC;AACtBC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADW;AAErBC,QAAAA,UAAU,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFS,OAAvB;AAIA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,oBACMF,cADN;AAEE,QAAA,KAAK,EAAC,gCAFR;AAGE,QAAA,WAAW,MAHb;AAIE,QAAA,IAAI,EAAEpB,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,QAA/B,GAA0C,CAACD,aAAa,CAAC,SAAD,CAAb,IAA4B,EAA7B,EAAiCyB,IAAjC,CAAsC,IAAtC,CAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAME,oBAAC,KAAD,oBAAWvB,SAAX;AAAsB,QAAA,WAAW,EAAC,qDAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CADF,EAWE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAC;AADR,SAEMmB,cAFN;AAGE,QAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT;AAAf,SACMd,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIIjB,MAAM,CAACC,MAAP,CAAcN,YAAd,EAA4BqC,GAA5B,CAAgC,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/C,eAAO,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAED,IAAf;AAAqB,UAAA,GAAG,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCA,IAAjC,CAAP;AACD,OAFD,CAJJ,CALF,CAXF,EA2BE,oBAAC,QAAD,oBACMP,cADN;AAEE,QAAA,KAAK,EAAC,gCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE,GAAT;AAAcI,UAAAA,QAAQ,EAAE;AAAxB,SADT;AAEE,QAAA,WAAW,EAAC,4CAFd;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,IAAI,EAAC;AAJP,SAKMjB,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CA3BF,EAuCE,oBAAC,QAAD,oBACMQ,cADN;AAEE,QAAA,KAAK,EAAC,gCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE,GAAT;AAAcI,UAAAA,QAAQ,EAAE;AAAxB,SADT;AAEE,QAAA,WAAW,EAAC;AAFd,SAGOf,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CAvCF,EAmDE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,KAAK,EAAC;AAFR,SAGMM,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKE,oBAAC,QAAD;AACA,QAAA,IAAI,EAAE,CADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAQE;AAAU,QAAA,EAAE,EAAC,kBAAb;AAAgC,QAAA,KAAK,EAAE;AACrCU,UAAAA,YAAY,EAAE,CADuB;AACpBC,UAAAA,SAAS,EAAE,MADS;AACDC,UAAAA,aAAa,EAAE,KADd;AACqBC,UAAAA,MAAM,EAAE,mBAD7B;AACkDJ,UAAAA,QAAQ,EAAE,EAD5D;AACgEK,UAAAA,UAAU,EAAE,MAD5E;AACoFC,UAAAA,UAAU,EAAE;AADhG;AAAvC,SAGMvB,UAHN;AAIE,QAAA,WAAW,EAAC,iBAJd;AAKE,QAAA,IAAI,EAAC,IALP;AAME,QAAA,IAAI,EAAC,GANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,CAnDF,EAoEE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAEkB,UAAAA,YAAY,EAAE,EAAhB;AAAoBM,UAAAA,SAAS,EAAE;AAA/B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKC,WAAL,CAAiB3B,IAAjB,CAAsB,IAAtB,CADX;AAEE,QAAA,KAAK,EAAE;AAAE4B,UAAAA,UAAU,EAAE;AAAd,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CApEF,CADF;AA6ED;;;;EAzJmB3E,S;;AA4JtB,eAAeY,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\r\nimport './Add.less';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst ButtonGroup = Button.Group;\r\nconst TextArea = Input.TextArea;\r\n\r\n/* \r\n    antd 表单使用\r\n    resetFields() 重置表单内数据\r\n\r\n    getFieldsValue([\"name\"],).name  校验并获取一组输入域的值与 Error(用于提交之前)\r\n    name为ID也为Key值，函数返回值为对象\r\n    前两个参数都为数组， [fieldNames: string[]], [options: object] \r\n\r\n     validateFieldsAndScroll([\"name\"])//直接调用就可以\t  参考 validateFields\r\n     如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围（建议用在Submit）\r\n\r\n     isFieldValidating\t判断一个输入控件是否在校验状态（可以扔到help里面）\r\n     两种报错方法 validateFields和rule中的min判断条件\r\n     min默认为 name is require 使用message进行修改\r\n*/\r\nclass StepOne extends Component {\r\n  /*  constructor(props) {//传入的props需要在constructor接收一下\r\n     super()\r\n   } */\r\n  handleReset(e) {\r\n    //resetFields重置表单内容\r\n    e.preventDefault();\r\n    this.props.props.form.resetFields();\r\n  };\r\n  userExists(rule, value, callback) {\r\n    //当做validator函数来用,用来作为判断条件\r\n    if (!value) {\r\n      callback();\r\n    } else {\r\n      setTimeout(() => {\r\n        if (value === '宫爆鸡丁') {\r\n          callback([new Error('抱歉，该菜名已被占用。')]);\r\n        } else {\r\n          callback();\r\n        }\r\n      }, 800);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.state.categoryName)\r\n    // console.log(this.props.props)\r\n  }\r\n  // componentWillReceiveProps() {\r\n  // console.log(this.props.form.getFieldError(\"name\"))\r\n  //返回值     [\"输入1时显示报错\"]\r\n  //          [\"菜品名至少为 1个字符\"]  message \r\n  // };\r\n  render() {\r\n\r\n    // 子组件不能修改，但是还需要数值改变！！！！怎样处理，直接在对象里面搞个数值太low了\r\n\r\n    const data = this.props.state.data;\r\n    const storeData = this.props.state.storeData;\r\n    const categoryName = this.props.state.categoryName;\r\n    const categoryTag = [\"折扣\", \"热销\", \"推荐\"]\r\n    const categoryFilter = Object.values(categoryName).filter((ele) => ele != \"折扣\" && ele != \"热销\" && ele != \"推荐\")\r\n    console.log(categoryFilter)\r\n\r\n    // console.log(data)  数据传数值\r\n    const { getFieldProps, getFieldError, isFieldValidating } = this.props.props.form;\r\n    //--------------------------------需要-----------------------\r\n    const nameProps = getFieldProps('spuName', { //第一个参数为ID,第二个为options\r\n      initialValue: storeData.spuName,\r\n      rules: [\r\n        { required: true, min: 1, message: '菜品名至少为 1 个字符' },\r\n        { validator: this.userExists.bind(this) }\r\n      ]\r\n    });\r\n\r\n    const selectProps = getFieldProps('categoryName', {//菜品类型\r\n      initialValue: storeData.categoryName,\r\n      rules: [{ required: true, message: '请选择菜品类型' }]\r\n    });\r\n\r\n    const priceProps = getFieldProps('currentPrice', {//textarea 为ID\r\n      initialValue: storeData.currentPrice,\r\n      rules: [{ required: true,message: '输入内容不能为空' }]\r\n    });\r\n    const countProps= getFieldProps('count', {//textarea 为ID\r\n      initialValue: storeData.count,\r\n      rules: [{  pattern: new RegExp(/^\\d(\\.\\d+)?$/, \"g\"),message: '请输入折扣数字' }]\r\n    });\r\n    const textareaProps = getFieldProps('spuDesc', {//textarea 为ID\r\n      initialValue: storeData.spuDesc,\r\n    });\r\n\r\n    const formItemLayout = {//样式\r\n      labelCol: { span: 7 },\r\n      wrapperCol: { span: 12 },\r\n    };\r\n    return (\r\n      <Form >\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"菜品名称：\"\r\n          hasFeedback\r\n          help={isFieldValidating('spuName') ? '校验中...' : (getFieldError('spuName') || []).join(', ')}\r\n        >\r\n          <Input {...nameProps} placeholder=\" 输入 宫爆鸡丁 看看\"\r\n          />\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          label=\"菜品类型：\"\r\n          {...formItemLayout}\r\n          required\r\n        >\r\n          <Select style={{ width: 200 }}\r\n            {...selectProps}\r\n          >\r\n            {\r\n              Object.values(categoryName).map((item, index) => {\r\n                return <Option value={item} key={item}>{item}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"菜品价格：\"\r\n        >\r\n          <InputNumber\r\n            style={{ width: 320, fontSize: 13 }}\r\n            placeholder=\"请输入菜品价格\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            {...priceProps}\r\n          />\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"菜品折扣：\"\r\n        >\r\n          <InputNumber\r\n            style={{ width: 320, fontSize: 13 }}\r\n            placeholder=\"请输入折扣\"\r\n             {...countProps}\r\n          />\r\n        </FormItem>\r\n\r\n      \r\n        <FormItem\r\n          id=\"control-textarea\"\r\n          label=\"菜品介绍：\"\r\n          {...formItemLayout}\r\n        >\r\n          <TextArea \r\n          rows={4} \r\n          />\r\n          <textarea id=\"control-textarea\" style={{\r\n            borderRadius: 6, textAlign: \"left\", verticalAlign: \"top\", border: \"1px solid #d9d9d9\", fontSize: 14, lineHeight: \"20px\", textIndent: \"1em\"\r\n          }}\r\n            {...priceProps}\r\n            placeholder=\"Please enter...\"\r\n            cols=\"45\"\r\n            rows=\"4\" />\r\n        </FormItem>\r\n\r\n        <ButtonGroup style={{ borderRadius: 15, marginTop: 30 }}>\r\n          <Button\r\n            onClick={this.handleReset.bind(this)}\r\n            style={{ marginLeft: 400 }}>Reset</Button>\r\n        </ButtonGroup>\r\n      </Form >\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default StepOne"]},"metadata":{},"sourceType":"module"}