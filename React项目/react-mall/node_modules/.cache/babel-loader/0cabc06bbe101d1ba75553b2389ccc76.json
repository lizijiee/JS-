{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { stubFN, pluckNumber, convertColor } from '../../../lib';\nimport Tool from '../tool';\nimport ScrollTrack from './scroll-track';\nimport ScrollAnchor from './scroll-anchor';\nimport ScrollButtons from './scroll-buttons';\nimport { mergeConf } from '../helper';\nvar UNDEF;\n\nvar Scroller =\n/*#__PURE__*/\nfunction (_Tool) {\n  _inherits(Scroller, _Tool);\n\n  function Scroller() {\n    _classCallCheck(this, Scroller);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Scroller).apply(this, arguments));\n  }\n\n  _createClass(Scroller, [{\n    key: \"configureAttributes\",\n    value: function configureAttributes() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(Scroller.prototype), \"configureAttributes\", this).call(this, a);\n\n      var b = this.config,\n          c = this.getFromEnv('chart-attrib');\n      b.conf = {}, b.color = c.scrollcolor && convertColor(c.scrollcolor), b.padding = pluckNumber(c.scrollpadding, 0), b.height = pluckNumber(c.scrollheight, 12), b.width = pluckNumber(c.scrollwidth, 12), b.displayFlat = pluckNumber(c.flatscrollbars, 0), b.scrollBar3DLighting = pluckNumber(c.scrollbar3dlighting, 1), b.startPercent = Math.min(1, Math.max(0, parseFloat(c.scrolltoend) || 0)), b.showButtons = !!pluckNumber(c.scrollshowbuttons, 1), b.buttonPadding = pluckNumber(c.scrollbtnpadding, 0), b.anchorFill = a.anchorFill, b.anchorStroke = a.anchorStroke, b.trackFill = a.trackFill, b.trackStroke = a.trackStroke, b.buttonFill = a.buttonFill, b.buttonStroke = a.buttonStroke, b.buttonPointerFill = a.buttonPointerFill, b.drawStripes = a.drawStripes, b.stripesStroke = a.stripesStroke, b.restrictScrollAnchor = pluckNumber(a.restrictScrollAnchor, 1), this.setConfiguaration(a), b.evt = {\n        tooltext: UNDEF,\n        click: stubFN,\n        hover: [stubFN, stubFN]\n      }, this.createScrollItems();\n    }\n  }, {\n    key: \"createScrollItems\",\n    value: function createScrollItems() {\n      var a = this,\n          b = this.config,\n          c = a.getChildren('scrollTrack') && a.getChildren('scrollTrack')[0],\n          d = a.getChildren('scrollAnchor') && a.getChildren('scrollAnchor')[0],\n          e = a.getChildren('scrollButtons') && a.getChildren('scrollButtons')[0],\n          f = a.getChildren('scrollButtons') && a.getChildren('scrollButtons')[0];\n      c || (c = a.attachChild(ScrollTrack, 'scrollTrack'), c.configure({\n        trackFill: b.trackFill,\n        trackStroke: b.trackStroke\n      }), c.attachEventHandlers()), d || (d = a.attachChild(ScrollAnchor, 'scrollAnchor'), d.configure({\n        anchorFill: b.anchorFill,\n        anchorStroke: b.anchorStroke,\n        drawStripes: b.drawStripes,\n        stripesStroke: b.stripesStroke\n      }), d.attachEventHandlers()), !e && b.showButtons && (e = a.attachChild(ScrollButtons, 'scrollStartButton'), e.configure({\n        type: 'start',\n        buttonFill: b.buttonFill,\n        buttonStroke: b.buttonStroke,\n        buttonPointerFill: b.buttonPointerFill\n      }), e.attachEventHandlers()), !f && b.showButtons && (f = a.attachChild(ScrollButtons, 'scrollEndButton'), f.configure({\n        type: 'end',\n        buttonFill: b.buttonFill,\n        buttonStroke: b.buttonStroke,\n        buttonPointerFill: b.buttonPointerFill\n      }), f.attachEventHandlers());\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'scroller';\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'scroller';\n    }\n  }, {\n    key: \"setConfiguaration\",\n    value: function setConfiguaration(a) {\n      var b = this.config,\n          c = this.getFromEnv('chart'),\n          d = c.getFromEnv('color-manager');\n      b.color || (b.color = '#' + d.getColor('altHGridColor')), mergeConf(a, b);\n    }\n  }, {\n    key: \"getLogicalSpace\",\n    value: function getLogicalSpace() {\n      var a = this.config,\n          b = a.conf,\n          c = {};\n      return mergeConf(a, c), mergeConf(c, b), _get(_getPrototypeOf(Scroller.prototype), \"getLogicalSpace\", this).call(this);\n    }\n  }, {\n    key: \"setDimension\",\n    value: function setDimension(a) {\n      _get(_getPrototypeOf(Scroller.prototype), \"setDimension\", this).call(this, a);\n\n      var b = this,\n          c = b.getLinkedParent(),\n          d = c.getPosition && c.getPosition() || {},\n          e = b.getChildren('scrollTrack')[0].config;\n      e.transLateX = d.x || 0, e.transLateY = d.y || 0;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a = this,\n          b = a.config,\n          c = b.conf,\n          d = {};\n      c.isHorizontal ? delete d.width : delete d.height, mergeConf(d, b, !0), a.addGraphicalElement({\n        el: 'group',\n        attr: {\n          name: 'scrollContainer'\n        },\n        component: a,\n        container: {\n          id: 'scrollerContainer',\n          label: 'scroller',\n          isParent: !0\n        },\n        label: 'scrollerGroup',\n        id: 'scrollerGroup'\n      });\n    }\n  }, {\n    key: \"attachEventHandlers\",\n    value: function attachEventHandlers(a) {\n      var b = this,\n          c = this.config,\n          d = c.evt;\n      return a && (a.scroll && 'function' == typeof a.scroll && (d.scroll = a.scroll), a.scrollStart && 'function' == typeof a.scrollStart && (d.scrollStart = a.scrollStart), a.scrollEnd && 'function' == typeof a.scrollEnd && (d.scrollEnd = a.scrollEnd)), b;\n    }\n  }]);\n\n  return Scroller;\n}(Tool);\n\nScroller.registerSymbol = UNDEF, Scroller._setConfiguaration = stubFN;\nexport default Scroller;","map":null,"metadata":{},"sourceType":"module"}