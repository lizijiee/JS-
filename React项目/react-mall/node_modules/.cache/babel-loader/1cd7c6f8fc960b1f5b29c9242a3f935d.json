{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { raiseError } from '../event-api';\nimport { extend2, isFirefox } from '../lib';\n\nvar UNDEF,\n    MSXMLHTTP = 'Microsoft.XMLHTTP',\n    MSXMLHTTP2 = 'Msxml2.XMLHTTP',\n    FUNCTION = 'function',\n    GET = 'GET',\n    POST = 'POST',\n    XHREQERROR = 'XmlHttprequest Error',\n    RUN = 'run',\n    ERRNO = '1110111515A',\n    win = window,\n    version = parseFloat(win.navigator.appVersion.split('MSIE')[1]),\n    ielt8 = !!(5.5 <= version && 7 >= version),\n    fileProtocol = 'file:' === win.location.protocol,\n    AXObject = win.ActiveXObject,\n    XHRNative = (!AXObject || !fileProtocol) && win.XMLHttpRequest,\n    counters = {\n  objects: 0,\n  xhr: 0,\n  requests: 0,\n  success: 0,\n  failure: 0,\n  idle: 0\n},\n    _newXmlHttpRequest = function newXmlHttpRequest() {\n  var a;\n  if (XHRNative) return _newXmlHttpRequest = function newXmlHttpRequest() {\n    return counters.xhr++, new XHRNative();\n  }, _newXmlHttpRequest();\n\n  try {\n    a = new AXObject(MSXMLHTTP2), _newXmlHttpRequest = function newXmlHttpRequest() {\n      return counters.xhr++, new AXObject(MSXMLHTTP2);\n    };\n  } catch (b) {\n    try {\n      a = new AXObject(MSXMLHTTP), _newXmlHttpRequest = function newXmlHttpRequest() {\n        return counters.xhr++, new AXObject(MSXMLHTTP);\n      };\n    } catch (b) {\n      a = !1;\n    }\n  }\n\n  return a;\n};\n\nvar Ajax =\n/*#__PURE__*/\nfunction () {\n  function Ajax(a, b) {\n    _classCallCheck(this, Ajax);\n\n    this.onSuccess = a, this.onError = b, this.open = !1, counters.objects++, counters.idle++;\n  }\n\n  _createClass(Ajax, [{\n    key: \"transact\",\n    value: function transact(a, b, c, d) {\n      var e,\n          f,\n          g = this,\n          h = g.xmlhttp,\n          j = Ajax.headers,\n          k = g.onError,\n          l = g.onSuccess,\n          m = a === POST,\n          n = Object.prototype.hasOwnProperty;\n      -1 !== b.search(/^(http:\\/\\/|https:\\/\\/)/) && win.location.hostname !== /(http:\\/\\/|https:\\/\\/)([^\\/\\:]*)/.exec(b)[2] ? delete j['X-Requested-By'] : !n.call(j, 'X-Requested-By') && (j['X-Requested-By'] = 'FusionCharts'), (!h || ielt8 || isFirefox) && (h = _newXmlHttpRequest(), g.xmlhttp = h), h.onreadystatechange = function () {\n        try {\n          4 === h.readyState && (!h.status && fileProtocol || 200 <= h.status && 300 > h.status || 304 === h.status || 1223 === h.status || 0 === h.status ? (l && l(h.responseText, g, d, b), counters.success++) : k && (k(new Error(XHREQERROR), g, d, b), counters.failure++), counters.idle--, g.open = !1);\n        } catch (a) {\n          k && k(a, g, d, b), win.FC_DEV_ENVIRONMENT && setTimeout(function () {\n            throw a;\n          }, 0), counters.failure++;\n        }\n      };\n\n      try {\n        if (h.open(m ? POST : GET, b, !0), h.overrideMimeType && h.overrideMimeType('text/plain'), !m) e = null;else if ('string' == typeof c) e = c;else {\n          for (f in e = [], c) {\n            e.push(f + '=' + (c[f] + '').replace(/\\=/g, '%3D').replace(/\\&/g, '%26'));\n          }\n\n          e = e.join('&');\n        }\n\n        for (f in j) {\n          h.setRequestHeader(f, j[f]);\n        }\n\n        h.send(e), counters.requests++, counters.idle++, g.open = !0;\n      } catch (a) {\n        raiseError(global.core, ERRNO, RUN, XHREQERROR, a.message);\n      }\n\n      return h;\n    }\n  }, {\n    key: \"get\",\n    value: function get(a, b) {\n      return this.transact(GET, a, UNDEF, b);\n    }\n  }, {\n    key: \"post\",\n    value: function post(a, b, c) {\n      return this.transact(POST, a, b, c);\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      var a = this,\n          b = a.xmlhttp;\n      return a.open = !1, b && typeof b.abort == FUNCTION && b.readyState && 0 !== b.readyState && b.abort();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var a = this;\n      return a.open && a.abort(), delete a.onError, delete a.onSuccess, delete a.xmlhttp, delete a.open, counters.objects--, a = null;\n    }\n  }], [{\n    key: \"stats\",\n    value: function stats(a) {\n      return a ? counters[a] : extend2({}, counters);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.headers = {\n  \"If-Modified-Since\": 'Sat, 29 Oct 1994 19:43:31 GMT',\n  \"X-Requested-With\": 'XMLHttpRequest',\n  \"X-Requested-By\": 'FusionCharts',\n  Accept: 'text/plain, */*',\n  \"Content-Type\": 'application/x-www-form-urlencoded; charset=UTF-8'\n};\nexport default Ajax;","map":null,"metadata":{},"sourceType":"module"}