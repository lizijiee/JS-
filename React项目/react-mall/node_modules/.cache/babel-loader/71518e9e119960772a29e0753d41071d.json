{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { pseudoEval } from '../../../fc-core/src/lib';\nimport { ComponentInterface } from '../../../fc-core/src/component-interface';\nvar IN_ALERT_RANGE = '1',\n    OUT_OF_ALERT_RANGE = '2',\n    ACTION_CALLJS = 'calljs',\n    ACTION_SHOWANNOTATION = 'showannotation';\n\nvar AlertManager =\n/*#__PURE__*/\nfunction (_ComponentInterface) {\n  _inherits(AlertManager, _ComponentInterface);\n\n  function AlertManager() {\n    var _this;\n\n    _classCallCheck(this, AlertManager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlertManager).call(this)), _this.pIndex = 1, _this.linkedItems = {\n      chart: {}\n    };\n    return _this;\n  }\n\n  _createClass(AlertManager, [{\n    key: \"getType\",\n    value: function getType() {\n      return 'extension';\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'AlertManager';\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var a,\n          b,\n          c,\n          d = this,\n          e = d.getFromEnv('dataSource'),\n          f = e && e.alerts && e.alerts.alert,\n          g = d.getFromEnv('number-formatter'),\n          h = d.config || (d.config = {});\n      if (f && f.length) for (h.alertArr = f, a = f.length, b = 0; b < a; b += 1) {\n        c = f[b], c.minvalue = g.getCleanValue(c.minvalue), c.maxvalue = g.getCleanValue(c.maxvalue);\n      } else h.alertArr = [];\n    }\n  }, {\n    key: \"processRTData\",\n    value: function processRTData(a) {\n      var b,\n          c,\n          d,\n          e,\n          f,\n          g,\n          h,\n          k = this,\n          l = k.config,\n          m = k.getFromEnv('number-formatter');\n      if (a && a.dataset && a.dataset.length) for (d = a.dataset.length, b = 0; b < d; b += 1) {\n        if (e = a.dataset[b], e.data && e.data.length) {\n          if (l.datasetMap && 0 === l.datasetMap[b]) continue;\n\n          for (f = e.data.length, c = 0; c < f; c += 1) {\n            g = e.data[c], h = g && m.getCleanValue(g.value), null !== h && k._doAlert(m.getCleanValue(g.value));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_doAlert\",\n    value: function _doAlert(a) {\n      var b,\n          c,\n          d,\n          e = this,\n          f = e.getLinkedParent(),\n          g = e.config,\n          h = g.alertArr,\n          i = h.length;\n\n      for (c = 0; c < i; c += 1) {\n        b = h[c], d = b.action && b.action.toLowerCase(), b.minvalue <= a && b.maxvalue >= a ? '1' === b.occuronce && b.hasOccurred || (b.hasOccurred = !0, b.state = IN_ALERT_RANGE, d === ACTION_CALLJS ? setTimeout(pseudoEval(b.param)) : d === ACTION_SHOWANNOTATION ? f.showAnnotation && f.showAnnotation(b.param) : void 0, f.fireChartInstanceEvent('AlertComplete', {\n          alertValue: a,\n          alertMaxValue: b.maxvalue,\n          alertMinValue: b.minvalue\n        })) : (d === ACTION_SHOWANNOTATION && b.state === IN_ALERT_RANGE && f.hideAnnotation && f.hideAnnotation(b.param), b.state = OUT_OF_ALERT_RANGE);\n      }\n    }\n  }]);\n\n  return AlertManager;\n}(ComponentInterface);\n\nexport default AlertManager;","map":null,"metadata":{},"sourceType":"module"}