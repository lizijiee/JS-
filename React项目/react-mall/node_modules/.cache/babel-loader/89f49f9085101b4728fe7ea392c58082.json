{"ast":null,"code":"import _objectSpread from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\List\\\\List.js\";\nimport React, { Component } from 'react';\nimport { Button, Pagination, Switch, Checkbox, Select, Popconfirm, message } from 'antd';\nimport IconFont from '../../../../iconfont/font';\nimport './List.less';\nimport { withRouter } from 'react-router-dom';\n/*   -----------------     redux引入部分      ------------------- */\n\nimport * as actionCreators from '../../../../redux/actions/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nvar Option = Select.Option;\nvar text = 'Are you sure to delete this task?';\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp(props) {\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Temp).call(this, props));\n\n    _this.renderItems = function (ele, index) {\n      var _React$createElement;\n\n      return React.createElement(\"tr\", {\n        key: ele.spuId,\n        id: ele.spuId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: function onChange(ev) {\n          _this.checkedChange(index, ev);\n        } //传参小难点\n        // id={`num${index}`}\n        // indeterminate={this.state.storeArr[index]}\n        ,\n        checked: _this.state.storeArr[index],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, ele.spuId), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ele.littleImageUrl,\n        alt: ele.spuName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, ele.spuName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" \", ele.categoryName, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, ele.saleVolume), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\uFFE5\", ele.currentPrice), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, _this.renderArr.map(function (item) {\n        return React.createElement(\"p\", {\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            paddingRight: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, item), React.createElement(Switch, {\n          size: \"default\",\n          defaultChecked: ele.categoryName === item,\n          onChange:\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(valid) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _this.props.transRecommend(valid, item, ele);\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\",\n        ghost: \"true\",\n        onClick: function onClick(ev) {\n          _this.props.editClick(_this.props, ele, ev);\n        } //传参为tr索引\n        ,\n        style: {\n          marginRight: 10,\n          fontSize: 13,\n          width: 60,\n          height: 25,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\")), React.createElement(Popconfirm, (_React$createElement = {\n        placement: \"topRight\",\n        title: text,\n        onConfirm: _this.confirm,\n        okText: \"Yes\"\n      }, _defineProperty(_React$createElement, \"onConfirm\", function onConfirm() {\n        return _this.props.transRecommend(false, ele.categoryName, ele);\n      }), _defineProperty(_React$createElement, \"cancelText\", \"No\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\",\n        style: {\n          fontSize: 13,\n          width: 60,\n          height: 25,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"\\u5220\\u9664\"))));\n    };\n\n    _this.checkedChange = function (index, ev) {\n      // 单个点击事件 index 为传入索引\n      ev.stopPropagation();\n      _this.itemsArr[index] = ev.target.checked; //改变操作复选框的数组        \n\n      if (_this.itemsArr.every(function (ele) {\n        return ele === true;\n      })) {\n        // 多选框全为 => true,全选按钮为true,indeterminate为false(indeterminate中间状态)\n        _this.setState({\n          storeArr: _this.itemsArr,\n          // 为了render\n          checkAll: true,\n          indeterminate: false\n        });\n      } else {\n        // console.log(this.selectValue)\n        _this.selectValue ? _this.setState({\n          storeArr: _this.itemsArr,\n          checkAll: false,\n          indeterminate: true,\n          booleanValue: false\n        }) : _this.setState({\n          // 存在多选框为 false\n          storeArr: _this.itemsArr,\n          checkAll: false,\n          indeterminate: true\n        });\n      }\n\n      if (!_this.itemsArr.some(function (ele) {\n        return ele === true;\n      })) {\n        //多选框全为 => false,indeterminate为false\n        _this.setState({\n          storeArr: _this.itemsArr,\n          indeterminate: false\n        });\n      }\n    };\n\n    _this.onCheckAllChange = function (e) {\n      //  全选 功能 \n      if (e.target.checked) {\n        _this.itemsArr.forEach(function (ele, index) {\n          _this.itemsArr[index] = e.target.checked;\n        });\n      } else {\n        _this.itemsArr.forEach(function (ele, index) {\n          _this.itemsArr[index] = e.target.checked;\n        });\n      }\n\n      _this.setState({\n        checkAll: e.target.checked,\n        storeArr: _this.itemsArr,\n        indeterminate: false\n      });\n    };\n\n    _this.confirm = function () {\n      // 气泡确认框内容\n      message.info('Clicked on Yes.');\n    };\n\n    _this.bulkOperation = function () {\n      /* 思路： \r\n          1.首先判断选中内容是哪些？(先看一下数组准不准,state 还是外面的准一些);\r\n          2.确定选中内容后,判断select中内容;(附加条件select数值有效)\r\n          3.点击确定发送请求,将选中数据发送到后台进行修改;\r\n          4.后台接收到的是一个数组,怎样处理进行数组解构;\r\n          5.后台进行判断,如果是一个数组一条一条增加处理？？\r\n      */\n      var tempArr = []; // 创建数组 \n\n      _this.state.storeArr.forEach(function (ele, index) {\n        if (ele) {\n          tempArr.push(_this.renderData[index]);\n        }\n      }); // 拿到索引,将点了对勾的数据push到新数组;\n      // 拿到选择内容再进行请求;\n      // console.log(tempArr)  拿到数据以后传送给后台进行修改;\n      // console.log(this.selectValue)  当下选框数组,不能为空字符串\n      // console.log(this.selectOption)  [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"]\n\n\n      if (_this.selectValue && tempArr.length) {\n        //select不能为空,复选框不能为空,进入判断;\n        var OperString = _this.selectValue.substring(2, 4); //操作方式： 热销 推荐 折扣 删除  \n\n\n        var collateData = function collateData() {\n          //查看是否存在\n          var tempData = [];\n\n          var data = _toConsumableArray(_this.props.data.data);\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var ele = _step.value;\n              var _iteratorNormalCompletion2 = true;\n              var _didIteratorError2 = false;\n              var _iteratorError2 = undefined;\n\n              try {\n                for (var _iterator2 = ele.spuList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                  var item = _step2.value;\n                  //  将拿回来spuList数组,数据处理\n                  item.categoryName = ele.categoryName; // 类名\n\n                  item.checked = false; //拿到数据可以加小tag方便自己操作\n\n                  tempData.push(item);\n                }\n              } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                    _iterator2.return();\n                  }\n                } finally {\n                  if (_didIteratorError2) {\n                    throw _iteratorError2;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          tempData = tempData.filter(function (ele) {\n            return ele.categoryName == \"折扣\" || ele.categoryName == \"热销\" || ele.categoryName == \"推荐\";\n          });\n          return tempData;\n          /* \r\n            思路整理: \r\n               拿到每个获取的信息;(操作方式用传入方式,删除就直接操作就可以了)\r\n               将信息进行匹配筛选,先按照categoryName查找再根据id查找\r\n               查找结果放在一个数组中,如果数组没找到添加进去,找到就禁止添加已存在 \r\n          */\n        };\n\n        var testExist =\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function testExist(data) {\n          var _loop, _i;\n\n          return _regeneratorRuntime.wrap(function testExist$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _loop =\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _loop() {\n                    var ele, result;\n                    return _regeneratorRuntime.wrap(function _loop$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            ele = tempArr[_i];\n                            result = data.find(function (item) {\n                              console.log(item, ele);\n                              return item.spuList === ele.spuList;\n                            });\n                            _context2.next = 4;\n                            return result;\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _loop, this);\n                  });\n                  _i = 0;\n\n                case 2:\n                  if (!(_i < tempArr.length)) {\n                    _context3.next = 7;\n                    break;\n                  }\n\n                  return _context3.delegateYield(_loop(), \"t0\", 4);\n\n                case 4:\n                  _i++;\n                  _context3.next = 2;\n                  break;\n\n                case 7:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, testExist, this);\n        });\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = testExist(collateData())[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var ele = _step3.value;\n            console.log(ele); //输出：foo 3 ， bar 7\n          } // testExist(tempArr).then((value) => {\n          //     console.log(value)\n          // });\n          // console.log(spuList)\n\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        _this.props.batchUpdate(tempArr, OperString); //(数据,操作方式)\n\n      }\n\n      tempArr = [];\n    };\n\n    _this.Page = null; //用于包装Pagination组件;\n\n    _this.itemsArr = []; //初始化数组,page切换,清空\n\n    _this.renderArr = [\"热销\", \"推荐\", \"折扣\"];\n    _this.renderData = null; // 渲染的数据\n\n    _this.selectOption = [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"];\n    _this.selectValue = null; //选择内容\n\n    _this.categoryName = {}; //菜品类名\n\n    _this.state = {\n      current: 1,\n      storeData: [],\n      // 菜品数据\n      categoryName: {},\n      // 菜品类名 \n      indeterminate: false,\n      // 全选按钮 中间状态控制\n      checkAll: false,\n      // 全部选中\n      storeArr: [],\n      // 状态切换存储数据\n      booleanValue: true\n    };\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.props.fetchFoodInfo();\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\n\n  }, {\n    key: \"ChangePage\",\n\n    /* --------------------------  批量操作部分(以下) -------------------- */\n\n    /* ------------------------  底部页码组件部分(以下) -------------------- */\n\n    /* \r\n      组件声明变量:\r\n           this.Page 和 this.state.current:1\r\n        复用注意：首先判断数据格式     \r\n    */\n    value: function () {\n      var _ChangePage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(page) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                // 使用<Pagination/>组件自带回调函数来设置页码对应渲染内容\n                // this.checkedChange()\n                this.itemsArr = [];\n                this.setState({\n                  current: page,\n                  storeArr: [],\n                  checkAll: false,\n                  indeterminate: false\n                }); // 注意setState为异步,回调函数问题\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function ChangePage(_x2) {\n        return _ChangePage.apply(this, arguments);\n      }\n\n      return ChangePage;\n    }()\n  }, {\n    key: \"renderPage\",\n    value: function renderPage(tempData) {\n      //page第二步骤;\n      if (tempData.length) {\n        var length = tempData.length;\n        this.Page = React.createElement(Pagination //  底部页码组件\n        , {\n          defaultCurrent: 1,\n          pageSize: 5,\n          total: length,\n          onChange: this.ChangePage.bind(this),\n          style: {\n            marginRight: 25,\n            marginTop: 30,\n            float: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        });\n        return this.Page;\n      }\n    }\n    /* ------------------------  底部页码组件部分(以上) -------------------- */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement2;\n\n      var Items = null;\n      var tempData = [];\n\n      var data = _objectSpread({}, this.props.data);\n\n      if (data.data) {\n        // 数据格式化处理,放在一个数组内,便于渲染\n        // Object.keys()  获取对象中keys值\n        // JSON.stringify(data) == \"{}\" //空对象判断方法\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = data.data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var ele = _step4.value;\n            this.categoryName[ele.categoryName] = ele.categoryName; // 存储类名\n\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = ele.spuList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var item = _step5.value;\n                //  将拿回来spuList数组,数据处理\n                item.categoryName = ele.categoryName; // 类名\n\n                item.checked = false; //拿到数据可以加小tag方便自己操作\n\n                tempData.push(item);\n              }\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      }\n      /*      **************   渲染主要列表    ***********      */\n\n\n      if (tempData.length) {\n        // 注释:  见用户：Member组件\n        var _data = tempData;\n\n        if (_data.length === 1) {\n          Items = _data.map(this.renderItems);\n        } else {\n          this.renderData = _data.filter(function (e, index) {\n            return index >= 5 * (_this2.state.current - 1) && index < 5 * _this2.state.current;\n          });\n          Items = this.renderData.map(this.renderItems);\n\n          if (!Items.length) {\n            var temp = this.state.current * 1;\n            this.setState({\n              current: temp - 1\n            });\n            return this.state;\n          }\n        }\n\n        if (!this.itemsArr.length) {\n          //itemsArr为空初始化，非空不进判断，避免重复render\n          this.itemsArr = Array(Items.length).fill(false);\n        }\n      }\n\n      return React.createElement(\"section\", {\n        className: \"food-info-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-serch-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-glass\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"\\u7B5B\\u9009\\u68C0\\u7D22\"), React.createElement(\"button\", {\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\\u7ED3\\u679C\")), React.createElement(\"div\", {\n        className: \"el-form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"\\u8F93\\u5165\\u68C0\\u7D22:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u83DC\\u540D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"el-form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"\\u83DC\\u54C1\\u7C7B\\u578B:\"), React.createElement(Select, {\n        showSearch: true,\n        placeholder: \"\\u83DC\\u54C1\\u7C7B\\u578B\",\n        style: {\n          width: 170,\n          color: \"#606266\",\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\\u7279\\u8272\\u6C64\\u9762\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"\\u7279\\u8272\\u6C64\\u9762\"), React.createElement(Option, {\n        value: \"\\u9152\\u6C34\\u996E\\u6599\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"\\u9152\\u6C34\\u996E\\u6599\"), React.createElement(Option, {\n        value: \"\\u70E7\\u70E4\\u7CFB\\u5217\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"\\u70E7\\u70E4\\u7CFB\\u5217\"), React.createElement(Option, {\n        value: \"\\u7F8E\\u5473\\u76D6\\u996D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"\\u7F8E\\u5473\\u76D6\\u996D\"), React.createElement(Option, {\n        value: \"\\u5C0F\\u5403\\uFF0C\\u8089\\u5939\\u998D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"\\u5C0F\\u5403\\uFF0C\\u8089\\u5939\\u998D\")), \",\"), React.createElement(\"div\", {\n        className: \"el-form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"\\u4E0A\\u67B6\\u72B6\\u6001:\"), React.createElement(Select, {\n        showSearch: true,\n        placeholder: \"\\u4E0A\\u67B6\\u72B6\\u6001\",\n        style: {\n          width: 170,\n          color: \"#606266\",\n          fontSize: 12,\n          marginRight: \"0!imoprtant\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\\u70ED\\u9500\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"\\u70ED\\u9500\"), React.createElement(Option, {\n        value: \"\\u4E70\\u8FC7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"\\u4E70\\u8FC7\"), React.createElement(Option, {\n        value: \"\\u4F18\\u60E0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"\\u4F18\\u60E0\"), React.createElement(Option, {\n        value: \"\\u4E3A\\u60A8\\u4F18\\u9009\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"\\u4E3A\\u60A8\\u4F18\\u9009\")), \",\"))), React.createElement(\"div\", {\n        className: \"el-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-list\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"\\u6570\\u636E\\u5217\\u8868\"))), React.createElement(\"main\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        cellPadding: \"0\",\n        cellSpacing: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: this.onCheckAllChange.bind(this),\n        indeterminate: this.state.indeterminate,\n        checked: this.state.checkAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"\\u7F16\\u53F7\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"\\u83DC\\u54C1\\u56FE\\u7247\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"\\u83DC\\u54C1\\u540D\\u79F0\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"\\u83DC\\u54C1\\u7C7B\\u578B\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"\\u9500\\u91CF\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"\\u4EF7\\u683C\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"\\u6807\\u7B7E\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"\\u64CD\\u4F5C\"))), React.createElement(\"tbody\", {\n        id: \"ItemWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, Items))), React.createElement(Select // defaultValue=\"批量操作\" 不能改变颜色\n      , (_React$createElement2 = {\n        style: {\n          color: false ? \"red\" : \"lime\"\n        },\n        placeholder: \"\\u6279\\u91CF\\u64CD\\u4F5C\"\n      }, _defineProperty(_React$createElement2, \"style\", {\n        marginRight: 20,\n        marginTop: 30,\n        float: \"left\",\n        width: 150,\n        size: \"large\",\n        fontSize: 13\n      }), _defineProperty(_React$createElement2, \"onSelect\", function onSelect(value) {\n        _this2.selectValue = value;\n\n        if (_this2.itemsArr.some(function (ele) {\n          return ele === true;\n        })) {\n          _this2.setState({\n            booleanValue: false\n          });\n        }\n      }), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2), this.selectOption.map(function (item) {\n        return React.createElement(Option, {\n          value: item,\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        }, item);\n      })), React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          marginTop: 30,\n          fontSize: 13,\n          height: 30,\n          size: \"large\"\n        },\n        disabled: this.state.booleanValue,\n        onClick: function onClick() {\n          return _this2.bulkOperation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\"), this.renderPage(tempData)));\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nexport default withRouter(connect(function (state) {\n  return {\n    data: state.foodData\n  };\n}, //将redux变量赋值到组件,成组件变量Data\nfunction (dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n})(Temp));","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\List\\List.js"],"names":["React","Component","Button","Pagination","Switch","Checkbox","Select","Popconfirm","message","IconFont","withRouter","actionCreators","connect","bindActionCreators","Option","text","Temp","props","renderItems","ele","index","spuId","ev","checkedChange","state","storeArr","littleImageUrl","spuName","categoryName","saleVolume","currentPrice","renderArr","map","item","paddingRight","valid","transRecommend","editClick","marginRight","fontSize","width","height","borderRadius","confirm","stopPropagation","itemsArr","target","checked","every","setState","checkAll","indeterminate","selectValue","booleanValue","some","onCheckAllChange","e","forEach","info","bulkOperation","tempArr","push","renderData","length","OperString","substring","collateData","tempData","data","spuList","filter","testExist","result","find","console","log","batchUpdate","Page","selectOption","current","storeData","fetchFoodInfo","page","ChangePage","bind","marginTop","float","Items","temp","Array","fill","color","size","value","renderPage","foodData","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Pagination, Switch, Checkbox, Select, Popconfirm, message } from 'antd';\r\nimport IconFont from '../../../../iconfont/font'\r\nimport './List.less';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/*   -----------------     redux引入部分      ------------------- */\r\nimport * as actionCreators from '../../../../redux/actions/actions';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from \"redux\"\r\n\r\nconst Option = Select.Option;\r\nconst text = 'Are you sure to delete this task?';\r\n\r\nclass Temp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.Page = null;  //用于包装Pagination组件;\r\n        this.itemsArr = []; //初始化数组,page切换,清空\r\n        this.renderArr = [\"热销\", \"推荐\", \"折扣\"];\r\n        this.renderData = null;        // 渲染的数据\r\n        this.selectOption = [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"]\r\n        this.selectValue = null //选择内容\r\n        this.categoryName = {} //菜品类名\r\n        this.state = {\r\n            current: 1,\r\n            storeData: [],        // 菜品数据\r\n            categoryName: {},      // 菜品类名 \r\n            indeterminate: false, // 全选按钮 中间状态控制\r\n            checkAll: false,      // 全部选中\r\n            storeArr: [],         // 状态切换存储数据\r\n            booleanValue: true\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        // 提前计划放入redux中的数据和方法\r\n        await this.props.fetchFoodInfo()\r\n        /*  \r\n        问题：\r\n            点请求数据异步,拿不到;\r\n \r\n        在使用过成中将redux和state用导致变量无法更新,禁止混用;  \r\n         */\r\n    }\r\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\r\n    renderItems = (ele, index) => {\r\n        return (\r\n            <tr key={ele.spuId} id={ele.spuId}>\r\n                <td>\r\n                    < Checkbox\r\n                        onChange={(ev) => { this.checkedChange(index, ev) }}//传参小难点\r\n                        // id={`num${index}`}\r\n                        // indeterminate={this.state.storeArr[index]}\r\n                        checked={this.state.storeArr[index]}\r\n                    />\r\n                </td>\r\n                <td>{ele.spuId}</td>\r\n                <td><img src={ele.littleImageUrl} alt={ele.spuName} /></td>\r\n                <td>{ele.spuName}</td>\r\n                <td > {ele.categoryName} </td>\r\n                <td>{ele.saleVolume}</td>\r\n                <td>￥{ele.currentPrice}</td>\r\n                <td>\r\n                    {this.renderArr.map((item) =>\r\n                        <p key={item}>\r\n                            <span style={{ paddingRight: 15 }}>{item}</span>\r\n                            <Switch\r\n                                size=\"default\"\r\n                                defaultChecked={ele.categoryName === item}\r\n                                onChange={async (valid) => {\r\n                                    await this.props.transRecommend(valid, item, ele);\r\n                                }}\r\n                            />\r\n                        </p>\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size=\"small\"\r\n                        ghost=\"true\"\r\n                        onClick={(ev) => {\r\n                            this.props.editClick(this.props, ele, ev)\r\n                        }}//传参为tr索引\r\n                        style={{ marginRight: 10, fontSize: 13, width: 60, height: 25, borderRadius: 5 }}\r\n                    >\r\n                        <span>编辑</span>\r\n                    </Button>\r\n                    <Popconfirm\r\n                        placement=\"topRight\"\r\n                        title={text}\r\n                        onConfirm={this.confirm}\r\n                        okText=\"Yes\"\r\n                        onConfirm={() =>\r\n                            this.props.transRecommend(false, ele.categoryName, ele)\r\n                        }\r\n                        cancelText=\"No\">\r\n                        <Button\r\n                            type=\"primary\"\r\n                            size=\"small\"\r\n                            style={{ fontSize: 13, width: 60, height: 25, borderRadius: 5 }}\r\n                        >删除</Button>\r\n                    </Popconfirm>\r\n                </td>\r\n            </tr>)\r\n    }\r\n    checkedChange = (index, ev) => {\r\n        // 单个点击事件 index 为传入索引\r\n        ev.stopPropagation()\r\n        this.itemsArr[index] = ev.target.checked  //改变操作复选框的数组        \r\n        if (this.itemsArr.every(ele => ele === true)) {\r\n            // 多选框全为 => true,全选按钮为true,indeterminate为false(indeterminate中间状态)\r\n            this.setState({\r\n                storeArr: this.itemsArr,  // 为了render\r\n                checkAll: true,\r\n                indeterminate: false\r\n            })\r\n        } else {\r\n            // console.log(this.selectValue)\r\n            (this.selectValue) ? this.setState({\r\n                storeArr: this.itemsArr,\r\n                checkAll: false,\r\n                indeterminate: true, booleanValue: false\r\n            }) : this.setState({ // 存在多选框为 false\r\n                storeArr: this.itemsArr,\r\n                checkAll: false,\r\n                indeterminate: true\r\n            })\r\n        }\r\n        if (!this.itemsArr.some(ele => ele === true)) {\r\n            //多选框全为 => false,indeterminate为false\r\n            this.setState({\r\n                storeArr: this.itemsArr,\r\n                indeterminate: false\r\n            })\r\n        }\r\n    }\r\n    onCheckAllChange = (e) => {\r\n        //  全选 功能 \r\n        if (e.target.checked) {\r\n            this.itemsArr.forEach((ele, index) => {\r\n                this.itemsArr[index] = e.target.checked\r\n            });\r\n        }\r\n        else {\r\n            this.itemsArr.forEach((ele, index) => {\r\n                this.itemsArr[index] = e.target.checked\r\n            });\r\n        }\r\n        this.setState({\r\n            checkAll: e.target.checked,\r\n            storeArr: this.itemsArr,\r\n            indeterminate: false\r\n        })\r\n\r\n    }\r\n    confirm = () => {\r\n        // 气泡确认框内容\r\n        message.info('Clicked on Yes.');\r\n    }\r\n    /* ------------------    信息内容列表部分渲染(以上)   ------------------- */\r\n\r\n    /* -------------------------- 批量操作部分(以下) -------------------- */\r\n    bulkOperation = () => {\r\n        /* 思路： \r\n            1.首先判断选中内容是哪些？(先看一下数组准不准,state 还是外面的准一些);\r\n            2.确定选中内容后,判断select中内容;(附加条件select数值有效)\r\n            3.点击确定发送请求,将选中数据发送到后台进行修改;\r\n            4.后台接收到的是一个数组,怎样处理进行数组解构;\r\n            5.后台进行判断,如果是一个数组一条一条增加处理？？\r\n        */\r\n        let tempArr = [] // 创建数组 \r\n        this.state.storeArr.forEach((ele, index) => { if (ele) { tempArr.push(this.renderData[index]) } })\r\n        // 拿到索引,将点了对勾的数据push到新数组;\r\n        // 拿到选择内容再进行请求;\r\n        // console.log(tempArr)  拿到数据以后传送给后台进行修改;\r\n        // console.log(this.selectValue)  当下选框数组,不能为空字符串\r\n        // console.log(this.selectOption)  [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"]\r\n        if (this.selectValue && tempArr.length) {//select不能为空,复选框不能为空,进入判断;\r\n            let OperString = this.selectValue.substring(2, 4) //操作方式： 热销 推荐 折扣 删除  \r\n\r\n\r\n            let collateData = () => { //查看是否存在\r\n                let tempData = [];\r\n                let data = [...this.props.data.data]\r\n                for (let ele of data) {\r\n                    for (let item of ele.spuList) {//  将拿回来spuList数组,数据处理\r\n                        item.categoryName = ele.categoryName // 类名\r\n                        item.checked = false  //拿到数据可以加小tag方便自己操作\r\n                        tempData.push(item)\r\n                    }\r\n                }\r\n                tempData = tempData.filter((ele) => ele.categoryName == \"折扣\" || ele.categoryName == \"热销\" || ele.categoryName == \"推荐\"\r\n                )\r\n                return tempData\r\n                /* \r\n                  思路整理: \r\n                     拿到每个获取的信息;(操作方式用传入方式,删除就直接操作就可以了)\r\n                     将信息进行匹配筛选,先按照categoryName查找再根据id查找\r\n                     查找结果放在一个数组中,如果数组没找到添加进去,找到就禁止添加已存在 \r\n                */\r\n            }\r\n            let testExist = function* (data) {\r\n                for (let ele of tempArr) {\r\n                    let result = data.find((item) => {\r\n                        console.log(item, ele)\r\n                        return item.spuList === ele.spuList;\r\n                    })\r\n\r\n                    yield result\r\n                }\r\n            };\r\n            for (let ele of testExist(collateData())) {\r\n                console.log(ele); //输出：foo 3 ， bar 7\r\n            }\r\n\r\n\r\n\r\n            // testExist(tempArr).then((value) => {\r\n            //     console.log(value)\r\n            // });\r\n\r\n            // console.log(spuList)\r\n\r\n            this.props.batchUpdate(tempArr, OperString) //(数据,操作方式)\r\n        }\r\n        tempArr = []\r\n    }\r\n    /* --------------------------  批量操作部分(以下) -------------------- */\r\n\r\n    /* ------------------------  底部页码组件部分(以下) -------------------- */\r\n    /* \r\n      组件声明变量:\r\n           this.Page 和 this.state.current:1\r\n\r\n      复用注意：首先判断数据格式     \r\n    */\r\n    async ChangePage(page) {\r\n        // 使用<Pagination/>组件自带回调函数来设置页码对应渲染内容\r\n        // this.checkedChange()\r\n        this.itemsArr = []\r\n        this.setState({\r\n            current: page,\r\n            storeArr: [],\r\n            checkAll: false,\r\n            indeterminate: false,\r\n        })\r\n        // 注意setState为异步,回调函数问题\r\n    }\r\n    renderPage(tempData) {\r\n        //page第二步骤;\r\n        if (tempData.length) {\r\n            let length = tempData.length;\r\n            this.Page = <Pagination  //  底部页码组件\r\n                defaultCurrent={1}\r\n                pageSize={5}\r\n                total={length}\r\n                onChange={this.ChangePage.bind(this)}\r\n                style={{\r\n                    marginRight: 25, marginTop: 30, float: \"right\"\r\n                }} />\r\n            return this.Page\r\n        }\r\n    }\r\n    /* ------------------------  底部页码组件部分(以上) -------------------- */\r\n    render() {\r\n        let Items = null;\r\n        let tempData = [];\r\n        let data = { ...this.props.data }\r\n        if (data.data) { // 数据格式化处理,放在一个数组内,便于渲染\r\n            // Object.keys()  获取对象中keys值\r\n            // JSON.stringify(data) == \"{}\" //空对象判断方法\r\n            for (let ele of data.data) {\r\n                this.categoryName[ele.categoryName] = ele.categoryName// 存储类名\r\n                for (let item of ele.spuList) {//  将拿回来spuList数组,数据处理\r\n                    item.categoryName = ele.categoryName // 类名\r\n                    item.checked = false  //拿到数据可以加小tag方便自己操作\r\n                    tempData.push(item)\r\n                }\r\n            }\r\n        }\r\n        /*      **************   渲染主要列表    ***********      */\r\n        if (tempData.length) { // 注释:  见用户：Member组件\r\n            let data = tempData;\r\n            if (data.length === 1) {\r\n                Items = data.map(this.renderItems)\r\n            } else {\r\n                this.renderData = data.filter((e, index) =>\r\n                    index >= 5 * (this.state.current - 1) &&\r\n                    index < 5 * this.state.current\r\n                )\r\n                Items = (this.renderData).map(this.renderItems)\r\n                if (!Items.length) {\r\n                    let temp = this.state.current * 1\r\n                    this.setState({ current: temp - 1 })\r\n                    return this.state\r\n                }\r\n            }\r\n            if (!this.itemsArr.length) { //itemsArr为空初始化，非空不进判断，避免重复render\r\n                this.itemsArr = Array(Items.length).fill(false)\r\n            }\r\n        }\r\n        return (\r\n            <section className=\"food-info-list\">\r\n                {/*   员工信息组件  */}\r\n                <div className=\"app-container\">\r\n                    <div className=\"el-serch-wrap\">\r\n                        <div className=\"el-title-body\">\r\n                            <div>\r\n                                <IconFont type=\"mall-doc-glass\" style={{ fontSize: 16, marginRight: 5 }} />\r\n                                <span>筛选检索</span>\r\n                                <button className=\"add\">查询结果</button>\r\n                            </div>\r\n                            <div className=\"el-form-item\">\r\n                                <span>输入检索:</span>\r\n                                <input type=\"text\" placeholder=\"请输入菜名\">\r\n                                </input>\r\n                            </div>\r\n                            <div className=\"el-form-item\">\r\n                                <span>菜品类型:</span>\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"菜品类型\"\r\n                                    style={{ width: 170, color: \"#606266\", fontSize: 12 }}\r\n                                >\r\n                                    <Option value=\"特色汤面\">特色汤面</Option>\r\n                                    <Option value=\"酒水饮料\">酒水饮料</Option>\r\n                                    <Option value=\"烧烤系列\">烧烤系列</Option>\r\n                                    <Option value=\"美味盖饭\">美味盖饭</Option>\r\n                                    <Option value=\"小吃，肉夹馍\">小吃，肉夹馍</Option>\r\n                                </Select>,\r\n                            </div>\r\n                            <div className=\"el-form-item\">\r\n                                <span>上架状态:</span>\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"上架状态\"\r\n                                    style={{ width: 170, color: \"#606266\", fontSize: 12, marginRight: \"0!imoprtant\" }}>\r\n                                    <Option value=\"热销\">热销</Option>\r\n                                    <Option value=\"买过\">买过</Option>\r\n                                    <Option value=\"优惠\">优惠</Option>\r\n                                    <Option value=\"为您优选\">为您优选</Option>\r\n                                </Select>,\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"el-title\">\r\n                        <div className=\"el-title-body\">\r\n                            <IconFont type=\"mall-doc-list\" style={{ fontSize: 16, marginRight: 5 }} />\r\n                            <span>数据列表</span>\r\n                            {/* <button className=\"add\">添加菜0品</button> */}\r\n                        </div>\r\n                    </div>\r\n                    <main className=\"table-container\">\r\n                        <table cellPadding=\"0\" cellSpacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        < Checkbox\r\n                                            onChange={this.onCheckAllChange.bind(this)}\r\n                                            indeterminate={this.state.indeterminate}\r\n                                            checked={this.state.checkAll}\r\n                                        />\r\n                                    </th>\r\n                                    <th>编号</th>\r\n                                    <th>菜品图片</th>\r\n                                    <th>菜品名称</th>\r\n                                    <th>菜品类型</th>\r\n                                    <th>销量</th>\r\n                                    <th>价格</th>\r\n                                    <th>标签</th>\r\n                                    <th>操作</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"ItemWrap\">{Items}</tbody>\r\n                        </table>\r\n                    </main>\r\n                    <Select\r\n                        // defaultValue=\"批量操作\" 不能改变颜色\r\n                        style={{ color: false ? \"red\" : \"lime\" }}\r\n                        placeholder=\"批量操作\"\r\n                        style={{\r\n                            marginRight: 20, marginTop: 30,\r\n                            float: \"left\", width: 150,\r\n                            size: \"large\", fontSize: 13\r\n                        }}\r\n                        onSelect={value => {\r\n                            this.selectValue = value\r\n                            if (this.itemsArr.some(ele => ele === true)) {\r\n                                this.setState({\r\n                                    booleanValue: false\r\n                                })\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.selectOption.map(item =>\r\n                            <Option value={item} key={item}>{item}</Option>\r\n                        )}\r\n                    </Select>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{\r\n                            marginTop: 30, fontSize: 13,\r\n                            height: 30, size: \"large\"\r\n                        }}\r\n                        disabled={this.state.booleanValue}\r\n                        onClick={\r\n                            () => this.bulkOperation()}\r\n                    >确定</Button>\r\n                    {this.renderPage(tempData)}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    state => { return { data: state.foodData } },//将redux变量赋值到组件,成组件变量Data\r\n    dispatch => bindActionCreators(actionCreators, dispatch))(Temp))"]},"metadata":{},"sourceType":"module"}