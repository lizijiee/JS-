{"ast":null,"code":"//说明： 哪里使用那里引入此文件;\nimport * as types from '../constants/actionTypes'; //注释在此文件中\n\nimport { finished } from 'stream';\nexport var setMemberInfo = function setMemberInfo(data) {\n  return {\n    type: types.SET_DATA_MEMBER,\n    data: data\n  };\n};\nexport var getFoodInfo = function getFoodInfo(data) {\n  return {\n    type: types.GET_DATA_FOOD,\n    data: data\n  };\n};\nexport var switchChange = function switchChange(data) {\n  return {\n    type: types.SWITCH_CHANGE,\n    data: data\n  };\n}; // export const deleteFood = data => ({\n//   type: types.REMOVE_MENU_ITEMS,\n//   data\n// })\n\nexport var bulkOperation = function bulkOperation(data) {\n  return {\n    //批量操作\n    type: types.BULK_OPERATION,\n    data: data\n  };\n};\nexport var combinedQuery = function combinedQuery(data) {\n  return {\n    //多重查找\n    type: types.BULK_SEARCH,\n    data: data\n  };\n};\nexport var fetchMemmberInfo = function fetchMemmberInfo(subreddit) {\n  return function (dispatch) {\n    //请求会员信息数据\n    return fetch(\"http://localhost:2000/pers/member\", {\n      method: 'GET'\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(setMemberInfo(data));\n    });\n  };\n};\nexport var fetchFoodInfo = function fetchFoodInfo() {\n  return function (dispatch) {\n    //请求会员信息数据\n    return fetch(\"http://localhost:2000/food/list\", {\n      method: 'GET'\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(getFoodInfo(data));\n    });\n  };\n}; //----------------------    按钮切换    -----------------\n\nexport var transRecommend = function transRecommend(valid, targetName, body) {\n  return function (dispatch) {\n    //请求会员信息数据\n    // valid: 切换后的状态   false 删除数据   true 增加数据\n    // targetName  目标类名\n    // body整条信息\n    var url = \"\";\n\n    if (valid) {\n      url = \"food?act=addMarket&&categoryName=\".concat(targetName);\n    } else {\n      url = \"food?act=delMarket&&categoryName=\".concat(targetName);\n    }\n\n    return fetch(\"http://localhost:2000/\".concat(url), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(fetchFoodInfo(data));\n    });\n  };\n}; //----------------------    菜品编辑    -----------------\n\nexport var editClick = function editClick(target, ele, ev) {\n  return function (dispatch) {\n    // ev.preventDefault();\n    target.history.push({\n      //将此条完整菜品信息藏在state中\n      pathname: \"/food/listDetails\",\n      state: {\n        ele: ele,\n        categoryName: ele.categoryName\n      },\n      search: '?num=' + ele.spuId\n    });\n  };\n}; //----------------------    批量查找   ----------------------\n\nexport var batchQuery = function batchQuery(require, data) {\n  return function (dispatch) {\n    //请求会员信息数据\n    // 前端把操作方式和操作数据发送给后端,先进行判断如果已经存在就不要发送后端了,redux里面也有数据,判断下\n    // 三个变量就去state里面找;\n    // 两个变量,侧重推荐,选后两个的(例如：菜品类型,中进入推荐状态的)\n    // 一个变量,就不聊了\n    var result = null;\n\n    if (Object.values(require).length === 3) {\n      var tempData = null;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var ele = _step.value;\n\n          if (ele.categoryName === require.categoryName) {\n            tempData = ele;\n            var firstData = ele.spuList.filter(function (items) {\n              return items.spuName === require.spuName.replace(/\\s+/g, \"\");\n            });\n\n            if (JSON.stringify(firstData) !== \"[]\") {\n              console.log(firstData);\n              result = ele.spuList.filter(function (ele) {\n                return ele.spuName === require.spuName.replace(/\\s+/g, \"\");\n              })[0];\n            } else {\n              result = null;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    return dispatch(combinedQuery(result)); //新数据丢进去\n  };\n};\n/*  fetch(`http://localhost:2000/pers?act=deleteClerks`,\r\n  {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(obj)\r\n  }\r\n)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    // 后台返回数据后页面是否渲染???\r\n    this.setState({\r\n      data: data.data,\r\n      storeData: data.data\r\n    })\r\n  }) */\n\n/* \r\nexport const getList=()=>{\r\n    //action可以是一个函数，有dispatch参数\r\n return (dispatch)=>{\r\n     axios.get('/api/headerList.json').then((res)=>{\r\n         const data=res.data;\r\n         dispatch(listInitAction(data.data))\r\n     }).catch(()=>{\r\n         console.log('error');\r\n     });\r\n }    \r\n};\r\n */","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\redux\\actions\\actions.js"],"names":["types","finished","setMemberInfo","data","type","SET_DATA_MEMBER","getFoodInfo","GET_DATA_FOOD","switchChange","SWITCH_CHANGE","bulkOperation","BULK_OPERATION","combinedQuery","BULK_SEARCH","fetchMemmberInfo","subreddit","dispatch","fetch","method","then","res","json","fetchFoodInfo","transRecommend","valid","targetName","body","url","headers","JSON","stringify","editClick","target","ele","ev","history","push","pathname","state","categoryName","search","spuId","batchQuery","require","result","Object","values","length","tempData","firstData","spuList","filter","items","spuName","replace","console","log"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB,C,CAAmD;;AACnD,SACEC,QADF,QAEO,QAFP;AAIA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAK;AACpCC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,eADwB;AAEpCF,IAAAA,IAAI,EAAJA;AAFoC,GAAL;AAAA,CAA1B;AAIP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAH,IAAI;AAAA,SAAK;AAClCC,IAAAA,IAAI,EAAEJ,KAAK,CAACO,aADsB;AAElCJ,IAAAA,IAAI,EAAJA;AAFkC,GAAL;AAAA,CAAxB;AAIP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAL,IAAI;AAAA,SAAK;AACnCC,IAAAA,IAAI,EAAEJ,KAAK,CAACS,aADuB;AAEnCN,IAAAA,IAAI,EAAJA;AAFmC,GAAL;AAAA,CAAzB,C,CAIP;AACA;AACA;AACA;;AACA,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAP,IAAI;AAAA,SAAK;AAAE;AACtCC,IAAAA,IAAI,EAAEJ,KAAK,CAACW,cADwB;AAEpCR,IAAAA,IAAI,EAAJA;AAFoC,GAAL;AAAA,CAA1B;AAIP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAT,IAAI;AAAA,SAAK;AAAE;AACtCC,IAAAA,IAAI,EAAEJ,KAAK,CAACa,WADwB;AAEpCV,IAAAA,IAAI,EAAJA;AAFoC,GAAL;AAAA,CAA1B;AAQP,OAAO,IAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAAE;AACzD,WAAOC,KAAK,sCAAsC;AAC9CC,MAAAA,MAAM,EAAE;AADsC,KAAtC,CAAL,CAGJC,IAHI,CAGC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAHJ,EAIJF,IAJI,CAIC,UAAAhB,IAAI;AAAA,aAAIa,QAAQ,CAACd,aAAa,CAACC,IAAD,CAAd,CAAZ;AAAA,KAJL,CAAP;AAKD,GANwC;AAAA,CAAlC;AAOP,OAAO,IAAMmB,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAAAN,QAAQ,EAAI;AAAE;AAC/C,WAAOC,KAAK,oCAAoC;AAC5CC,MAAAA,MAAM,EAAE;AADoC,KAApC,CAAL,CAGJC,IAHI,CAGC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAHJ,EAIJF,IAJI,CAIC,UAAAhB,IAAI;AAAA,aAAIa,QAAQ,CAACV,WAAW,CAACH,IAAD,CAAZ,CAAZ;AAAA,KAJL,CAAP;AAKD,GAN4B;AAAA,CAAtB,C,CAQP;;AACA,OAAO,IAAMoB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB;AAAA,SAA6B,UAAAV,QAAQ,EAAI;AAAE;AACvE;AACA;AACA;AACA,QAAIW,GAAG,GAAG,EAAV;;AACA,QAAIH,KAAJ,EAAW;AACTG,MAAAA,GAAG,8CAAuCF,UAAvC,CAAH;AACD,KAFD,MAEO;AACLE,MAAAA,GAAG,8CAAuCF,UAAvC,CAAH;AACD;;AACD,WAAOR,KAAK,iCAA0BU,GAA1B,GAAiC;AACzCT,MAAAA,MAAM,EAAE,MADiC;AAEzCU,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgC;AAKzCF,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AALmC,KAAjC,CAAL,CAOJP,IAPI,CAOC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAPJ,EAQJF,IARI,CASH,UAAChB,IAAD;AAAA,aAAUa,QAAQ,CAACM,aAAa,CAACnB,IAAD,CAAd,CAAlB;AAAA,KATG,CAAP;AAUD,GApB6B;AAAA,CAAvB,C,CAsBP;;AACA,OAAO,IAAM4B,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,GAAT,EAAcC,EAAd;AAAA,SAAqB,UAAAlB,QAAQ,EAAI;AACxD;AACAgB,IAAAA,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoB;AAAE;AACpBC,MAAAA,QAAQ,EAAE,mBADQ;AAElBC,MAAAA,KAAK,EAAE;AACLL,QAAAA,GAAG,EAAHA,GADK;AAELM,QAAAA,YAAY,EAAEN,GAAG,CAACM;AAFb,OAFW;AAMlBC,MAAAA,MAAM,EAAE,UAAUP,GAAG,CAACQ;AANJ,KAApB;AAQD,GAVwB;AAAA,CAAlB,C,CAYP;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUxC,IAAV;AAAA,SAAmB,UAAAa,QAAQ,EAAI;AAAE;AACzD;AACA;AACA;AACA;AACA,QAAI4B,MAAM,GAAG,IAAb;;AAEA,QAAIC,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuBI,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,UAAIC,QAAQ,GAAG,IAAf;AADuC;AAAA;AAAA;;AAAA;AAEvC,6BAAgB7C,IAAhB,8HAAsB;AAAA,cAAb8B,GAAa;;AACpB,cAAIA,GAAG,CAACM,YAAJ,KAAqBI,OAAO,CAACJ,YAAjC,EAA+C;AAC7CS,YAAAA,QAAQ,GAAGf,GAAX;AACA,gBAAIgB,SAAS,GAAGhB,GAAG,CAACiB,OAAJ,CAAYC,MAAZ,CAAmB,UAACC,KAAD,EAAW;AAC5C,qBAAOA,KAAK,CAACC,OAAN,KAAkBV,OAAO,CAACU,OAAR,CAAgBC,OAAhB,CAAwB,MAAxB,EAAgC,EAAhC,CAAzB;AACD,aAFe,CAAhB;;AAGA,gBAAIzB,IAAI,CAACC,SAAL,CAAemB,SAAf,MAA8B,IAAlC,EAAwC;AACtCM,cAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAL,cAAAA,MAAM,GAAGX,GAAG,CAACiB,OAAJ,CAAYC,MAAZ,CAAmB,UAAClB,GAAD;AAAA,uBAASA,GAAG,CAACoB,OAAJ,KAAgBV,OAAO,CAACU,OAAR,CAAgBC,OAAhB,CAAwB,MAAxB,EAAgC,EAAhC,CAAzB;AAAA,eAAnB,EAAiF,CAAjF,CAAT;AACD,aAHD,MAGK;AACDV,cAAAA,MAAM,GAAC,IAAP;AACH;AACF;AACF;AAfsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBxC;;AACD,WAAO5B,QAAQ,CAACJ,aAAa,CAACgC,MAAD,CAAd,CAAf,CAxBuD,CAwBhB;AACxC,GAzByB;AAAA,CAAnB;AAoDP;;;;;;;;;;;;;;;;;;AAkBA","sourcesContent":["//说明： 哪里使用那里引入此文件;\r\nimport * as types from '../constants/actionTypes'; //注释在此文件中\r\nimport {\r\n  finished\r\n} from 'stream';\r\n\r\nexport const setMemberInfo = data => ({\r\n  type: types.SET_DATA_MEMBER,\r\n  data\r\n})\r\nexport const getFoodInfo = data => ({\r\n  type: types.GET_DATA_FOOD,\r\n  data\r\n})\r\nexport const switchChange = data => ({\r\n  type: types.SWITCH_CHANGE,\r\n  data\r\n})\r\n// export const deleteFood = data => ({\r\n//   type: types.REMOVE_MENU_ITEMS,\r\n//   data\r\n// })\r\nexport const bulkOperation = data => ({ //批量操作\r\n  type: types.BULK_OPERATION,\r\n  data\r\n})\r\nexport const combinedQuery = data => ({ //多重查找\r\n  type: types.BULK_SEARCH,\r\n  data\r\n})\r\n\r\n\r\n\r\n\r\nexport const fetchMemmberInfo = subreddit => dispatch => { //请求会员信息数据\r\n  return fetch(`http://localhost:2000/pers/member`, {\r\n      method: 'GET',\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => dispatch(setMemberInfo(data)))\r\n}\r\nexport const fetchFoodInfo = () => dispatch => { //请求会员信息数据\r\n  return fetch(`http://localhost:2000/food/list`, {\r\n      method: 'GET',\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => dispatch(getFoodInfo(data)))\r\n}\r\n\r\n//----------------------    按钮切换    -----------------\r\nexport const transRecommend = (valid, targetName, body) => dispatch => { //请求会员信息数据\r\n  // valid: 切换后的状态   false 删除数据   true 增加数据\r\n  // targetName  目标类名\r\n  // body整条信息\r\n  let url = \"\"\r\n  if (valid) {\r\n    url = `food?act=addMarket&&categoryName=${targetName}`\r\n  } else {\r\n    url = `food?act=delMarket&&categoryName=${targetName}`\r\n  }\r\n  return fetch(`http://localhost:2000/${url}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      (data) => dispatch(fetchFoodInfo(data)))\r\n}\r\n\r\n//----------------------    菜品编辑    -----------------\r\nexport const editClick = (target, ele, ev) => dispatch => {\r\n  // ev.preventDefault();\r\n  target.history.push({ //将此条完整菜品信息藏在state中\r\n    pathname: \"/food/listDetails\",\r\n    state: {\r\n      ele,\r\n      categoryName: ele.categoryName\r\n    },\r\n    search: '?num=' + ele.spuId\r\n  });\r\n}\r\n\r\n//----------------------    批量查找   ----------------------\r\nexport const batchQuery = (require, data) => dispatch => { //请求会员信息数据\r\n  // 前端把操作方式和操作数据发送给后端,先进行判断如果已经存在就不要发送后端了,redux里面也有数据,判断下\r\n  // 三个变量就去state里面找;\r\n  // 两个变量,侧重推荐,选后两个的(例如：菜品类型,中进入推荐状态的)\r\n  // 一个变量,就不聊了\r\n  let result = null;\r\n\r\n  if (Object.values(require).length === 3) {\r\n    let tempData = null;\r\n    for (let ele of data) {\r\n      if (ele.categoryName === require.categoryName) {\r\n        tempData = ele\r\n        let firstData = ele.spuList.filter((items) => {\r\n          return items.spuName === require.spuName.replace(/\\s+/g, \"\")\r\n        })\r\n        if (JSON.stringify(firstData) !== \"[]\") { \r\n          console.log(firstData)\r\n          result = ele.spuList.filter((ele) => ele.spuName === require.spuName.replace(/\\s+/g, \"\"))[0]\r\n        }else{\r\n            result=null\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dispatch(combinedQuery(result)) //新数据丢进去\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*  fetch(`http://localhost:2000/pers?act=deleteClerks`,\r\n  {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(obj)\r\n  }\r\n)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    // 后台返回数据后页面是否渲染???\r\n    this.setState({\r\n      data: data.data,\r\n      storeData: data.data\r\n    })\r\n  }) */\r\n\r\n/* \r\nexport const getList=()=>{\r\n    //action可以是一个函数，有dispatch参数\r\n return (dispatch)=>{\r\n     axios.get('/api/headerList.json').then((res)=>{\r\n         const data=res.data;\r\n         dispatch(listInitAction(data.data))\r\n     }).catch(()=>{\r\n         console.log('error');\r\n     });\r\n }    \r\n};\r\n */"]},"metadata":{},"sourceType":"module"}