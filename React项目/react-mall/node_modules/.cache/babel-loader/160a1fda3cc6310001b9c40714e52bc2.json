{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { ComponentInterface } from '../component-interface';\nimport { extend2, getImageURL, pluckNumber, pluck, parseUnsafeString, BLANKSTRING, getValidValue, getContainerBackgroundColor, POSITION_TOP, POSITION_MIDDLE, POSITION_BOTTOM, POSITION_LEFT, POSITION_RIGHT, preDefStr, setImageDisplayMode, COMMA } from '../lib';\n\nvar UNDEF,\n    BACKGROUNDLOADERROR = 'backgroundloaderror',\n    BACKGROUNDLOADED = 'backgroundloaded',\n    POINTER = 'pointer',\n    NONE = preDefStr.noneStr,\n    attachLink = function attachLink(a, b) {\n  a.on('fc-click', function () {\n    try {\n      open(b);\n    } catch (a) {\n      (top || window).location.href = b;\n    }\n  }), a.css({\n    cursor: POINTER,\n    _cursor: POINTER\n  });\n};\n\nvar ChartMessage =\n/*#__PURE__*/\nfunction (_ComponentInterface) {\n  _inherits(ChartMessage, _ComponentInterface);\n\n  function ChartMessage() {\n    _classCallCheck(this, ChartMessage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChartMessage).apply(this, arguments));\n  }\n\n  _createClass(ChartMessage, [{\n    key: \"getName\",\n    value: function getName() {\n      return 'chartMessage';\n    }\n  }, {\n    key: \"_drawBackground\",\n    value: function _drawBackground(a) {\n      var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var c,\n          d,\n          e,\n          f,\n          g = this,\n          h = g.config,\n          i = g.getFromEnv('paper'),\n          j = g.getFromEnv('chart'),\n          k = g.getGraphicalElement('backgroundElement'),\n          l = g.getGraphicalElement('backgroundImage'),\n          m = g.getFromEnv('chartWidth'),\n          n = g.getFromEnv('chartHeight'),\n          o = g.getLinkedParent().getChildContainer('messageGroup').show(),\n          p = pluckNumber(b.imageAlpha, 100),\n          q = getValidValue(b.imageVAlign, BLANKSTRING).toLowerCase(),\n          r = pluck(b.imageHAlign, BLANKSTRING).toLowerCase(),\n          s = pluckNumber(b.imageScale, 100),\n          t = g.getFromEnv('chartInstance'),\n          u = h.messageURL,\n          v = getContainerBackgroundColor(t);\n      i.canvas.style.backgroundColor = v, q !== POSITION_TOP && q !== POSITION_MIDDLE && q !== POSITION_BOTTOM && (q = POSITION_TOP), r !== POSITION_LEFT && r !== POSITION_MIDDLE && r !== POSITION_RIGHT && (r = POSITION_LEFT), d = {\n        x: 0,\n        y: 0,\n        width: m,\n        height: n,\n        stroke: NONE\n      }, k || (k = i.rect(o), g.addGraphicalElement('backgroundElement', k)), k.attr(d), k && u && attachLink(k, u), h.bgImageVAlign = q, h.bgImageHAlign = r, h.bgImageScale = s, h.bgSWFAlpha = p, h.imgClipRect = 0 + COMMA + 0 + COMMA + m + COMMA + n, a && ((c = l) ? c.attr({\n        src: a\n      }) : (c = g.getFromEnv('paper').image(o), g.addGraphicalElement('backgroundImage', c), c.attr({\n        src: a\n      }), c.on('load', function () {\n        if (!(!c || c && c.removed)) {\n          var _b = c._.RefImg;\n          e = g.getFromEnv('chartConfig'), h.isImage && (e === UNDEF || e.hasChartMessage) && (f = setImageDisplayMode(NONE, h.bgImageVAlign, h.bgImageHAlign, h.bgImageScale, 0, g.getFromEnv('chartWidth'), g.getFromEnv('chartHeight'), _b), extend2(f, {\n            opacity: .01 * h.bgSWFAlpha,\n            visibility: 'visible',\n            \"clip-rect\": h.imgClipRect\n          }), c.attr(f).show(), c && u && attachLink(c, u), j.fireChartInstanceEvent(BACKGROUNDLOADED, {\n            url: a,\n            bgImageAlpha: 100 * h.bgSWFAlpha,\n            bgImageDisplayMode: NONE,\n            bgImageVAlign: h.bgImageVAlign,\n            bgImageHAlign: h.bgImageHAlign,\n            bgImageScale: h.bgImageScale,\n            imageWidth: _b.width,\n            imageHeight: _b.height\n          }));\n        }\n      }), c.on('error', function (b) {\n        c.removed || j.fireChartInstanceEvent(BACKGROUNDLOADERROR, {\n          url: a,\n          bgImageAlpha: 100 * h.bgSWFAlpha,\n          error: b,\n          bgImageDisplayMode: NONE,\n          bgImageVAlign: h.bgImageVAlign,\n          bgImageHAlign: h.bgImageHAlign,\n          bgImageScale: h.bgImageScale\n        }, t);\n      })));\n    }\n  }, {\n    key: \"setChartMessage\",\n    value: function setChartMessage(a, b) {\n      var c,\n          d,\n          e,\n          f,\n          g,\n          h = this,\n          i = h.getFromEnv('chartInstance'),\n          j = i.options,\n          k = i.args,\n          l = h.config,\n          m = h.getFromEnv('smartLabel'),\n          n = getImageURL('undefined' == typeof a ? j.dataEmptyMessage : a),\n          o = h.getFromEnv('chartWidth'),\n          p = h.getFromEnv('chartHeight');\n      d = l.width = +o, c = l.height = +p, n.image ? (e = n.string, g = b ? {\n        imageHAlign: pluck(b._chartMessageImageStyle.imageHAlign, j.baseChartMessageImageHAlign).toLowerCase(),\n        imageVAlign: pluck(b._chartMessageImageStyle.imageVAlign, j.baseChartMessageImageVAlign).toLowerCase(),\n        imageAlpha: pluckNumber(b._chartMessageImageStyle.imageAlpha, j.baseChartMessageImageAlpha),\n        imageScale: pluckNumber(b._chartMessageImageStyle.imageScale, j.baseChartMessageImageScale)\n      } : {\n        imageHAlign: pluck(k.dataEmptyMessageImageHAlign, j.baseChartMessageImageHAlign).toLowerCase(),\n        imageVAlign: pluck(k.dataEmptyMessageImageVAlign, j.baseChartMessageImageVAlign).toLowerCase(),\n        imageAlpha: pluckNumber(k.dataEmptyMessageImageAlpha, j.baseChartMessageImageAlpha),\n        imageScale: pluckNumber(k.dataEmptyMessageImageScale, j.baseChartMessageImageScale)\n      }, l.chartMessageType = 'image') : (g = b ? {\n        \"font-family\": b._chartMessageStyle.fontFamily || j.baseChartMessageFont,\n        \"font-size\": b._chartMessageStyle.fontSize || j.baseChartMessageFontSize,\n        fill: b._chartMessageStyle.color || j.baseChartMessageColor\n      } : {\n        \"font-family\": k.dataEmptyMessageFont || j.baseChartMessageFont,\n        \"font-size\": k.dataEmptyMessageFontSize || j.baseChartMessageFontSize,\n        fill: k.dataEmptyMessageColor || j.baseChartMessageColor\n      }, m.setStyle(g), f = m.getSmartText(parseUnsafeString(n.string), d, c), e = {\n        text: f.text,\n        x: d / 2,\n        y: c / 2\n      }, l.chartMessageType = 'text'), l.messageURL = j.messageURL, l.chartMessageAttr = e, l.chartMessageStyle = g;\n    }\n  }, {\n    key: \"drawChartMessage\",\n    value: function drawChartMessage() {\n      var a,\n          b,\n          c,\n          d = this,\n          e = d.config,\n          f = d.getFromEnv('paper'),\n          g = e.isImage = 'image' === e.chartMessageType,\n          h = e.messageURL,\n          i = g ? e.chartMessageAttr : extend2(e.chartMessageAttr, e.chartMessageStyle);\n      a = d.getGraphicalElement('messageText'), c = d._graphics, b = d.getLinkedParent().getChildContainer('messageGroup').show(), g ? d._drawBackground(e.chartMessageAttr, e.chartMessageStyle) : a || 'text' !== e.chartMessageType ? (c.message = a.attr(i), a.show()) : a = d.addGraphicalElement('messageText', f.text(i, b)), (a || c.message) && h && attachLink(a || c.message, h), d._hideOtherMessage(g);\n    }\n  }, {\n    key: \"_hideOtherMessage\",\n    value: function _hideOtherMessage(a) {\n      var b,\n          c,\n          d,\n          e = this;\n      a ? (c = e.getGraphicalElement('messageText'), c && c.hide()) : (b = e.getGraphicalElement('backgroundImage'), d = e.getGraphicalElement('backgroundElement'), b && b.hide(), d && d.hide());\n    }\n  }, {\n    key: \"_hideChartMessage\",\n    value: function _hideChartMessage() {\n      this._hideOtherMessage(!0), this._hideOtherMessage();\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'chartMessage';\n    }\n  }]);\n\n  return ChartMessage;\n}(ComponentInterface);\n\nexport default ChartMessage;","map":null,"metadata":{},"sourceType":"module"}