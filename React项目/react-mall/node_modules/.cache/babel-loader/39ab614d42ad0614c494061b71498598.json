{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Tool from '../tool';\nimport { pluckNumber } from '../../../lib';\nimport { getDep } from '../../../dependency-manager';\nvar R = getDep('redraphael', 'plugin'),\n    M = 'M',\n    m = 'm',\n    v = 'v',\n    COLOR_5F5F5F = '5F5F5F';\n\nvar ScrollAnchor =\n/*#__PURE__*/\nfunction (_Tool) {\n  _inherits(ScrollAnchor, _Tool);\n\n  function ScrollAnchor() {\n    var _this;\n\n    _classCallCheck(this, ScrollAnchor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollAnchor).call(this)), _this._evtHandlers = {};\n    return _this;\n  }\n\n  _createClass(ScrollAnchor, [{\n    key: \"configureAttributes\",\n    value: function configureAttributes() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var b = this,\n          c = this.config,\n          d = b.getLinkedParent().config;\n      c.fillColor = a.anchorFill || d.displayFlat && R.tintshade(d.color, -.6).rgba || [270 * d.isHorizontal, R.tintshade(d.color, .3).rgba + ':40', R.tintshade(d.color, -.7).rgba].join('-'), c.strokeColor = a.anchorStroke || R.tintshade(d.color, -.6).rgba, c.drawStripes = pluckNumber(a.drawStripes, 0), c.stripesStroke = a.stripesStroke || COLOR_5F5F5F, c._nodeDimensions = {};\n    }\n  }, {\n    key: \"attachEventHandlers\",\n    value: function attachEventHandlers() {\n      var a,\n          b,\n          c,\n          d = this,\n          e = d.config,\n          f = this.getLinkedParent(),\n          g = f.config,\n          h = g.isHorizontal;\n      d.addEventListener('fc-dragmove', d._evtHandlers.dragmove || (d._evtHandlers.dragmove = function (f) {\n        c = a + f.originalEvent.data[b] / e.trackLength, 1 <= c ? c = 1 : (0 >= c || isNaN(c)) && (c = 0), g.scrollPosition = c, d.asyncDraw(), 'function' == typeof g.evt.scroll && g.evt.scroll(g.scrollPosition);\n      })), d.addEventListener('fc-dragstart', d._evtHandlers.dragstart || (d._evtHandlers.dragstart = function () {\n        b = h ? 0 : 1, a = g.scrollPosition, 'function' == typeof g.evt.scrollStart && g.evt.scrollStart(g.scrollPosition);\n      })), d.addEventListener('fc-dragend', d._evtHandlers.dragend || (d._evtHandlers.dragend = function () {\n        'function' == typeof g.evt.scrollEnd && g.evt.scrollEnd(g.scrollPosition);\n      }));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a = Math.min;\n      var b,\n          c,\n          d = this,\n          e = d.config,\n          f = this.getLinkedParent(),\n          g = f.config,\n          h = g.x + .5,\n          i = g.y + g.padding + .5,\n          j = g.width - 1,\n          k = 1 > g.height - 1 ? 1 : g.height - 1,\n          l = g.restrictScrollAnchor ? Math.max(g.scrollRatio, .01) : g.scrollRatio,\n          n = g.isHorizontal,\n          o = pluckNumber(g.scrollPosition, g.startPercent, 0),\n          p = 0,\n          q = n ? j * l : k * l;\n      1 <= o ? o = 1 : (0 >= o || isNaN(o)) && (o = 0), g.showButtons && (p = n ? a(k, .5 * j) : a(j, .5 * k), q -= 2 * p * l), e.trackLength = b = n ? j - 2 * p - q : k - 2 * p - q, e.trackOffset = c = n ? h + p + .5 : i + p + .5, e._nodeDimensions = {\n        x: n ? c + b * o : h,\n        y: n ? i : c + b * o,\n        width: n ? 1 > q - 1 ? 1 : q - 1 : 1 > j ? 1 : j,\n        height: n ? 1 > k ? 1 : k : 1 > q - 1 ? 1 : q - 1\n      }, d.addGraphicalElement({\n        el: 'rect',\n        attr: {\n          x: e._nodeDimensions.x,\n          y: e._nodeDimensions.y,\n          width: e._nodeDimensions.width,\n          height: e._nodeDimensions.height,\n          fill: e.fillColor,\n          stroke: e.strokeColor,\n          r: g.roundEdges && 2 || 0\n        },\n        container: {\n          id: 'scrollerGroup',\n          label: 'scrollerGroup',\n          isParent: !0\n        },\n        component: d,\n        label: 'scrollerAnchor',\n        id: 'scrollerAnchor'\n      }), e.drawStripes && 8 <= e._nodeDimensions.width && d.addGraphicalElement({\n        el: 'path',\n        attr: {\n          path: [M, e._nodeDimensions.x + e._nodeDimensions.width / 2 - 3, e._nodeDimensions.y + .2 * e._nodeDimensions.height, v, .6 * e._nodeDimensions.height, m, 3, -.6 * e._nodeDimensions.height, v, .6 * e._nodeDimensions.height, m, 3, -.6 * e._nodeDimensions.height, v, .6 * e._nodeDimensions.height],\n          stroke: e.stripesStroke,\n          \"stroke-linecap\": 'round',\n          \"stroke-width\": 2\n        },\n        container: {\n          id: 'scrollerGroup',\n          label: 'scrollerGroup',\n          isParent: !0\n        },\n        component: d,\n        label: 'scrollerAnchorStripe',\n        id: 'scrollerAnchorStripe'\n      });\n    }\n  }]);\n\n  return ScrollAnchor;\n}(Tool);\n\nexport default ScrollAnchor;","map":null,"metadata":{},"sourceType":"module"}