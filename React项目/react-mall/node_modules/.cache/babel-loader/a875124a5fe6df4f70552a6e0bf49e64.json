{"ast":null,"code":"/* import {\r\n  ADD_TO_CART,\r\n  CHECKOUT_REQUEST,\r\n  CHECKOUT_FAILURE\r\n} from '../constants/ActionTypes' */\n//export default 只导出一个\n// const tiger=0;\nvar initState = {\n  num: 1,\n  addedIds: [],\n  quantityById: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  state = JSON.parse(JSON.stringify(state)); //initState为\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      state.num += 1;\n      break;\n\n    case \"DECREMENT\":\n      state.num -= 1;\n      break;\n  }\n\n  return state;\n};\n\nexport { reducer };\n/* 测试 */\n\n/* \r\nconst initialState = {\r\n  addedIds: [],\r\n  quantityById: {}\r\n}\r\n\r\nconst addedIds = (state = initialState.addedIds, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if (state.indexOf(action.productId) !== -1) {\r\n        return state\r\n      }\r\n      return [ ...state, action.productId ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst quantityById = (state = initialState.quantityById, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const { productId } = action\r\n      return { ...state,\r\n        [productId]: (state[productId] || 0) + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getQuantity = (state, productId) =>\r\n  state.quantityById[productId] || 0\r\n\r\nexport const getAddedIds = state => state.addedIds\r\n\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHECKOUT_REQUEST:\r\n      return initialState\r\n    case CHECKOUT_FAILURE:\r\n      return action.cart\r\n    default:\r\n      return {\r\n        addedIds: addedIds(state.addedIds, action),\r\n        quantityById: quantityById(state.quantityById, action)\r\n      }\r\n  }\r\n}\r\n\r\nexport default cart\r\n */","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\redux\\reducers\\index.js"],"names":["initState","num","addedIds","quantityById","reducer","state","action","JSON","parse","stringify","type"],"mappings":"AAAA;;;;;AAMA;AACA;AACA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,GAAG,EAAC,CADY;AAEhBC,EAAAA,QAAQ,EAAE,EAFM;AAGhBC,EAAAA,YAAY,EAAE;AAHE,CAAlB;;AAMA,IAAMC,OAAO,GAAE,SAATA,OAAS,GAA0B;AAAA,MAAzBC,KAAyB,uEAAnBL,SAAmB;AAAA,MAATM,MAAS;AACjCD,EAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,KAAf,CAAX,CAAR,CADiC,CACS;;AAC1C,UAAOC,MAAM,CAACI,IAAd;AACI,SAAK,WAAL;AACEL,MAAAA,KAAK,CAACJ,GAAN,IAAa,CAAb;AACF;;AACA,SAAK,WAAL;AACEI,MAAAA,KAAK,CAACJ,GAAN,IAAa,CAAb;AACF;AANJ;;AAQA,SAAOI,KAAP;AACH,CAXL;;AAYI,SAASD,OAAT;AACJ;;AAEA","sourcesContent":["/* import {\r\n  ADD_TO_CART,\r\n  CHECKOUT_REQUEST,\r\n  CHECKOUT_FAILURE\r\n} from '../constants/ActionTypes' */\r\n\r\n//export default 只导出一个\r\n// const tiger=0;\r\nconst initState = {\r\n  num:1,\r\n  addedIds: [],\r\n  quantityById: {}\r\n}\r\n\r\nconst reducer= (state=initState,action)=>{ \r\n        state = JSON.parse(JSON.stringify(state));//initState为\r\n        switch(action.type){\r\n            case \"INCREMENT\":\r\n              state.num += 1\r\n            break;\r\n            case \"DECREMENT\":\r\n              state.num -= 1;\r\n            break;\r\n        }\r\n        return state;\r\n    }\r\n    export  {reducer}\r\n/* 测试 */\r\n\r\n/* \r\nconst initialState = {\r\n  addedIds: [],\r\n  quantityById: {}\r\n}\r\n\r\nconst addedIds = (state = initialState.addedIds, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if (state.indexOf(action.productId) !== -1) {\r\n        return state\r\n      }\r\n      return [ ...state, action.productId ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst quantityById = (state = initialState.quantityById, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const { productId } = action\r\n      return { ...state,\r\n        [productId]: (state[productId] || 0) + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getQuantity = (state, productId) =>\r\n  state.quantityById[productId] || 0\r\n\r\nexport const getAddedIds = state => state.addedIds\r\n\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHECKOUT_REQUEST:\r\n      return initialState\r\n    case CHECKOUT_FAILURE:\r\n      return action.cart\r\n    default:\r\n      return {\r\n        addedIds: addedIds(state.addedIds, action),\r\n        quantityById: quantityById(state.quantityById, action)\r\n      }\r\n  }\r\n}\r\n\r\nexport default cart\r\n */"]},"metadata":{},"sourceType":"module"}