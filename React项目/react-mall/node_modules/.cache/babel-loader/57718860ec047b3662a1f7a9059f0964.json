{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Tool from '../tool';\nimport { getDep } from '../../../dependency-manager';\nimport { TRACKER_FILL, polyPathToPath } from '../../../lib';\nimport { priorityList } from '../../../schedular';\nvar R = getDep('redraphael', 'plugin'),\n    START = 'start';\n\nvar ScrollButtons =\n/*#__PURE__*/\nfunction (_Tool) {\n  _inherits(ScrollButtons, _Tool);\n\n  function ScrollButtons() {\n    var _this;\n\n    _classCallCheck(this, ScrollButtons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollButtons).call(this)), _this._evtHandlers = {};\n    return _this;\n  }\n\n  _createClass(ScrollButtons, [{\n    key: \"configureAttributes\",\n    value: function configureAttributes() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var b = this,\n          c = this.config,\n          d = b.getLinkedParent().config;\n      c.type = a.type, c.buttonFill = a.buttonFill, c.buttonStroke = a.buttonStroke, c.arrowFillColor = a.buttonPointerFill || R.tintshade(d.color, -.4).rgba;\n    }\n  }, {\n    key: \"attachEventHandlers\",\n    value: function attachEventHandlers() {\n      var a,\n          b,\n          c = this,\n          d = c.config,\n          e = c.getLinkedParent(),\n          f = e.config,\n          g = e.getChildren('scrollAnchor')[0],\n          h = function h() {\n        1 <= f.scrollPosition ? f.scrollPosition = 1 : (0 >= f.scrollPosition || isNaN(f.scrollPosition)) && (f.scrollPosition = 0), g.asyncDraw(), 'function' == typeof f.evt.scroll && f.evt.scroll(f.scrollPosition);\n      },\n          i = function i() {\n        b = !0, d.type === START ? f.scrollPosition -= .01 : f.scrollPosition += .01, h(), c.addJob('dragScrollAnchor', i, priorityList.draw);\n      };\n\n      c.addEventListener('fc-mousedown', c._evtHandlers.mousedown || (c._evtHandlers.mousedown = function () {\n        a = setTimeout(function () {\n          c.addJob('dragScrollAnchor', i, priorityList.draw);\n        }, 300);\n      })), c.addEventListener('fc-mouseup', c._evtHandlers.mouseup || (c._evtHandlers.mouseup = function () {\n        clearTimeout(a), c.removeJob('dragScrollAnchor'), b || (d.type === START ? f.scrollPosition -= .1 : f.scrollPosition += .1, h()), b = !1;\n      })), c.addEventListener('fc-mouseout', function () {\n        b && c._evtHandlers.mouseup();\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a = Math.min;\n      var b = this,\n          c = b.config,\n          d = this.getLinkedParent(),\n          e = d.config,\n          f = {\n        id: 'scrollerGroup',\n        label: 'scrollerGroup',\n        isParent: !0\n      },\n          g = e.isHorizontal,\n          h = e.x + .5,\n          i = e.y + e.padding + .5,\n          j = e.width - 1,\n          k = 1 > e.height - 1 ? 1 : e.height - 1,\n          l = g ? a(k, .5 * j) : a(j, .5 * k),\n          m = g ? polyPathToPath([3, h + .5 * l, i + .5 * k, .25 * l, 180]) : polyPathToPath([3, h + .5 * j, i + .5 * l, .25 * l, 90]),\n          n = g ? polyPathToPath([3, h + j - .5 * l, i + .5 * l, .25 * l, 0]) : polyPathToPath([3, h + .5 * j, i + k - .5 * l, .25 * l, -90]);\n      b.addGraphicalElement({\n        el: 'rect',\n        attr: {\n          x: 'start' === c.type ? h : g ? h + j - l : h,\n          y: 'start' === c.type ? i : g ? i : i + k - l,\n          width: 'start' === c.type ? g ? l : j : g ? l : j,\n          height: 'start' === c.type ? g ? k : l : g ? k : l,\n          fill: c.buttonFill || TRACKER_FILL,\n          stroke: c.buttonStroke || 'none'\n        },\n        container: f,\n        component: b,\n        label: 'scroller' + c.type + 'ButtonRect',\n        id: 'scroller' + c.type + 'ButtonRect'\n      }), b.addGraphicalElement({\n        el: 'path',\n        attr: {\n          path: 'start' === c.type ? m : n,\n          fill: c.arrowFillColor,\n          stroke: 'none'\n        },\n        container: f,\n        component: b,\n        label: 'scroller' + c.type + 'ButtonPath',\n        id: 'scroller' + c.type + 'ButtonPath'\n      });\n    }\n  }]);\n\n  return ScrollButtons;\n}(Tool);\n\nexport default ScrollButtons;","map":null,"metadata":{},"sourceType":"module"}