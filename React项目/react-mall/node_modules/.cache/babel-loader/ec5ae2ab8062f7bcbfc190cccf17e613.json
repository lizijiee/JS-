{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\Add\\\\Step\\\\StepOne.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\nimport './Add.less';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar ButtonGroup = Button.Group;\nvar TextArea = Input.TextArea;\n/* \r\n    antd 表单使用\r\n    resetFields() 重置表单内数据\r\n\r\n    getFieldsValue([\"name\"],).name  校验并获取一组输入域的值与 Error(用于提交之前)\r\n    name为ID也为Key值，函数返回值为对象\r\n    前两个参数都为数组， [fieldNames: string[]], [options: object] \r\n\r\n     validateFieldsAndScroll([\"name\"])//直接调用就可以\t  参考 validateFields\r\n     如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围（建议用在Submit）\r\n\r\n     isFieldValidating\t判断一个输入控件是否在校验状态（可以扔到help里面）\r\n     两种报错方法 validateFields和rule中的min判断条件\r\n     min默认为 name is require 使用message进行修改\r\n*/\n\nvar StepOne =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepOne, _Component);\n\n  function StepOne() {\n    _classCallCheck(this, StepOne);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StepOne).apply(this, arguments));\n  }\n\n  _createClass(StepOne, [{\n    key: \"handleReset\",\n\n    /*  constructor(props) {//传入的props需要在constructor接收一下\r\n       super()\r\n     } */\n    value: function handleReset(e) {\n      //resetFields重置表单内容\n      e.preventDefault();\n      this.props.props.form.resetFields();\n    }\n  }, {\n    key: \"userExists\",\n    value: function userExists(rule, value, callback) {\n      //当做validator函数来用,用来作为判断条件\n      if (!value) {\n        callback();\n      } else {\n        setTimeout(function () {\n          if (value === '宫爆鸡丁') {\n            callback([new Error('抱歉，该菜名已被占用。')]);\n          } else {\n            callback();\n          }\n        }, 800);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // 子组件不能修改，但是还需要数值改变！！！！怎样处理，直接在对象里面搞个数值太low了\n      var _this$props$props$for = this.props.props.form,\n          getFieldProps = _this$props$props$for.getFieldProps,\n          getFieldError = _this$props$props$for.getFieldError,\n          isFieldValidating = _this$props$props$for.isFieldValidating; //--------------------------------需要-----------------------\n\n      var nameProps = getFieldProps('spuName', {\n        //第一个参数为ID,第二个为options\n        rules: [{\n          required: true,\n          min: 1,\n          message: '请输入菜品名称'\n        }, {\n          validator: this.userExists.bind(this)\n        }]\n      });\n      var selectProps = getFieldProps('categoryName', {\n        //菜品类型\n        rules: [{\n          required: true,\n          message: '请选择菜品类型'\n        }]\n      });\n      var priceProps = getFieldProps('currentPrice', {\n        //textarea 为ID\n        rules: [{\n          required: true,\n          message: '请输入菜品销售价格'\n        }]\n      });\n      var unitProps = getFieldProps('unit', {\n        //textarea 为ID\n        rules: [{\n          required: true,\n          message: '请输入菜品单位'\n        }]\n      });\n      var tagProps = getFieldProps('activityTag', {//textarea 为ID\n      });\n      var formItemLayout = {\n        //样式\n        labelCol: {\n          span: 7\n        },\n        wrapperCol: {\n          span: 12\n        }\n      };\n      var categoryName = [\"热销\", \"推荐\", \"折扣\"];\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u540D\\u79F0\\uFF1A\",\n        hasFeedback: true,\n        help: isFieldValidating('spuName') ? '校验中...' : (getFieldError('spuName') || []).join(', '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Input, Object.assign({}, nameProps, {\n        placeholder: \" \\u8F93\\u5165 \\u5BAB\\u7206\\u9E21\\u4E01 \\u770B\\u770B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u83DC\\u54C1\\u7C7B\\u578B\\uFF1A\"\n      }, formItemLayout, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Select, Object.assign({\n        style: {\n          width: 200\n        }\n      }, selectProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), categoryName.map(function (item, index) {\n        return React.createElement(Option, {\n          value: item,\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, item);\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u9500\\u552E\\u4EF7\\uFF1A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(InputNumber, Object.assign({\n        style: {\n          width: 320,\n          fontSize: 13\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u83DC\\u54C1\\u9500\\u552E\\u4EF7\\u683C\"\n      }, priceProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u83DC\\u54C1\\u5355\\u4F4D\\uFF1A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Input, Object.assign({\n        style: {\n          width: 320,\n          fontSize: 13\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u83DC\\u54C1\\u5355\\u4F4D\"\n      }, unitProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        id: \"control-textarea\",\n        label: \"\\u83DC\\u54C1\\u4ECB\\u7ECD\\uFF1A\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(TextArea, Object.assign({}, tagProps, {\n        placeholder: \"Please enter...\" // style={{marginBottom:50}}\n        ,\n        cols: 45,\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return StepOne;\n}(Component);\n\nexport default StepOne;","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\Add\\Step\\StepOne.js"],"names":["React","Component","Button","Form","Input","Select","InputNumber","FormItem","Item","Option","ButtonGroup","Group","TextArea","StepOne","e","preventDefault","props","form","resetFields","rule","value","callback","setTimeout","Error","getFieldProps","getFieldError","isFieldValidating","nameProps","rules","required","min","message","validator","userExists","bind","selectProps","priceProps","unitProps","tagProps","formItemLayout","labelCol","span","wrapperCol","categoryName","join","width","map","item","index","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\r\nimport './Add.less';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst ButtonGroup = Button.Group;\r\nconst TextArea = Input.TextArea;\r\n\r\n/* \r\n    antd 表单使用\r\n    resetFields() 重置表单内数据\r\n\r\n    getFieldsValue([\"name\"],).name  校验并获取一组输入域的值与 Error(用于提交之前)\r\n    name为ID也为Key值，函数返回值为对象\r\n    前两个参数都为数组， [fieldNames: string[]], [options: object] \r\n\r\n     validateFieldsAndScroll([\"name\"])//直接调用就可以\t  参考 validateFields\r\n     如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围（建议用在Submit）\r\n\r\n     isFieldValidating\t判断一个输入控件是否在校验状态（可以扔到help里面）\r\n     两种报错方法 validateFields和rule中的min判断条件\r\n     min默认为 name is require 使用message进行修改\r\n*/\r\nclass StepOne extends Component {\r\n  /*  constructor(props) {//传入的props需要在constructor接收一下\r\n     super()\r\n   } */\r\n  handleReset(e) {\r\n    //resetFields重置表单内容\r\n    e.preventDefault();\r\n    this.props.props.form.resetFields();\r\n  };\r\n  userExists(rule, value, callback) {\r\n    //当做validator函数来用,用来作为判断条件\r\n    if (!value) {\r\n      callback();\r\n    } else {\r\n      setTimeout(() => {\r\n        if (value === '宫爆鸡丁') {\r\n          callback([new Error('抱歉，该菜名已被占用。')]);\r\n        } else {\r\n          callback();\r\n        }\r\n      }, 800);\r\n    }\r\n  };\r\n\r\n  \r\n  render() {\r\n\r\n    // 子组件不能修改，但是还需要数值改变！！！！怎样处理，直接在对象里面搞个数值太low了\r\n    const { getFieldProps, getFieldError, isFieldValidating } = this.props.props.form;\r\n    //--------------------------------需要-----------------------\r\n    const nameProps = getFieldProps('spuName', { //第一个参数为ID,第二个为options\r\n      rules: [\r\n        { required: true, min: 1, message: '请输入菜品名称' },\r\n        { validator: this.userExists.bind(this) }\r\n      ]\r\n    });\r\n\r\n    const selectProps = getFieldProps('categoryName', {//菜品类型\r\n      rules: [{ required: true, message: '请选择菜品类型' }]\r\n    });\r\n\r\n    const priceProps = getFieldProps('currentPrice', {//textarea 为ID\r\n      rules: [{ required: true, message: '请输入菜品销售价格' }]\r\n    });\r\n    const unitProps = getFieldProps('unit', {//textarea 为ID\r\n      rules: [{ required: true, message: '请输入菜品单位' }]\r\n    });\r\n\r\n    const tagProps = getFieldProps('activityTag', {//textarea 为ID\r\n    });\r\n    const formItemLayout = {//样式\r\n      labelCol: { span: 7 },\r\n      wrapperCol: { span: 12 },\r\n    };\r\n    const categoryName=[\"热销\",\"推荐\",\"折扣\"]\r\n    return (\r\n      <Form >\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"菜品名称：\"\r\n          hasFeedback\r\n          help={isFieldValidating('spuName') ? '校验中...' : (getFieldError('spuName') || []).join(', ')}\r\n        >\r\n          <Input {...nameProps} placeholder=\" 输入 宫爆鸡丁 看看\"\r\n          />\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          label=\"菜品类型：\"\r\n          {...formItemLayout}\r\n          required\r\n        >\r\n          <Select style={{ width: 200 }}\r\n            {...selectProps}\r\n          >\r\n            {\r\n              categoryName.map((item, index) => {\r\n                return <Option value={item} key={item}>{item}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"菜品销售价：\"\r\n        >\r\n          <InputNumber\r\n            style={{ width: 320, fontSize: 13 }}\r\n            placeholder=\"请输入菜品销售价格\"\r\n            {...priceProps}\r\n          />\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"菜品单位：\"\r\n        >\r\n          <Input\r\n            style={{ width: 320, fontSize: 13 }}\r\n            placeholder=\"请输入菜品单位\"\r\n            {...unitProps}\r\n          />\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          id=\"control-textarea\"\r\n          label=\"菜品介绍：\"\r\n          {...formItemLayout}\r\n        >\r\n          <TextArea\r\n            {...tagProps}\r\n            placeholder=\"Please enter...\"\r\n            // style={{marginBottom:50}}\r\n            cols={45}\r\n            rows={4}\r\n          />\r\n        </FormItem>\r\n\r\n      </Form >\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default StepOne"]},"metadata":{},"sourceType":"module"}