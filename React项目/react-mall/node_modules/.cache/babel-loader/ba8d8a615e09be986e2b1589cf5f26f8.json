{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport CommonAPI from './commonchartapi';\nimport { POSITION_BOTTOM } from '../../../../fc-core/src/lib';\n\nvar CommonSpaceManager =\n/*#__PURE__*/\nfunction (_CommonAPI) {\n  _inherits(CommonSpaceManager, _CommonAPI);\n\n  function CommonSpaceManager() {\n    _classCallCheck(this, CommonSpaceManager);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CommonSpaceManager).apply(this, arguments));\n  }\n\n  _createClass(CommonSpaceManager, [{\n    key: \"_spaceManager\",\n    value: function _spaceManager() {\n      var a,\n          b,\n          c,\n          d,\n          e,\n          f,\n          g,\n          h,\n          j,\n          k,\n          l,\n          m,\n          n,\n          o,\n          p,\n          q,\n          r,\n          s,\n          t,\n          u,\n          v = this,\n          w = v.config,\n          x = v.getChildren('xAxis') && v.getChildren('xAxis')[0],\n          y = v.getChildren('yAxis') && v.getChildren('yAxis') || [],\n          z = w.legendposition,\n          A = w.xDepth,\n          B = w.yDepth,\n          C = w.canvasBgDepth,\n          D = w.canvasBaseDepth,\n          E = w.canvasBasePadding,\n          F = v.getChildren('canvas')[0],\n          G = F.config.canvasBorderWidth,\n          H = w.realTimeConfig && w.realTimeConfig.showRTValue,\n          I = w.borderWidth,\n          J = w.canvasMarginTop,\n          K = w.canvasMarginBottom,\n          L = w.canvasMarginLeft,\n          M = w.canvasMarginRight,\n          N = w.minCanvasHeight,\n          O = w.minCanvasWidth,\n          P = w.minChartWidth,\n          Q = w.minChartHeight,\n          R = w.height,\n          S = w.width,\n          T = !1,\n          U = !1,\n          V = w.origCanvasTopMargin,\n          W = w.origCanvasBottomMargin,\n          X = w.origCanvasLeftMargin,\n          Y = w.origCanvasRightMargin,\n          Z = [];\n\n      for (w.canvasWidth - 2 * I < P && (p = (w.canvasWidth - P) / 2), w.canvasHeight - 2 * I < Q && (o = (w.canvasHeight - Q) / 2), v._allocateSpace({\n        top: o || I,\n        bottom: o || I,\n        left: p || I,\n        right: p || I\n      }), (l = 0, d = y.length); l < d; l++) {\n        c = y[l], a = .7 * w.availableWidth, t = c && c.placeAxis(a) || {}, Z.push({\n          axisIndex: l,\n          spaceTaken: t\n        }), c && v._allocateSpace(t);\n      }\n\n      w.yAxisSpaceAllocation = Z, v._allocateSpace(v._manageActionBarSpace && v._manageActionBarSpace(.225 * w.availableHeight) || {}), v._manageLegendSpace && w.showLegend && v._manageLegendSpace(e), b = z === POSITION_BOTTOM ? .6 * w.availableHeight : .6 * w.availableWidth, B && (v._allocateSpace({\n        bottom: B\n      }), w.shift = A + E + D), C && v._allocateSpace({\n        right: C\n      }), w.canvasWidth - 2 * G < O && (r = (w.canvasWidth - O) / 2), v._allocateSpace({\n        left: r || G,\n        right: r || G\n      }), O > S - L - M && (U = !0, f = w.canvasWidth - O, u = L + M, L = w.canvasMarginLeft = f * L / u, M = w.canvasMarginRight = f * M / u), j = L > w.canvasLeft ? L - w.canvasLeft : 0, k = M > S - w.canvasRight ? M + w.canvasRight - S : 0, v._allocateSpace({\n        left: j,\n        right: k\n      }), U && (u = X + Y, n = w.canvasWidth, n > O && (f = n - O, j = f * X / u, k = f * Y / u), v._allocateSpace({\n        left: j,\n        right: k\n      })), w.actualCanvasMarginRight = k, w.actualCanvasMarginBottom = h, v._manageChartMenuBar(b), b = .2 * w.availableHeight, v._getSumValueSpace && v._allocateSpace(v._getSumValueSpace(b)), b = .3 * w.availableHeight, w.realtimeEnabled && (H ? v._allocateSpace(v._realTimeValuePositioning(b)) : v._hideRealTimeValue()), v._resetViewPortConfig && v._resetViewPortConfig(), v._setAxisScale && v._setAxisScale(), b = .6 * w.availableHeight, w.xAxisSpaceAllocation = s = x && x.placeAxis(b), x && v._allocateSpace(s), w.canvasHeight - 2 * G < N && (q = (w.canvasHeight - N) / 2), v._allocateSpace({\n        top: q || G,\n        bottom: q || G\n      }), v._allocateSpace({\n        bottom: D\n      }), N > R - J - K && (T = !0, f = w.canvasHeight - N, u = J + K, J = w.canvasMarginTop = f * J / u, K = w.canvasMarginBottom = f * K / u), g = J > w.canvasTop ? J - w.canvasTop : 0, h = K > R - w.canvasBottom ? K + w.canvasBottom - R : 0, v._allocateSpace({\n        top: g,\n        bottom: h\n      }), T && (u = V + W, m = w.canvasHeight, m > N && (f = m - N, g = f * V / u, h = f * W / u), v._allocateSpace({\n        top: g,\n        bottom: h\n      })), w.actualCanvasMarginTop = g, w.actualCanvasMarginLeft = j, F.setDimension({\n        top: w.canvasTop,\n        left: w.canvasLeft,\n        width: w.canvasWidth,\n        height: w.canvasHeight\n      });\n    }\n  }, {\n    key: \"_postSpaceManagement\",\n    value: function _postSpaceManagement() {\n      var a,\n          b,\n          c = this,\n          d = c.config,\n          e = c.getChildren(),\n          f = e.xAxis && e.xAxis[0],\n          g = e.legend && e.legend[0],\n          h = d.xDepth,\n          j = c.getChildren('canvas');\n\n      for (c.setAxisDimention && c.setAxisDimention(), f && c._allocateXAxisLabelSpace(f), f && f.shiftLabels(-h, 0), g && g.postSpaceManager(), a = 0; a < (j && j.length); a++) {\n        b = j[a], b.setCanvasPadding();\n      }\n\n      c.setAxisDimention && c.setAxisDimention(), c.allocateDimensionOfChartMenuBar();\n    }\n  }]);\n\n  return CommonSpaceManager;\n}(CommonAPI);\n\nexport default CommonSpaceManager;","map":null,"metadata":{},"sourceType":"module"}