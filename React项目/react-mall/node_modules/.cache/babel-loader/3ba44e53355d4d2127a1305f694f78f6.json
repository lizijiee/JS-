{"ast":null,"code":"function clearStateEventHandler(a) {\n  delete a.sender.jsVars._reflowData, a.sender.jsVars._reflowData = {}, delete a.sender.jsVars._reflowClean;\n}\n\nexport default {\n  beforeInitialize: function beforeInitialize(a) {\n    var b,\n        c = a.sender,\n        d = c.jsVars;\n    d.fcObj = c, d.msgStore = d.msgStore || {\n      LoadDataErrorText: 'Error in loading data.',\n      XMLLoadingText: 'Retrieving data. Please wait',\n      InvalidXMLText: 'Invalid data.',\n      ChartNoDataText: 'No data to display.',\n      ReadingDataText: 'Reading data. Please wait',\n      ChartNotSupported: 'Chart type not supported.',\n      PBarLoadingText: '',\n      LoadingText: 'Loading chart. Please wait',\n      RenderChartErrorText: 'Unable to render chart.'\n    }, d.cfgStore = d.cfgStore || {}, d.previousDrawCount = -1, d.drawCount = 0, d._reflowData = {}, c.addEventListener('beforeRender', function (a) {\n      return a.detachHandler();\n    }), d.userModules instanceof Array || (b = d.userModules, d.userModules = [], 'string' == typeof b && (d.userModules = d.userModules.concat(b.split(','))));\n  },\n  beforeDataUpdate: clearStateEventHandler,\n  beforeDispose: function beforeDispose(a) {\n    var b = a.sender,\n        c = b.jsVars;\n    c.smartLabel && !c.smartLabel.disposed && c.smartLabel.dispose(), clearStateEventHandler.apply(void 0, arguments);\n  },\n  beforeRender: function beforeRender(a) {\n    var b = a.sender,\n        c = b.jsVars;\n    delete c.drLoadAttempted, clearStateEventHandler.apply(void 0, arguments);\n  },\n  dataLoadRequested: function dataLoadRequested(a) {\n    var b = a.sender,\n        c = b.jsVars;\n    delete c.loadError, b.ref && b.options.showDataLoadingMessage ? c.hcObj && !c.hasNativeMessage && c.hcObj.showLoading ? c.hcObj.showMessage(c.msgStore.XMLLoadingText) : b.ref.showChartMessage ? b.ref.showChartMessage('XMLLoadingText') : c.stallLoad = !0 : c.stallLoad = !0;\n  },\n  dataLoadRequestCompleted: function dataLoadRequestCompleted(a) {\n    var b = a.sender,\n        c = b.jsVars;\n    delete c.stallLoad;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}