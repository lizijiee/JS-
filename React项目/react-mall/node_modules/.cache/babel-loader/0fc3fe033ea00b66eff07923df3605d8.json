{"ast":null,"code":"import DataSkipping from './data-skipping-ext';\nimport { allowedCharts } from './data-skipping-charts';\n\nfunction dataSkip(a) {\n  a.addEventListener('preconfigure', function (a) {\n    var b = a.sender,\n        c = b.getFromEnv('chart');\n    allowedCharts[c && c.getName()] && ('dataset' === b.getType() && 'cartesianStackGroup' !== b.getLinkedParent().getName() ? (b.setState('applySkippingOnConf', !0), DataSkipping.dataSkipping({\n      component: b,\n      datasetType: b.getName(),\n      compType: 'dataset'\n    })) : 'cartesianStackGroup' === b.getName() && (b.setState('applySkippingOnConf', !0), DataSkipping.dataSkipping({\n      component: b,\n      datasetType: b.getName(),\n      compType: 'group'\n    })));\n  }), a.addEventListener('preattributeprepared', function (a) {\n    var b = a.sender.getFromEnv && a.sender.getFromEnv('chart');\n    if (allowedCharts[b && b.getName()]) if ('dataset' === a.sender.getType()) {\n      var _b = a.sender,\n          c = _b.getFromEnv('canvasConfig'),\n          d = _b.getFromEnv('chart').isBar ? c.canvasHeight : c.canvasWidth;\n\n      'cartesianStackGroup' !== _b.getLinkedParent().getName() && (_b.getState('applySkippingOnConf') ? _b.setState('applySkippingOnConf', !1) : DataSkipping.dataSkipping({\n        component: _b,\n        compType: 'dataset',\n        datasetType: _b.getName(),\n        width: d\n      }));\n    } else if ('cartesianStackGroup' === a.sender.getName()) {\n      var _b2 = a.sender,\n          _c = _b2.getFromEnv('canvasConfig'),\n          _d = _b2.getFromEnv('chart').isBar ? _c.canvasHeight : _c.canvasWidth,\n          e = Object.keys(_b2.getChildren())[0];\n\n      _b2.getState('applySkippingOnConf') ? _b2.setState('applySkippingOnConf', !1) : DataSkipping.dataSkipping({\n        component: _b2,\n        compType: 'group',\n        datasetType: _b2.getChildren(e)[0].getName(),\n        width: _d\n      });\n    }\n  }), a.addEventListener('dataplotdragend', function (a, b) {\n    if (a.sender.getType && 'dataset' === a.sender.getType()) {\n      var c = a.sender,\n          d = c.getSkippingInfo && c.getSkippingInfo(),\n          e = d && d.skippingApplied;\n      e && DataSkipping.updateDragMap({\n        component: c,\n        compType: 'dataset',\n        evenType: 'dataplotdragend',\n        eventArgs: b\n      });\n    }\n  });\n}\n\nexport default {\n  extension: dataSkip,\n  name: 'DataSkipping',\n  type: 'extension',\n  requiresFusionCharts: !0\n};","map":null,"metadata":{},"sourceType":"module"}