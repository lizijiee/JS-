{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React, { Component } from 'react';\nimport { Layout, Icon, Breadcrumb, Switch } from 'antd';\nimport { Link } from 'react-router-dom';\nimport '../../index.css';\nimport PropTypes from \"prop-types\";\nvar Header = Layout.Header;\nvar breadcrumbNameMap = {\n  \"/\": \"首页\",\n  '/pers': '人员',\n  \"/pers/clerks\": \"店员列表\",\n  \"/pers/member\": \"会员列表\",\n  \"/food\": \"菜品\",\n  \"/food/list\": \"菜品列表\",\n  \"/food/add\": \"菜品添加\",\n  \"/orders\": \"订单\",\n  \"/orders/list\": \"订单列表\",\n  \"/orders/handle\": \"订单处理\",\n  \"/orders/cause\": \"订单原因设置\",\n  \"/sale\": \"营销\",\n  \"/sale/home\": \"首页宣传\",\n  \"/sale/new\": \"新品推荐\",\n  \"/sale/hot\": \"热销推荐\",\n  \"/sale/deals\": \"首页宣传\",\n  \"/sale/combo\": \"套餐推荐\",\n  \"/address\": \"项目地址\"\n}; //  path=\"/sale/home\"\n// render={() =>  <Advertise /> } />\n//  path=\"/sale/new\"\n// render={() => <New />} />\n//  path=\"/sale/hot\"\n// render={() => <Hot />} />\n//  path=\"/sale/deals\"\n// render={() => <Discount />} />\n//  path=\"/sale/combo\"\n// render={() => <Combos />} />\n//  path=\"/address\"\n// render={() => <Location />} />\n\nvar D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(D, _Component);\n\n  function D(props, context) {\n    var _this;\n\n    _classCallCheck(this, D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(D).call(this, props, context));\n    _this.state = {\n      pathSnippets: null,\n      extraBreadcrumbItems: null\n    };\n    return _this;\n  }\n\n  _createClass(D, [{\n    key: \"getPath\",\n    value: function getPath() {\n      var _this2 = this;\n\n      //对路径进行切分，存放到this.state.pathSnippets中\n      var pathname = this.context.router.history.location.pathname;\n      this.state.pathSnippets = pathname.split('/').filter(function (i) {\n        return i;\n      }); //[\"pers\", \"clerks\"]\n\n      console.log(pathname);\n      console.log(this.state.pathSnippets);\n\n      if (pathname == \"/\" || pathname == \"/address\") {\n        console.log(pathname);\n        this.state.extraBreadcrumbItems;\n      }\n\n      this.state.extraBreadcrumbItems = this.state.pathSnippets.map(function (_, index) {\n        var url = \"/\".concat(_this2.state.pathSnippets.slice(0, index + 1).join('/'));\n        console.log(url);\n        return React.createElement(Breadcrumb.Item, {\n          key: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, breadcrumbNameMap[url]));\n      }); //将切分的路径读出来，形成面包屑，存放到this.state.extraBreadcrumbItems\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //首次加载的时候调用，形成面包屑\n      this.getPath();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      //任何子页面发生改变，均可调用，完成路径切分以及形成面包屑\n      // console.log(this.getPath())\n      this.getPath();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Header, {\n        style: {\n          background: '#fff',\n          padding: 0,\n          height: \"60px\",\n          border: '1px solid #e6e6e6',\n          marginLeft: \"16px\"\n        },\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"trigger\",\n        type: this.props.collapsed ? 'menu-unfold' : 'menu-fold',\n        onClick: this.props.toggle,\n        style: {\n          lineHeight: \"60px\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        style: {\n          margin: '12px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.extraBreadcrumbItems)));\n    }\n  }]);\n\n  return D;\n}(Component);\n\nD.contextTypes = {\n  router: PropTypes.object\n};\nexport { D as default };","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Header\\Header.js"],"names":["React","Component","Layout","Icon","Breadcrumb","Switch","Link","PropTypes","Header","breadcrumbNameMap","D","props","context","state","pathSnippets","extraBreadcrumbItems","pathname","router","history","location","split","filter","i","console","log","map","_","index","url","slice","join","getPath","background","padding","height","border","marginLeft","collapsed","toggle","lineHeight","fontSize","margin","contextTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Layout, Icon, Breadcrumb, Switch } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../index.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet { Header } = Layout;\r\n\r\nconst breadcrumbNameMap = {\r\n  \"/\": \"首页\",\r\n  '/pers': '人员',\r\n  \"/pers/clerks\": \"店员列表\",\r\n  \"/pers/member\": \"会员列表\",\r\n  \"/food\": \"菜品\",\r\n  \"/food/list\": \"菜品列表\",\r\n  \"/food/add\": \"菜品添加\",\r\n  \"/orders\": \"订单\",\r\n  \"/orders/list\": \"订单列表\",\r\n  \"/orders/handle\": \"订单处理\",\r\n  \"/orders/cause\": \"订单原因设置\",\r\n  \"/sale\": \"营销\",\r\n  \"/sale/home\": \"首页宣传\",\r\n  \"/sale/new\": \"新品推荐\",\r\n  \"/sale/hot\": \"热销推荐\",\r\n  \"/sale/deals\": \"首页宣传\",\r\n  \"/sale/combo\": \"套餐推荐\",\r\n  \"/address\": \"项目地址\"\r\n};\r\n\r\n//  path=\"/sale/home\"\r\n// render={() =>  <Advertise /> } />\r\n//  path=\"/sale/new\"\r\n// render={() => <New />} />\r\n//  path=\"/sale/hot\"\r\n// render={() => <Hot />} />\r\n//  path=\"/sale/deals\"\r\n// render={() => <Discount />} />\r\n//  path=\"/sale/combo\"\r\n// render={() => <Combos />} />\r\n//  path=\"/address\"\r\n// render={() => <Location />} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class D extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      pathSnippets: null,\r\n      extraBreadcrumbItems: null\r\n    }\r\n  };\r\n  static contextTypes = {\r\n    router: PropTypes.object\r\n  }\r\n  getPath() {\r\n    //对路径进行切分，存放到this.state.pathSnippets中\r\n     let pathname = this.context.router.history.location.pathname\r\n     this.state.pathSnippets = pathname.split('/').filter(i => i);//[\"pers\", \"clerks\"]\r\n    console.log(pathname);\r\n    console.log(this.state.pathSnippets)\r\n     if(pathname==\"/\"||pathname==\"/address\"){\r\n        console.log(pathname)\r\n        this.state.extraBreadcrumbItems\r\n     }\r\n      this.state.extraBreadcrumbItems = this.state.pathSnippets.map((_, index) => {\r\n        const url = `/${this.state.pathSnippets.slice(0, index + 1).join('/')}`;\r\n        console.log(url)\r\n        return (\r\n          <Breadcrumb.Item key={url}>\r\n            <Link to={url}>\r\n              {breadcrumbNameMap[url]}\r\n            </Link>\r\n          </Breadcrumb.Item>\r\n        );\r\n      });\r\n    \r\n\r\n    //将切分的路径读出来，形成面包屑，存放到this.state.extraBreadcrumbItems\r\n\r\n  }\r\n  componentWillMount() {\r\n    //首次加载的时候调用，形成面包屑\r\n    this.getPath();\r\n  }\r\n  componentWillReceiveProps() {\r\n    //任何子页面发生改变，均可调用，完成路径切分以及形成面包屑\r\n    // console.log(this.getPath())\r\n    this.getPath();\r\n  }\r\n  render() {\r\n    return (\r\n      <Header style={{ background: '#fff', padding: 0, height: \"60px\", border: '1px solid #e6e6e6', marginLeft: \"16px\" }}\r\n        className='border-bottom'\r\n      >\r\n        <Icon\r\n          className=\"trigger\"\r\n          type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n          onClick={this.props.toggle}\r\n          style={{ lineHeight: \"60px\", fontSize: \"20px\" }}\r\n        />\r\n        <span>\r\n          <Breadcrumb style={{ margin: '12px 0' }}>\r\n            {this.state.extraBreadcrumbItems}\r\n          </Breadcrumb>\r\n        </span>\r\n      </Header>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}