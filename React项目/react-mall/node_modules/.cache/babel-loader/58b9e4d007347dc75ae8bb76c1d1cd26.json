{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Base from './input-base';\nimport { isFirefox, UNDEF } from '../../../fc-core/src/lib';\n\nvar fetchCoordFromEvent = function fetchCoordFromEvent(a) {\n  return (a.originalEvent && (a = a.originalEvent), a.type.match(/touch/)) ? {\n    x: a.touches[0].pageX,\n    y: a.touches[0].pageY\n  } : a.type.match(/mouse|pointer/) ? {\n    x: a.pageX,\n    y: a.pageY\n  } : void 0;\n},\n    isSingleFinger = function isSingleFinger(a) {\n  return !a.touches || 1 === a.touches.length;\n},\n    getDiffValXY = function getDiffValXY(c, a) {\n  return {\n    x: c.x - a.x,\n    y: c.y - a.y\n  };\n};\n\nvar InputPan =\n/*#__PURE__*/\nfunction (_Base) {\n  _inherits(InputPan, _Base);\n\n  function InputPan() {\n    var _this;\n\n    _classCallCheck(this, InputPan);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputPan).call(this));\n\n    var a = _assertThisInitialized(_this);\n\n    a.controlArr = [{\n      nativeInteraction: ['fc-dragstart', 'fc-dragmove'],\n      callback: a.onDrag.bind(a),\n      component: a\n    }, {\n      nativeInteraction: ['fc-dragend'],\n      callback: a.onDragEnd.bind(a),\n      component: a\n    }], a.toggle = a.toggle.bind(a), isFirefox && a.controlArr.push({\n      nativeInteraction: ['fc-mousedown'],\n      callback: InputPan.mousedown,\n      component: a\n    });\n    return _this;\n  }\n\n  _createClass(InputPan, [{\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(InputPan.prototype), \"configure\", this).call(this);\n\n      var a = this,\n          b = a.config;\n      b.skipGraphics || a.setLinkedItem('button', a.createButton({\n        icon: 'panModeIcon',\n        tooltext: a.config.tooltext,\n        handlers: {\n          click: a.toggle\n        },\n        state: 'activated'\n      })), a.getLinkedParent().registerDependancy([{\n        derivedInteraction: ['zoomin', 'zoomout', 'dragzoomenabled', 'dragzoomdisabled'],\n        callback: a.dependancyFn,\n        component: a\n      }]), a.disable(UNDEF, !1);\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'dragPan';\n    }\n  }, {\n    key: \"enable\",\n    value: function enable(a, b) {\n      var c = this;\n      c._checkStackLen() && !0 !== c.config.enabled && (c.config.enabled = !0, c.config.state = 'pressed', c.fireEvent('panenabled'), !b && c.getFromEnv('chart').fireChartInstanceEvent('zoommodechanged', {\n        panModeActive: !0\n      }, a && a.originalEvent), c.setControl());\n    }\n  }, {\n    key: \"disable\",\n    value: function disable(a, b) {\n      var c = this;\n      !1 !== c.config.enabled && (c.config.enabled = !1, c.config.state = c._checkStackLen() ? 'activated' : 'disabled', c.fireEvent('pandisabled'), !b && c.getFromEnv('chart').fireChartInstanceEvent('zoommodechanged', {\n        panModeActive: !1\n      }, a && a.originalEvent), c.setControl());\n    }\n  }, {\n    key: \"setControl\",\n    value: function setControl() {\n      var a = this,\n          b = a.getLinkedParent(),\n          c = a.getLinkedItem('button'),\n          d = a.controlArr;\n      b.releaseControl(d), a.isEnabled() && b.getControl(d), c && c.setCurrentState(a.isEnabled() ? a.config.state : 'disabled');\n    }\n  }, {\n    key: \"setDrag\",\n    value: function setDrag(a) {\n      this.config.isDragging = !!a;\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      return !!this.config.isDragging;\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd() {\n      this.setDrag(!1), this.getFromEnv('chart').getContainer('parentgroup').attr({\n        cursor: 'default'\n      });\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(a) {\n      var b,\n          c,\n          d,\n          e,\n          f,\n          g,\n          h,\n          i,\n          j,\n          k,\n          l,\n          m = this,\n          n = fetchCoordFromEvent(a.originalEvent);\n      isSingleFinger(a.originalEvent) && (m.getFromEnv('chart').getContainer('parentgroup').attr({\n        cursor: 'move'\n      }), this.getFromEnv('animationManager').setAnimationState('drag'), m.isDragging() ? m.getFromEnv('axesObArr').forEach(function (a) {\n        var m = Math.min;\n        if (b = a.origConfig.minValue, c = a.origConfig.maxValue, f = a.axis, g = f.config.axisRange, h = f.getScale(), i = h.getRange(), j = h.getDomain(), k = (i[1] - i[0]) / (j[1] - j[0]), l = getDiffValXY(n, a.startCoord), e = c - b, d = a.isY ? l.y / k : l.x / k, d = -d, 0 < d) d = m(g.max - c, d);else if (0 > d) d = -m(b - g.min, -d);else return;\n        b += d, c = b + e, f.setVisibleConfig(b, c);\n      }) : (m.getFromEnv('axesObArr').forEach(function (a) {\n        a.origConfig = a.axis.getVisibleConfig(), a.startCoord = n;\n      }), m.setDrag(!0)));\n    }\n  }, {\n    key: \"dependancyFn\",\n    value: function dependancyFn(a) {\n      var b = this;\n      'zoomout' === a.type ? !b._checkStackLen() && b.disable() : 'zoomin' === a.type ? b.enable(a) : 'dragzoomdisabled' === a.type ? b._checkStackLen() && b.enable(a) : 'dragzoomenabled' === a.type && b.disable(a);\n    }\n  }], [{\n    key: \"mousedown\",\n    value: function mousedown(a) {\n      a && a.preventDefault();\n    }\n  }]);\n\n  return InputPan;\n}(Base);\n\nexport default InputPan;","map":null,"metadata":{},"sourceType":"module"}