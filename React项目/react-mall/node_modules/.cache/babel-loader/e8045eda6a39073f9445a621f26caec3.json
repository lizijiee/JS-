{"ast":null,"code":"import lib from './lib';\nimport ContainerManager from './container-manager';\nvar slLib = lib.init(window),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = {\n  \" \": '&nbsp;'\n},\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction SmartLabelManager(a, b, c) {\n  var d,\n      e,\n      f,\n      g = !1,\n      h = window.document.createElement('canvas');\n\n  for (e in c = c || {}, c.maxCacheLimit = isFinite(f = c.maxCacheLimit) ? f : slLib.maxDefaultCacheLimit, 'string' == typeof a && (a = doc.getElementById(a)), d = slLib.createContainer(a), d.innerHTML = slLib.testStrAvg, !documentSupport.isHeadLess && (documentSupport.isIE || d.offsetHeight || d.offsetWidth) || (g = !0), d.innerHTML = '', slLib.parentContainerStyle) {\n    d.style[e] = slLib.parentContainerStyle[e];\n  }\n\n  this.parentContainer = d, this.ctx = h && h.getContext && h.getContext('2d'), this._containerManager = new ContainerManager(d, g, 10), this._showNoEllipses = !b, this._init = !0, this.style = {}, this.oldStyle = 1, this.options = c, this.setStyle();\n}\n\nSmartLabelManager.textToLines = function (a) {\n  return a = a || {}, a.text ? 'string' != typeof a.text && (a.text = a.text.toString()) : a.text = '', a.lines = a.text.split(/\\n|<br\\s*?\\/?>/ig), a;\n}, SmartLabelManager.prototype._calCharDimWithCache = function () {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var b = arguments.length > 1 ? arguments[1] : undefined;\n  var c = arguments.length > 2 ? arguments[2] : undefined;\n  if (!this._init) return !1;\n  var d,\n      e,\n      f,\n      g,\n      h,\n      i,\n      j,\n      k,\n      l,\n      m,\n      n = this.options.maxCacheLimit,\n      o = this.style || {};\n  return (j = this._advancedCache = this._advancedCache || (this._advancedCache = {}), k = this._advancedCacheKey || (this._advancedCacheKey = []), l = a + (o.fontSize || BLANK) + (o.fontFamily || BLANK) + (o.fontWeight || BLANK) + (o.fontStyle || BLANK), m = a + 'init' + (o.fontSize || BLANK) + (o.fontFamily || BLANK) + (o.fontWeight || BLANK) + (o.fontStyle || BLANK), !this.ctx && htmlSplCharSpace[a] && (a = htmlSplCharSpace[a]), b ? void 0 === (i = j[m]) && (f = this._getDimention(a.repeat ? a.repeat(c) : Array(c + 1).join(a)).width, g = this._getDimention(a).width, i = j[m] = (f - c * g) / (c + 1), k.push(m), k.length > n && delete j[k.shift()]) : i = 0, h = j[l]) ? (e = h.split(','), {\n    width: parseFloat(e[0], 10),\n    height: parseFloat(e[1], 10)\n  }) : (d = this._getDimention(a), d.width += i, j[l] = d.width + ',' + d.height, k.push(l), k.length > n && delete j[k.shift()], d);\n}, SmartLabelManager.prototype._getDimention = function (a) {\n  return this.requireDiv || !this.ctx ? slLib._getDimentionUsingDiv(a, this) : slLib._getDimentionUsingCanvas(a, this);\n}, SmartLabelManager.prototype._getWidthFn = function () {\n  var a = this,\n      b = a._containerObj,\n      c = b.svgText;\n  return c ? function (a) {\n    var b, d;\n    return c.textContent = a, b = c.getBBox(), d = b.width - SVG_BBOX_CORRECTION, 1 > d && (d = b.width), d;\n  } : function (b) {\n    return a.requireDiv || !a.ctx ? slLib._getDimentionUsingDiv(b, a).width : slLib._getDimentionUsingCanvas(b, a).width;\n  };\n}, SmartLabelManager.prototype._setStyleOfCanvas = function () {\n  if (this.style !== this.oldStyle) {\n    var a,\n        b = this,\n        c = b.style,\n        d = c.fontStyle || c['font-style'] || 'normal',\n        e = c.fontVariant || c['font-variant'] || 'normal',\n        f = c.fontWeight || c['font-weight'] || 'normal',\n        g = c.fontSize || c['font-size'] || '12px',\n        h = c.fontFamily || c['font-family'] || 'Verdana,sans';\n    g += -1 === g.indexOf('px') ? 'px' : '', b.ctx.font = d + ' ' + e + ' ' + f + ' ' + g + ' ' + h, a = this._containerObj = this._containerManager.get(c), this._containerObj ? (this._container = a.node, this._context = a.context, this._cache = a.charCache, this._lineHeight = a.lineHeight, this._styleNotSet = !1) : this._styleNotSet = !0, a.ellipsesWidth = b.ctx.measureText('...').width, a.dotWidth = b.ctx.measureText('.').width, a.lineHeight = this._lineHeight = a.lineHeight || slLib._getCleanHeight(c.lineHeight), this.oldStyle = c;\n  }\n}, SmartLabelManager.prototype._setStyleOfDiv = function () {\n  var a,\n      b = this.style;\n  this._containerObj = a = this._containerManager.get(b), a.node || this._containerManager._makeDivNode(this._containerObj), this._containerObj ? (this._container = a.node, this._context = a.context, this._cache = a.charCache, this._lineHeight = a.lineHeight, this._styleNotSet = !1) : this._styleNotSet = !0;\n}, SmartLabelManager.prototype._updateStyle = function () {\n  return this.requireDiv || !this.ctx ? this._setStyleOfDiv() : this._setStyleOfCanvas();\n}, SmartLabelManager.prototype.setStyle = function (a) {\n  a && ('undefined' != typeof a.fontSize && (a.fontSize += ''), 'undefined' != typeof a['font-size'] && (a['font-size'] += ''), this.style = a, slLib.setLineHeight(a));\n}, SmartLabelManager.prototype.useEllipsesOnOverflow = function (a) {\n  return this._init ? (this._showNoEllipses = !a, this) : this;\n}, SmartLabelManager.prototype.getSmartText = function (a, b, c, d) {\n  if (!this._init) return !1;\n  void 0 === a || null === a ? a = '' : 'string' != typeof a && (a = a.toString());\n\n  var e,\n      f,\n      g,\n      h,\n      j,\n      k,\n      l,\n      m,\n      n,\n      o,\n      p,\n      q,\n      r,\n      s,\n      t,\n      u,\n      v,\n      w,\n      z,\n      A,\n      B,\n      C,\n      D,\n      E,\n      F,\n      G,\n      H,\n      I,\n      J,\n      K,\n      L,\n      M,\n      N,\n      O,\n      P = !1,\n      Q = 0,\n      R = -1,\n      S = -1,\n      T = -1,\n      U = 0,\n      V = 0,\n      W = [],\n      X = 0,\n      Y = this._showNoEllipses ? '' : '...',\n      Z = this.ctx,\n      $ = [],\n      _ = -1,\n      aa = -1,\n      ba = -1,\n      ca = function ca(a) {\n    a = a.replace(/^\\s\\s*/, '');\n\n    for (var b = /\\s/, c = a.length; b.test(a.charAt(c -= 1));) {\n      ;\n    }\n\n    return a.slice(0, c + 1);\n  },\n      da = {\n    text: a,\n    maxWidth: b,\n    maxHeight: c,\n    width: null,\n    height: null,\n    oriTextWidth: null,\n    oriTextHeight: null,\n    oriText: a,\n    isTruncated: !1\n  };\n\n  if (P = slLib.xmlTagRegEx.test(a), N = slLib._hasOnlyBRTag(a), this.requireDiv = P && !N, this._updateStyle(), H = this._lineHeight, I = this._context, J = this._container, K = this._containerObj, L = K.ellipsesWidth, M = K.dotWidth, k = a.replace(slLib.spanAdditionRegx, '$2'), q = this._getWidthFn(), 1 >= H - c && 0 <= H - c && (c *= 1.2), Z || J) {\n    if (!documentSupport.isBrowserLess) {\n      if (P ? N ? (a = a.replace(slLib.brRegex, '<br />'), O = slLib._getDimentionOfMultiLineText(a, this), da.oriTextWidth = l = O.width, da.oriTextHeight = m = O.height) : (J.innerHTML = a, da.oriTextWidth = l = J.offsetWidth, da.oriTextHeight = m = J.offsetHeight) : (h = a = a.replace(slLib.ltgtRegex, function (a) {\n        return '&lt;' === a ? '<' : '>';\n      }), t = this.getOriSize(h, !0, {\n        hasHTMLTag: P,\n        hasOnlyBrTag: N,\n        cleanText: !0\n      }), da.oriTextWidth = l = t.width, da.oriTextHeight = m = t.height), m <= c && l <= b) return da.width = da.oriTextWidth = l, da.height = da.oriTextHeight = m, da;\n      if (H > c) return da.text = '', da.width = da.oriTextWidth = 0, da.height = da.oriTextHeight = 0, da;\n    }\n\n    if (a = ca(a).replace(/(\\s+)/g, ' '), j = this._showNoEllipses ? b : b - L, !P || N) {\n      if (W = slLib._getTextArray(a), e = W.length, f = '', g = [], p = W[0], this._cache[p] ? z = this._cache[p].width : (z = q(p), this._cache[p] = {\n        width: z\n      }), j > z && !N) g = a.substr(0, slLib.getNearestBreakIndex(a, j, this)).split('');else {\n        if (z > b) return da.text = '', da.width = da.oriTextWidth = da.height = da.oriTextHeight = 0, da;\n        Y && (j = b - 2 * M, j > z ? Y = '..' : (j = b - M, j > z ? Y = '.' : (j = 0, Y = '')));\n      }\n\n      if (X = g.length, U = q(g.join('')), V = this._lineHeight, d) {\n        for (; X < e; X += 1) {\n          if (p = g[X] = W[X], '<br />' === g[X]) {\n            V += this._lineHeight, T = X, Q = max(Q, U), U = 0, f = null;\n            continue;\n          }\n\n          if (this._cache[p] ? z = this._cache[p].width : ((!t || !(z = t.detailObj[p])) && (z = q(p)), this._cache[p] = {\n            width: z\n          }), U += z, U > j && (f || (f = g.slice(0, -1).join('')), U > b)) return da.text = ca(f) + Y, da.tooltext = da.oriText, da.width = max(Q, U), da.height = V, da;\n        }\n\n        return da.text = g.join(''), da.width = max(Q, U), da.height = V, da;\n      }\n\n      for (; X < e; X += 1) {\n        if (p = g[X] = W[X], ' ' !== p || I || (p = this.ctx ? ' ' : '&nbsp;'), '<br />' === g[X]) if (Q = max(Q, U), V += this._lineHeight, V <= c) {\n          T = X, U = 0, f = null;\n          continue;\n        } else if (V > c) return f = g.slice(0, -1).join(''), da.text = ca(f) + Y, da.tooltext = k, da.width = Q, da.height = V - this._lineHeight, da;\n\n        if (this._cache[p] ? z = this._cache[p].width : ((!t || !(z = t.detailObj[p])) && (z = q(p)), this._cache[p] = {\n          width: z\n        }), U += z, U > j && (f || (f = g.slice(0, -1).join('')), U > b)) {\n          if ('<br />' === W[X + 1]) continue;\n          if (S = slLib._findLastIndex(W.slice(0, g.length), ' '), R = slLib._findLastIndex(W.slice(0, g.length), '-'), S > T ? (U = q(g.slice(T + 1, S).join('')), g.splice(S, 1, '<br />'), T = S, n = S + 1) : R > T ? (R === g.length - 1 ? (U = q(g.slice(T + 1, S).join('')), g.splice(R, 1, '<br />-')) : (U = q(g.slice(T + 1, S).join('')), g.splice(R, 1, '-<br />')), T = R, n = R + 1) : (g.splice(g.length - 1, 1, '<br />' + W[X]), ba = g.length - 2, U = q(g.slice(T + 1, ba + 1).join('')), T = ba, n = X), V += this._lineHeight, V > c) return da.text = ca(f) + Y, da.tooltext = da.oriText, da.width = b, da.height = V - this._lineHeight, da;\n          Q = max(Q, U), f = null, N ? U = slLib._getDimentionOfMultiLineText(g.slice(T + 1).join(''), this).width : (o = slLib.getNearestBreakIndex(a.substr(n), j, this), U = q(a.substr(n, o || 1)), g.length < n + o && (g = g.concat(a.substr(g.length, n + o - g.length).split('')), X = g.length - 1));\n        }\n      }\n\n      return Q = max(Q, U), da.text = g.join(''), da.width = Q, da.height = V, da;\n    }\n\n    for (k = a.replace(slLib.spanAdditionRegx, '$2'), a = a.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer), a = a.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>'), J.innerHTML = a, u = J[documentSupport.childRetriverFn](documentSupport.childRetriverString), (v = 0, w = u.length); v < w; v += 1) {\n      A = u[v], (documentSupport.noClassTesting || slLib.classNameReg.test(A.className)) && (B = A.innerHTML, '' !== B && (' ' === B ? aa = $.length : '-' === B && (_ = $.length), $.push({\n        spaceIdx: aa,\n        dashIdx: _,\n        elem: A\n      }), W.push(B)));\n    }\n\n    if (X = 0, e = $.length, z = e && $[0].elem.offsetWidth, z > b || !e) return da.text = '', da.width = da.oriTextWidth = da.height = da.oriTextHeight = 0, da;\n    if (z > j && !this._showNoEllipses && (j = b - 2 * M, j > z ? Y = '..' : (j = b - M, j > z ? Y = '.' : (j = 0, Y = ''))), r = $[0].elem.offsetLeft, s = $[0].elem.offsetTop, d) for (; X < e; X += 1) {\n      A = $[X].elem, C = A.offsetLeft - r + A.offsetWidth, C > j && (!G && (G = X), J.offsetWidth > b && (F = X, X = e));\n    } else for (; X < e; X += 1) {\n      A = $[X].elem, D = A.offsetHeight + (A.offsetTop - s), C = A.offsetLeft - r + A.offsetWidth, E = null, C > j ? (!G && (G = X), C > b && (S = $[X].spaceIdx, R = $[X].dashIdx, S > T ? ($[S].elem.innerHTML = '<br/>', T = S) : R > T ? ($[R].elem.innerHTML = R === X ? '<br/>-' : '-<br/>', T = R) : A.parentNode.insertBefore(E = doc.createElement('br'), A), A.offsetHeight + A.offsetTop > c ? (E ? E.parentNode.removeChild(E) : T == R ? $[R].elem.innerHTML = '-' : $[S].elem.innerHTML = ' ', F = X, X = e) : G = null)) : D > c && (F = X, X = e);\n    }\n\n    if (F < e) {\n      for (da.isTruncated = !0, G = G ? G : F, X = e - 1; X >= G; X -= 1) {\n        A = $[X].elem, A.parentNode.removeChild(A);\n      }\n\n      for (; 0 <= X; X -= 1) {\n        A = $[X].elem, slLib.classNameBrReg.test(A.className) ? A.parentNode.removeChild(A) : X = 0;\n      }\n    }\n\n    return da.text = J.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&'), da.isTruncated && (da.text += Y, da.tooltext = k), (da.height = J.offsetHeight, da.width = J.offsetWidth, da);\n  }\n\n  return da.error = new Error('Body Tag Missing!'), da;\n}, SmartLabelManager.prototype.getOriSize = function () {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n  var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!this._init) return !1;\n  var d,\n      e,\n      f,\n      g,\n      h,\n      j,\n      k = 0,\n      m = 0,\n      n = {},\n      o = c.hasHTMLTag,\n      p = c.hasOnlyBrTag;\n  if ('undefined' == typeof o && (o = slLib.xmlTagRegEx.test(a)), 'undefined' == typeof p && (p = slLib._hasOnlyBRTag(a)), this.requireDiv = o && !p, c.cleanText || (a = a.replace(slLib.ltgtRegex, function (a) {\n    return '&lt;' === a ? '<' : '>';\n  })), this._updateStyle(), j = this._container, p) return slLib._getDimentionOfMultiLineText(a, this);\n  if (!b) return this._calCharDimWithCache(a);\n  if (o) return j.innerHTML = a, {\n    width: j.offsetWidth,\n    height: j.offsetHeight\n  };\n\n  for (d = a.split(''), g = 0, h = d.length; g < h; g++) {\n    e = d[g], f = this._calCharDimWithCache(e, !1, d.length), m = max(m, f.height), k += f.width, n[e] = f.width;\n  }\n\n  return {\n    width: round(k),\n    height: m,\n    detailObj: n\n  };\n}, SmartLabelManager.prototype.dispose = function () {\n  return this._init ? (this._containerManager && this._containerManager.dispose && this._containerManager.dispose(), delete this._container, delete this._context, delete this._cache, delete this._containerManager, delete this._containerObj, delete this.id, delete this.style, delete this.parentContainer, delete this._showNoEllipses, this) : this;\n};\nexport default SmartLabelManager;","map":null,"metadata":{},"sourceType":"module"}