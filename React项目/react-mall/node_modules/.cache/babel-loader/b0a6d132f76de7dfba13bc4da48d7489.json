{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\List\\\\EditClick\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport \"./Step/Add.less\";\nimport { Steps, Button, message, Form } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport StepOne from './Step/StepOne';\nimport StepTwo from './Step/StepTwo';\nimport StepThree from './Step/StepThree';\nvar Step = Steps.Step;\nvar steps = [{\n  title: '填写菜品信息',\n  content: '填写商品信息'\n}, {\n  title: '填写菜品促销',\n  content: 'Second-content'\n}, {\n  title: '填写商品属性',\n  content: 'Last-content'\n}];\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp() {\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Temp).call(this));\n    _this.state = {\n      current: 0,\n      storeData: null,\n      categoryName: null,\n      data: {\n        comment: \"\",\n        loading: \"\",\n        name: \"\",\n        price: \"\",\n        promot: \"\",\n        radioButton: \"\",\n        select: \"\",\n        switch1: false,\n        switch2: false,\n        textarea: \"\",\n        upload: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"next\",\n    value: function next() {\n      var current = this.state.current + 1;\n      this.setState({\n        current: current\n      });\n      setTimeout(function () {// this.props.form.setFieldsValue(this.state.data)\n      }, 2000);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      var current = this.state.current - 1;\n      this.setState({\n        current: current\n      }); //回调函数\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setState({\n                  storeData: this.props.location.state.ele,\n                  categoryName: this.props.location.state.categoryName\n                }, function () {\n                  console.log(_this2.props);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this3 = this;\n\n      // 表单内容提交组件,校验并获取一组输入域的值与 Error;\n      // 获取编辑后内容判断是否有变化没有有变化发出请求;\n      // 修改数据库,更新redux; (重新获取数据)\n      this.props.form.validateFields(function (errors, values) {\n        if (!!errors) {\n          message.error('验证失败!'); // console.log(this.state)\n\n          return;\n        }\n\n        var storeData = Object.assign({}, _this3.state.storeData, _this3.props.form.getFieldsValue());\n        console.log(storeData); // this.setState({\n        //     storeData\n        // })\n\n        _this3.next();\n      });\n    }\n  }, {\n    key: \"selest\",\n    value: function selest(params) {\n      //控制步骤条对应内容\n      if (this.state.storeData) {\n        console.log(this.state.storeData);\n\n        switch (params) {\n          case 1:\n            return React.createElement(StepOne, {\n              props: this.props,\n              handleSubmit: this.handleSubmit,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            });\n            break;\n\n          case 0:\n            return React.createElement(StepTwo, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            });\n            break;\n\n          case 2:\n            return React.createElement(StepThree, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            });\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var current = this.state.current;\n      return React.createElement(\"main\", {\n        className: \"food-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"food-add-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Steps, {\n        current: current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" \", steps.map(function (item) {\n        return React.createElement(Step, {\n          key: item.title,\n          title: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      }), \" \"), \" \", React.createElement(\"div\", {\n        className: \"form-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" \", \" \", this.selest(current), \" \"), \" \", React.createElement(\"div\", {\n        className: \"steps-action\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \" \", current > 0 && React.createElement(Button, {\n        style: {\n          textAlign: \"left\"\n        },\n        onClick: function onClick() {\n          return _this4.prev();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"\\u4E0A\\u4E00\\u6B65\\uFF0C \", steps[current].title, \" \"), \" \", current === steps.length - 1 && React.createElement(Button, {\n        style: {},\n        type: \"primary\",\n        onClick: function onClick(e) {\n          message.success('Processing complete!');\n\n          _this4.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \" \\u5B8C\\u6210\\uFF0C \\u63D0\\u4EA4\\u83DC\\u54C1 \"), \" \", current < steps.length - 1 && React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          margin: \"0 auto\",\n          textAlign: \"right\" // position: \"absolute\",\n          // right: -15,\n          // top: -32\n\n        },\n        onClick: function onClick(e) {\n          _this4.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \" \\u4E0B\\u4E00\\u6B65\\uFF0C \", steps[current].title, \" \") // 下一步，填写商品信息\n      ), \" \"), \" \");\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar createForm = Form.create;\nTemp = createForm()(Temp); //将Form表单,通过props获取到各种方法\n\nexport default withRouter(Temp);","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\List\\EditClick\\Edit.js"],"names":["React","Component","Steps","Button","message","Form","withRouter","StepOne","StepTwo","StepThree","Step","steps","title","content","Temp","state","current","storeData","categoryName","data","comment","loading","name","price","promot","radioButton","select","switch1","switch2","textarea","upload","setState","setTimeout","props","location","ele","console","log","e","form","validateFields","errors","values","error","Object","assign","getFieldsValue","next","params","handleSubmit","map","item","selest","textAlign","prev","length","success","margin","createForm","create"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from 'react'\r\nimport \"./Step/Add.less\";\r\nimport {\r\n    Steps,\r\n    Button,\r\n    message,\r\n    Form\r\n} from 'antd';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport StepOne from './Step/StepOne';\r\nimport StepTwo from './Step/StepTwo';\r\nimport StepThree from './Step/StepThree';\r\n\r\nconst Step = Steps.Step;\r\nconst steps = [{\r\n    title: '填写菜品信息',\r\n    content: '填写商品信息',\r\n}, {\r\n    title: '填写菜品促销',\r\n    content: 'Second-content',\r\n}, {\r\n    title: '填写商品属性',\r\n    content: 'Last-content',\r\n}];\r\n\r\nclass Temp extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            current: 0,\r\n            storeData: null,\r\n            categoryName: null,\r\n            data: {\r\n                comment: \"\",\r\n                loading: \"\",\r\n                name: \"\",\r\n                price: \"\",\r\n                promot: \"\",\r\n                radioButton: \"\",\r\n                select: \"\",\r\n                switch1: false,\r\n                switch2: false,\r\n                textarea: \"\",\r\n                upload: \"\"\r\n            }\r\n        };\r\n    }\r\n    next() {\r\n        const current = this.state.current + 1;\r\n        this.setState({\r\n            current\r\n        })\r\n        setTimeout(() => {\r\n            // this.props.form.setFieldsValue(this.state.data)\r\n        }, 2000);\r\n    }\r\n\r\n    prev() {\r\n        const current = this.state.current - 1;\r\n        this.setState({\r\n            current\r\n        }) //回调函数\r\n\r\n    }\r\n    async componentDidMount() {\r\n        await this.setState({\r\n            storeData: this.props.location.state.ele,\r\n            categoryName: this.props.location.state.categoryName\r\n        }, () => {\r\n            console.log(this.props)\r\n        })\r\n\r\n\r\n        // this.props.form.setFieldsValue( this.state.data) \r\n    }\r\n\r\n    handleSubmit(e) {\r\n        // 表单内容提交组件,校验并获取一组输入域的值与 Error;\r\n        // 获取编辑后内容判断是否有变化没有有变化发出请求;\r\n        // 修改数据库,更新redux; (重新获取数据)\r\n        this.props.form.validateFields((errors, values) => {\r\n            if (!!errors) {\r\n                message.error('验证失败!')\r\n                // console.log(this.state)\r\n                return;\r\n            }\r\n            let storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue())\r\n            console.log(storeData)\r\n            // this.setState({\r\n            //     storeData\r\n            // })\r\n            this.next()\r\n        });\r\n    };\r\n\r\n    selest(params) { //控制步骤条对应内容\r\n        if (this.state.storeData) {\r\n            console.log(this.state.storeData)\r\n            switch (params) {\r\n                case 1:\r\n                    return <StepOne props = {\r\n                        this.props\r\n                    }\r\n                    handleSubmit = {\r\n                        this.handleSubmit\r\n                    }\r\n                    state = {\r\n                        this.state\r\n                    }\r\n                    />;\r\n                    break;\r\n                case 0:\r\n                    return <StepTwo props = {\r\n                        this.props\r\n                    }\r\n                    state = {\r\n                        this.state\r\n                    }\r\n                    />;\r\n                    break;\r\n                case 2:\r\n                    return <StepThree props = {\r\n                        this.props\r\n                    }\r\n                    state = {\r\n                        this.state\r\n                    }\r\n                    />;\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            current\r\n        } = this.state;\r\n\r\n        return ( <\r\n            main className = \"food-add\" >\r\n            <\r\n            div className = \"food-add-wrap\" >\r\n            <\r\n            Steps current = {\r\n                current\r\n            } > {\r\n                steps.map(item => < Step key = {\r\n                        item.title\r\n                    }\r\n                    title = {\r\n                        item.title\r\n                    }\r\n                    />\r\n                )\r\n            } <\r\n            /Steps> <\r\n            div className = \"form-wrap\" > {\r\n                /* 分步组件 */ } {\r\n                this.selest(current)\r\n            } <\r\n            /div> <\r\n            div className = \"steps-action\"\r\n            style = {\r\n                {\r\n                    textAlign: \"center\"\r\n                }\r\n            } > {\r\n                current > 0 &&\r\n                ( <\r\n                    Button style = {\r\n                        {\r\n                            textAlign: \"left\"\r\n                        }\r\n                    }\r\n                    onClick = {\r\n                        () => this.prev()\r\n                    } >\r\n                    上一步， {\r\n                        steps[current].title\r\n                    } <\r\n                    /Button>\r\n                )\r\n            } {\r\n                current === steps.length - 1 &&\r\n                    < Button\r\n                style = {\r\n                    {}\r\n                }\r\n                type = \"primary\"\r\n                onClick = {\r\n                    (e) => {\r\n                        message.success('Processing complete!')\r\n                        this.handleSubmit(e)\r\n                    }\r\n                } > 完成， 提交菜品 < /Button>\r\n            } {\r\n                current < steps.length - 1 &&\r\n                    < Button\r\n                type = \"primary\"\r\n                style = {\r\n                    {\r\n                        margin: \"0 auto\",\r\n                        textAlign: \"right\",\r\n                        // position: \"absolute\",\r\n                        // right: -15,\r\n                        // top: -32\r\n                    }\r\n                }\r\n                onClick = {\r\n                    (e) => {\r\n                        this.handleSubmit(e)\r\n                    }\r\n                } > 下一步， {\r\n                    steps[current].title\r\n                } < /Button>\r\n                // 下一步，填写商品信息\r\n            }\r\n\r\n            <\r\n            /div> <\r\n            /div> <\r\n            /main>\r\n        )\r\n    }\r\n}\r\n\r\nconst createForm = Form.create;\r\nTemp = createForm()(Temp); //将Form表单,通过props获取到各种方法\r\nexport default withRouter(Temp)"]},"metadata":{},"sourceType":"module"}