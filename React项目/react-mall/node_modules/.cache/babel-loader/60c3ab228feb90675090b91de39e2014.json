{"ast":null,"code":"import _toConsumableArray from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { hashify, getMouseCoordinate } from '../../../fc-core/src/lib';\n\nvar BLACK_LIST = {\n  treemap: !0,\n  scatter: !0,\n  bubble: !0,\n  errorscatter: !0,\n  errorline: !0,\n  errorbar2d: !0,\n  candlestick: !0,\n  stackedcolumn3d: !0,\n  stackedbar3d: !0,\n  mscolumnline3d: !0,\n  mscombi3d: !0,\n  mscolumn3dlinedy: !0,\n  stackedcolumn3dline: !0,\n  stackedcolumn3dlinedy: !0\n},\n    isBlackListed = function isBlackListed(a) {\n  return BLACK_LIST[a.getName().toLowerCase()];\n},\n    reduceToolTexts = function reduceToolTexts(a, b) {\n  return \"\".concat(a, \"<div style=\\\"margin: 0;\\\">\").concat(b, \"</div>\");\n},\n    countHoveredPlots = function countHoveredPlots(a, b) {\n  return b.hovered ? a + 1 : a;\n},\n    extractColor = function extractColor(a) {\n  var b = '#000000';\n  return b = a.anchorProps ? a.anchorProps.borderColor : a.originalPlotColor || a.plotColor || a.color, b;\n};\n\nfunction _enableConsolidatedToolTip(a) {\n  var b = a.sender.getFromEnv('chart'),\n      c = this,\n      d = b.config.tooltipgrayoutcolor,\n      e = b.config.plotcolorintooltip,\n      f = b.getFromEnv('toolTipController'),\n      g = b.getDatasets().sort(function (c, a) {\n    return a.getJSONIndex() - c.getJSONIndex();\n  }),\n      h = b.getFromEnv('consolidated-tooltip'),\n      i = getMouseCoordinate(a.sender.getFromEnv('chart-container'), a.originalEvent, b),\n      j = i.chartX,\n      k = i.chartY,\n      l = !1,\n      m = g.map(function (a) {\n    return a.getPlotInCategoryAt(j, k);\n  }).filter(Boolean),\n      n = m.reduce(countHoveredPlots, 0),\n      o = m.map(function (a) {\n    var b = a.pointObj.config,\n        c = b.finalTooltext || b.toolText,\n        f = extractColor(b);\n    return 0 < n ? !l && a.hovered ? (c = \"<div style=\\\"display: inline-block;\\\">\".concat(c, \"</div>\"), l = !0) : (f = d, c = \"<div style=\\\"color: \".concat(hashify(d), \"; display: inline-block;\\\">\").concat(c, \"</div>\")) : c = \"<div style=\\\"display: inline-block;\\\">\".concat(c, \"</div>\"), e ? \"<div style=\\\"color: \".concat(hashify(f), \"; display: inline-block;\\\">&#9632&nbsp;</div>\").concat(c) : c;\n  }),\n      p = _toConsumableArray(o).reverse().reduce(reduceToolTexts, '');\n\n  return c.isWithinCanvas(j, k) ? void (p ? h ? f.draw(a.originalEvent, p, h) : b.addToEnv('consolidated-tooltip', f.draw(a.originalEvent, p)) : h && f.hide(h)) : void (h && f.hide(h));\n}\n\nfunction _disableConsolidatedToolTip(a) {\n  var b = a.sender.getFromEnv('chart'),\n      c = b.getFromEnv('toolTipController'),\n      d = b.getFromEnv('consolidated-tooltip');\n  d && c.hide(d);\n}\n\nfunction drawConsolidatedToolTip(a) {\n  var b = this.apiInstance,\n      c = b.getDatasets().sort(function (c, a) {\n    return c.getJSONIndex() - a.getJSONIndex();\n  }),\n      d = b.config.plotcolorintooltip,\n      e = b.getFromEnv('toolTipController'),\n      f = b.getFromEnv('consolidated-tooltip'),\n      g = c.map(function (b) {\n    var c = b.components.data;\n    return c[a] && c[a];\n  }).filter(Boolean),\n      h = g[0] && {\n    x: g[0].config._Px - g[0]._width,\n    y: g[0].config._Py,\n    width: g[0].config._width\n  },\n      i = g.map(function (a) {\n    var b = a.config,\n        c = b.finalTooltext || b.toolText,\n        e = extractColor(b);\n    return d ? \"<div style=\\\"color: \".concat(hashify(e), \"; display: inline-block;\\\">&#9632&nbsp;</div><div style=\\\"display: inline-block;\\\">\").concat(c, \"</div>\") : \"<div style=\\\"display: inline-block;\\\">\".concat(c, \"</div>\");\n  }).reduce(reduceToolTexts, '');\n  i && h ? f ? e.drawAt(h.x, h.y, i, f) : b.addToEnv('consolidated-tooltip', e.drawAt(h.x, h.y, i)) : f && e.hide(f);\n}\n\nfunction consolidatedTooltipExt(a) {\n  a.addEventListener('predraw', function (a) {\n    var b;\n\n    if (a.sender.getType && 'chartAPI' === a.sender.getType() && !isBlackListed(a.sender)) {\n      b = a.sender;\n      var c = b.getChildren('canvas');\n      b.getFromEnv('chartInstance').drawConsolidatedToolTip = drawConsolidatedToolTip, c && c.forEach(function (a) {\n        return b.config.drawTrendRegion && b.config.showtooltip ? void (!a.getState('consolidatedTooltipEventListenerAttached') && b.config.showtooltip && (a.addEventListener('fc-mouseover', _enableConsolidatedToolTip), a.addEventListener('fc-mousemove', _enableConsolidatedToolTip), a.addEventListener('fc-mouseout', _disableConsolidatedToolTip), a.setState('consolidatedTooltipEventListenerAttached', !0))) : (a.removeEventListener('fc-mouseover', _enableConsolidatedToolTip), a.removeEventListener('fc-mousemove', _enableConsolidatedToolTip), a.removeEventListener('fc-mouseout', _disableConsolidatedToolTip), void a.setState('consolidatedTooltipEventListenerAttached', !1));\n      });\n    }\n  });\n}\n\nexport default {\n  extension: consolidatedTooltipExt,\n  name: 'ConsolidatedToolTip',\n  type: 'extension',\n  requiresFusionCharts: !0\n};","map":null,"metadata":{},"sourceType":"module"}