{"ast":null,"code":"import { addListener, removeListener } from '../../../fc-core/src/event-api';\nvar UNDEF,\n    logger,\n    DEFAULT_OUTPUT_HELPER = 'text',\n    DEBUGGER = 'debugger';\nlogger = {\n  outputHelpers: {\n    text: function text(b, c) {\n      var a = (b.sender.id || b.sender).toString();\n      logger.outputTo('#' + b.eventId + ' [' + a + '] fired \"' + b.eventType + '\" event. ' + ('error' === b.eventType || 'warning' === b.eventType ? c.message : ''));\n    },\n    event: function event(b, c) {\n      this.outputTo(b, c);\n    },\n    verbose: function verbose(b, c) {\n      logger.outputTo(b.eventId, b.sender.id, b.eventType, c);\n    }\n  },\n  outputHandler: function outputHandler(b, c) {\n    'function' != typeof logger.outputTo || logger.currentOutputHelper(b, c);\n  },\n  currentOutputHelper: UNDEF,\n  outputTo: UNDEF,\n  enabled: !1\n}, logger.currentOutputHelper = logger.outputHelpers.text;\nexport default {\n  extension: function extension(a) {\n    a['debugger'] = {\n      outputFormat: function outputFormat(a) {\n        return !!(a && 'function' == typeof a.toLowerCase && 'function' == typeof logger.outputHelpers[a = a.toLowerCase()]) && (logger.currentOutputHelper = logger.outputHelpers[a], !0);\n      },\n      outputTo: function outputTo(b) {\n        'function' == typeof b ? logger.outputTo = b : null === b && (a[DEBUGGER].enable(!1), delete logger.outputTo);\n      },\n      enable: function enable(b, c, d) {\n        var e;\n        return 'object' == typeof b && 1 === arguments.length && (e = b, b = e.state, c = e.outputTo, d = e.outputFormat), 'function' == typeof b && ('string' == typeof c && (2 === arguments.length || e) && (d = c), c = b, b = !0), 'boolean' == typeof b && b !== logger.enabled && (logger.enabled = b, logger.enabled ? addListener('*', logger.outputHandler) : removeListener('*', logger.outputHandler)), 'function' == typeof c && (logger.outputTo = c), a[DEBUGGER].outputFormat(d), logger.enabled;\n      }\n    };\n  },\n  name: 'Debugger',\n  type: 'extension',\n  requiresFusionCharts: !0\n};","map":null,"metadata":{},"sourceType":"module"}