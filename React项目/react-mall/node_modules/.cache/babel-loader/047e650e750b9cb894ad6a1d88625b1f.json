{"ast":null,"code":"import { appliedCSS } from '../../lib';\nexport default function (a) {\n  var b,\n      c,\n      d,\n      e = a.eve,\n      f = a._g,\n      g = a.fn,\n      h = a.el,\n      j = /[, ]+/,\n      i = /\\B([A-Z]{1})/g;\n  c = function c(a) {\n    this.styleSheet = '', this.rules = {}, this.ns = a || '';\n  }, d = c.prototype, d.getSheet = function () {\n    var b = this.node;\n    return this.styleSheet = d.getStyleSheet('fusioncharts-raphael-stylesheet'), this.styleSheet || (b = this.node = f.doc.createElement('style'), b.setAttribute('id', a.format('raphael-stylesheet-{0}', a._oid++)), b.setAttribute('type', 'text/css'), b.setAttribute('title', 'fusioncharts-raphael-stylesheet'), (f.doc.head || f.doc.getElementsByTagName('head')[0]).appendChild(this.node), this.styleSheet = d.getStyleSheet('fusioncharts-raphael-stylesheet')), this.styleSheet;\n  }, d.getStyleSheet = function (a) {\n    for (var b, c = f.doc.styleSheets, d = c.length; d--;) {\n      if (b = c[d], b.title === a) return b;\n    }\n  }, d.applyCSSRule = function (a, b) {\n    var c,\n        d,\n        e = this.styleSheet;\n    if (!e) if (a && b) e = this.getSheet();else return;\n    c = e.rules || e.cssRules || {}, d = c.length || 0, e.insertRule ? e.insertRule(a + '{' + b + '}', d) : e.addRule && e.addRule(a, b, d);\n  }, d.removeCSS = function (a) {\n    var b,\n        c = this.styleSheet,\n        d = c.rules || c.cssRules || {},\n        e = d.length || 0;\n\n    for (a = a || this.ns; e--;) {\n      b = d[e], new RegExp(a).test(b.selectorText) && (c.removeRule ? c.removeRule(e) : c.deleteRule(e));\n    }\n  }, d.destroy = function () {\n    this.removeCSS(), delete this.node, delete this.styleSheet, delete this.ns, delete this.rules;\n  }, d.clear = function () {\n    this.removeCSS(), this.rules = {};\n  }, d.add = function (a, b, c) {\n    var d,\n        e = '',\n        f = this.rules[a] || (this.rules[a] = {}),\n        g = c ? '' : '\\t',\n        h = c ? ':' : ': ';\n\n    for (d in b) {\n      (f[d] = b[d]) && (e += g + d.replace(i, '-$1').toLowerCase() + h + f[d] + ';');\n    }\n\n    this.applyCSSRule(a, e);\n  }, d.render = function () {\n    this.setCssText();\n  }, d.setCssText = function (a) {\n    var b,\n        c,\n        d = a ? '' : '\\t',\n        e = a ? ':' : ': ',\n        f = '',\n        g = '';\n\n    for (b in this.rules) {\n      for (c in f = '', g = b.replace(/(^|\\,)/g, '$1' + this.ns + ' '), b = this.rules[b], b) {\n        b[c] && (f += d + c.replace(i, '-$1').toLowerCase() + e + b[c] + ';');\n      }\n\n      this.applyCSSRule(g, f);\n    }\n  }, e.on('raphael.new', function () {\n    this._stylesheet = this._stylesheet || new c(), this.cssNamespace('');\n  }), e.on('raphael.remove', function () {\n    this._stylesheet && this._stylesheet.destroy(), delete this._stylesheet;\n  }), g.cssNamespace = function (b) {\n    return arguments.length && (this._stylesheet.ns = a.format('{0}#raphael-paper-{1}', b && b + ' ' || '', this.id)), this._stylesheet.ns;\n  }, g.cssAddRule = function (a, b) {\n    if (1 === arguments.length && 'object' == typeof a) {\n      for (var c in a) {\n        this.cssAddRule(c, a[c]);\n      }\n\n      return this;\n    }\n\n    return this._stylesheet.add(a, b), this;\n  }, g.cssRender = function () {\n    return a.svg && this._stylesheet.render(), this;\n  }, g.cssClear = function () {\n    return this._stylesheet.clear(), this;\n  }, a.ca['class'] = function (b) {\n    var c,\n        d,\n        e,\n        f,\n        g = this,\n        h = g.node,\n        j = g.paper,\n        k = '.' + b,\n        l = j._stylesheet && j._stylesheet.rules,\n        m = g.parent,\n        n = g.attrs,\n        o = {};\n    if (a.svg) b = b || '', h.setAttribute('class', 'group' === g.type && g._id ? 'raphael-group-' + g.id + '-' + g._id + ' ' + b : b);else if (a.vml && (c = h.className = 'group' === g.type ? b && g._id + ' ' + b || g._id : 'rvml ' + b, h.className = c ? c + ' fusioncharts-div' : 'fusioncharts-div', k && l)) {\n      for (f in d = l[k], d) {\n        'color' === f && 'text' === g.type && (f = 'fill'), n[f] || (o[f] = d[f]);\n      }\n\n      for (; m && m.attr;) {\n        if (e = m.attr('class')) for (f in k = '.' + e + ' ' + k, d = l[k], d) {\n          'color' === f && 'text' === g.type && (f = 'fill'), n[f] || o[f] || (o[f] = d[f]);\n        }\n        m = m.parent;\n      }\n\n      g.css(o);\n    }\n  }, h.css = function (c, d, f) {\n    var g, h, k, l, m, n, o;\n    if (this.removed) return this;\n\n    if (this.styles || (this.styles = {}), d === b && a.is(c, 'string')) {\n      for (g = c.split(j), k = {}, (n = 0, o = g.length); n < o; n++) {\n        c = g[n], c in this.styles && (k[c] = this.styles[c]);\n      }\n\n      return o - 1 ? k : k[g[0]];\n    }\n\n    if (d === b && a.is(c, 'array')) {\n      for (k = {}, n = 0, o = c.length; n < o; n++) {\n        k[c[n]] = this.styles(c[n]);\n      }\n\n      return k;\n    }\n\n    for (n in d === b ? c && a.is(c, 'object') && (h = c) : (h = {}, h[c] = d), m = {}, h) {\n      if (l = n.replace(/\\B([A-Z]{1})/g, '-$1').toLowerCase(), a._availableAttrs.hasOwnProperty(l) || 'color' === l) {\n        'color' === l && 'text' === this.type && (l = 'fill'), m[l] = h[n], m.dirty = !0;\n        continue;\n      }\n\n      e('raphael.css.' + l + '.' + this.id, this, h[n], l), this.node.style[l] = h[n], this.styles[l] = h[n];\n    }\n\n    for (n = 0, o = this.followers.length; n < o; n++) {\n      this.followers[n].el.attr(h);\n    }\n\n    return m.hasOwnProperty('dirty') && (delete m.dirty, f && (m['_do-not-tune'] = !0), this.attr(m)), this;\n  }, h.removeCSS = function (b) {\n    var c,\n        d,\n        e,\n        f = this;\n    if (b || (b = appliedCSS), this.removed) return this;\n    if (a.is(b, 'string') && (b = b.split(',')), a.is(b, 'array')) for (e = b.length, d = 0; d < e; d++) {\n      c = b[d].replace(/\\B([A-Z]{1})/g, '-$1').toLowerCase(), f.node.removeAttribute(c), f.node.style[c] = '';\n    }\n    return this;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}