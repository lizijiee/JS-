{"ast":null,"code":"var _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Home\\\\Echarts\\\\Echarts.js\";\nvar _Recharts = Recharts,\n    AreaChart = _Recharts.AreaChart,\n    Area = _Recharts.Area,\n    XAxis = _Recharts.XAxis,\n    YAxis = _Recharts.YAxis,\n    CartesianGrid = _Recharts.CartesianGrid,\n    Tooltip = _Recharts.Tooltip;\nvar data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nvar StackedAreaChart = React.createClass({\n  displayName: \"StackedAreaChart\",\n  render: function render() {\n    return React.createElement(AreaChart, {\n      width: 600,\n      height: 400,\n      data: data,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"uv\",\n      stackId: \"1\",\n      stroke: \"#8884d8\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"pv\",\n      stackId: \"1\",\n      stroke: \"#82ca9d\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"amt\",\n      stackId: \"1\",\n      stroke: \"#ffc658\",\n      fill: \"#ffc658\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n});\nReactDOM.render(React.createElement(StackedAreaChart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), document.getElementById('container')); // import React, { PureComponent } from 'react';\n// import {\n//   LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n// } from 'recharts';\n// import './Echart.less'\n// const data = [\n//   {\n//     date: '2018-02-21', '销售额': 2000, '订单': 70, \n//   },\n//   {\n//     date: '2018-02-22', '销售额': 1700, '订单': 58, \n//   },\n//   {\n//     date: '2018-02-23', '销售额': 1680, '订单': 80,\n//   },\n//   {\n//     date: '2018-02-24', '销售额': 2780, '订单': 98, \n//   },\n//   {\n//     date: '2018-02-25', '销售额': 1790, '订单': 78, \n//   },\n//   {\n//     date: '2018-02-26', '销售额': 2490, '订单': 99, \n//   },\n//   {\n//     date: '2018-02-27', '销售额': 1870, '订单': 80, \n//   },\n// ];\n// export default class Example extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/zjb47e83/';\n//   render() {\n//     return (\n//       <LineChart\n//         width={600}\n//         height={400}\n//         data={data}\n//         margin={{\n//           top: 50, right: 20, left: 35,bottom:40\n//         }}\n//         >\n//         <CartesianGrid strokeDasharray=\"5 5\" />\n//         <XAxis dataKey=\"date\" />\n//         <YAxis yAxisId=\"left\" />\n//         <YAxis yAxisId=\"right\" orientation=\"right\" />\n//         <Tooltip />\n//         <Legend />\n//         <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"销售额\" stroke=\"#8884d8\" activeDot={{ r: 6 }} />\n//         <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"订单\" stroke=\"#82ca9d\" activeDot={{ r: 6 }} />\n//       </LineChart>\n//     );\n//   }\n// }\n\n{}\n/* <Legend /> */\n// const data = [\n//   {\n//     date: '2018-02-21', '销售额': 2000, '订单': 70, \n//   },\n//   {\n//     date: '2018-02-22', '销售额': 1700, '订单': 58, \n//   },\n//   {\n//     date: '2018-02-23', '销售额': 1680, '订单': 80,\n//   },\n//   {\n//     date: '2018-02-24', '销售额': 2780, '订单': 98, \n//   },\n//   {\n//     date: '2018-02-25', '销售额': 1790, '订单': 78, \n//   },\n//   {\n//     date: '2018-02-26', '销售额': 2490, '订单': 99, \n//   },\n//   {\n//     date: '2018-02-27', '销售额': 1870, '订单': 80, \n//   },\n// ];","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Home\\Echarts\\Echarts.js"],"names":["Recharts","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","data","name","uv","pv","amt","StackedAreaChart","React","createClass","render","top","right","left","bottom","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["const {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip} = Recharts;\r\nconst data = [\r\n      {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n      {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n      {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n      {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n      {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n      {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n      {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\nconst StackedAreaChart = React.createClass({\r\n\trender () {\r\n  \treturn (\r\n    \t<AreaChart width={600} height={400} data={data}\r\n            margin={{top: 10, right: 30, left: 0, bottom: 0}}>\r\n        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n        <XAxis dataKey=\"name\"/>\r\n        <YAxis/>\r\n        <Tooltip/>\r\n        <Area type='monotone' dataKey='uv' stackId=\"1\" stroke='#8884d8' fill='#8884d8' />\r\n        <Area type='monotone' dataKey='pv' stackId=\"1\" stroke='#82ca9d' fill='#82ca9d' />\r\n        <Area type='monotone' dataKey='amt' stackId=\"1\" stroke='#ffc658' fill='#ffc658' />\r\n      </AreaChart>\r\n    );\r\n  }\r\n})\r\n\r\nReactDOM.render(\r\n  <StackedAreaChart />,\r\n  document.getElementById('container')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { PureComponent } from 'react';\r\n// import {\r\n//   LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n// } from 'recharts';\r\n// import './Echart.less'\r\n\r\n// const data = [\r\n//   {\r\n//     date: '2018-02-21', '销售额': 2000, '订单': 70, \r\n//   },\r\n//   {\r\n//     date: '2018-02-22', '销售额': 1700, '订单': 58, \r\n//   },\r\n//   {\r\n//     date: '2018-02-23', '销售额': 1680, '订单': 80,\r\n//   },\r\n//   {\r\n//     date: '2018-02-24', '销售额': 2780, '订单': 98, \r\n//   },\r\n//   {\r\n//     date: '2018-02-25', '销售额': 1790, '订单': 78, \r\n//   },\r\n//   {\r\n//     date: '2018-02-26', '销售额': 2490, '订单': 99, \r\n//   },\r\n//   {\r\n//     date: '2018-02-27', '销售额': 1870, '订单': 80, \r\n//   },\r\n// ];\r\n\r\n// export default class Example extends PureComponent {\r\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/zjb47e83/';\r\n\r\n//   render() {\r\n//     return (\r\n//       <LineChart\r\n//         width={600}\r\n//         height={400}\r\n//         data={data}\r\n//         margin={{\r\n//           top: 50, right: 20, left: 35,bottom:40\r\n//         }}\r\n//         >\r\n//         <CartesianGrid strokeDasharray=\"5 5\" />\r\n//         <XAxis dataKey=\"date\" />\r\n//         <YAxis yAxisId=\"left\" />\r\n//         <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n//         <Tooltip />\r\n\r\n//         <Legend />\r\n//         <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"销售额\" stroke=\"#8884d8\" activeDot={{ r: 6 }} />\r\n//         <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"订单\" stroke=\"#82ca9d\" activeDot={{ r: 6 }} />\r\n//       </LineChart>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n{/* <Legend /> */}\r\n\r\n// const data = [\r\n//   {\r\n//     date: '2018-02-21', '销售额': 2000, '订单': 70, \r\n//   },\r\n//   {\r\n//     date: '2018-02-22', '销售额': 1700, '订单': 58, \r\n//   },\r\n//   {\r\n//     date: '2018-02-23', '销售额': 1680, '订单': 80,\r\n//   },\r\n//   {\r\n//     date: '2018-02-24', '销售额': 2780, '订单': 98, \r\n//   },\r\n//   {\r\n//     date: '2018-02-25', '销售额': 1790, '订单': 78, \r\n//   },\r\n//   {\r\n//     date: '2018-02-26', '销售额': 2490, '订单': 99, \r\n//   },\r\n//   {\r\n//     date: '2018-02-27', '销售额': 1870, '订单': 80, \r\n//   },\r\n// ];"]},"metadata":{},"sourceType":"module"}