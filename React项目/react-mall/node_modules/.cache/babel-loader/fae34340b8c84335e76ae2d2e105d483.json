{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n//说明： 哪里使用那里引入此文件;\nimport * as types from '../constants/actionTypes'; //注释在此文件中\n\nexport var setMemberInfo = function setMemberInfo(data) {\n  return {\n    type: types.SET_DATA_MEMBER,\n    data: data\n  };\n};\nexport var getFoodInfo = function getFoodInfo(data) {\n  return {\n    type: types.GET_DATA_FOOD,\n    data: data\n  };\n};\nexport var fetchMemmberInfo = function fetchMemmberInfo(subreddit) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:2000/pers/member\", {\n                  method: 'GET'\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (data) {\n                  return dispatch(setMemberInfo(data));\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchFoodInfo = function fetchFoodInfo() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"http://localhost:2000/food/list\", {\n                  method: 'GET'\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (data) {\n                  return dispatch(getFoodInfo(data));\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n/*  fetch(`http://localhost:2000/pers?act=deleteClerks`,\r\n  {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(obj)\r\n  }\r\n)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    // 后台返回数据后页面是否渲染???\r\n    this.setState({\r\n      data: data.data,\r\n      storeData: data.data\r\n    })\r\n  }) */\n\n/* \r\nexport const getList=()=>{\r\n    //action可以是一个函数，有dispatch参数\r\n return (dispatch)=>{\r\n     axios.get('/api/headerList.json').then((res)=>{\r\n         const data=res.data;\r\n         dispatch(listInitAction(data.data))\r\n     }).catch(()=>{\r\n         console.log('error');\r\n     });\r\n }    \r\n};\r\n */","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\redux\\actions\\actions.js"],"names":["types","setMemberInfo","data","type","SET_DATA_MEMBER","getFoodInfo","GET_DATA_FOOD","fetchMemmberInfo","subreddit","dispatch","fetch","method","then","res","json","fetchFoodInfo"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB,C,CAAmD;;AAEnD,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAK;AACpCC,IAAAA,IAAI,EAAEH,KAAK,CAACI,eADwB;AAEpCF,IAAAA,IAAI,EAAJA;AAFoC,GAAL;AAAA,CAA1B;AAIP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAH,IAAI;AAAA,SAAK;AAClCC,IAAAA,IAAI,EAAEH,KAAK,CAACM,aADsB;AAElCJ,IAAAA,IAAI,EAAJA;AAFkC,GAAL;AAAA,CAAxB;AAKP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC5BC,KAAK,sCAAsC;AACrDC,kBAAAA,MAAM,EAAE;AAD6C,iBAAtC,CAAL,CAGXC,IAHW,CAGN,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBAHG,EAIXF,IAJW,CAIN,UAAAV,IAAI;AAAA,yBAAIO,QAAQ,CAACR,aAAa,CAACC,IAAD,CAAd,CAAZ;AAAA,iBAJE,CAD4B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC;AAOP,OAAO,IAAMa,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAMN,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACrBC,KAAK,oCAAoC;AAClDC,kBAAAA,MAAM,EAAE;AAD0C,iBAApC,CAAL,CAGVC,IAHU,CAGL,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBAHE,EAIVF,IAJU,CAIL,UAAAV,IAAI;AAAA,yBAAIO,QAAQ,CAACJ,WAAW,CAACH,IAAD,CAAZ,CAAZ;AAAA,iBAJC,CADqB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAWP;;;;;;;;;;;;;;;;;;AAkBA","sourcesContent":["//说明： 哪里使用那里引入此文件;\r\nimport * as types from '../constants/actionTypes'; //注释在此文件中\r\n\r\nexport const setMemberInfo = data => ({\r\n  type: types.SET_DATA_MEMBER,\r\n  data\r\n})\r\nexport const getFoodInfo = data => ({\r\n  type: types.GET_DATA_FOOD,\r\n  data\r\n})\r\n\r\nexport const fetchMemmberInfo = subreddit =>async  dispatch => { //请求会员信息数据\r\n   return await fetch(`http://localhost:2000/pers/member`, {\r\n      method: 'GET',\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => dispatch(setMemberInfo(data)))\r\n}\r\nexport const fetchFoodInfo = () =>  async dispatch => { //请求会员信息数据\r\n  return await fetch(`http://localhost:2000/food/list`, {\r\n      method: 'GET',\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => dispatch(getFoodInfo(data)))\r\n}\r\n\r\n\r\n\r\n\r\n/*  fetch(`http://localhost:2000/pers?act=deleteClerks`,\r\n  {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(obj)\r\n  }\r\n)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    // 后台返回数据后页面是否渲染???\r\n    this.setState({\r\n      data: data.data,\r\n      storeData: data.data\r\n    })\r\n  }) */\r\n\r\n/* \r\nexport const getList=()=>{\r\n    //action可以是一个函数，有dispatch参数\r\n return (dispatch)=>{\r\n     axios.get('/api/headerList.json').then((res)=>{\r\n         const data=res.data;\r\n         dispatch(listInitAction(data.data))\r\n     }).catch(()=>{\r\n         console.log('error');\r\n     });\r\n }    \r\n};\r\n */"]},"metadata":{},"sourceType":"module"}