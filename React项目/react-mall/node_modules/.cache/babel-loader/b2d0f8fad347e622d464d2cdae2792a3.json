{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\Add\\\\Step\\\\Step.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\nimport './Add.less';\n/* \r\n    antd 表单使用\r\n    resetFields() 重置表单内数据\r\n\r\n    getFieldsValue([\"name\"],).name  校验并获取一组输入域的值与 Error(用于提交之前)\r\n    name为ID也为Key值，函数返回值为对象\r\n    前两个参数都为数组， [fieldNames: string[]], [options: object] \r\n\r\n     validateFieldsAndScroll([\"name\"])//直接调用就可以\t  参考 validateFields\r\n     如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围（建议用在Submit）\r\n\r\n     isFieldValidating\t判断一个输入控件是否在校验状态（可以扔到help里面）\r\n     两种报错方法 validateFields和rule中的min判断条件\r\n     min默认为 name is require 使用message进行修改\r\n     \r\n*/\n\nvar StepOne =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepOne, _Component);\n\n  function StepOne() {\n    _classCallCheck(this, StepOne);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StepOne).apply(this, arguments));\n  }\n\n  _createClass(StepOne, [{\n    key: \"add\",\n    value: function add() {\n      var num = 0;\n      num++;\n      console.log(num);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n    } // componentWillReceiveProps() {\n    // console.log(this.props.form.getFieldError(\"name\"))\n    //返回值     [\"输入1时显示报错\"]\n    //          [\"菜品名至少为 1个字符\"]  message \n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.content);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"111\");\n    }\n  }]);\n\n  return StepOne;\n}(Component);\n\nexport default StepOne;","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\Add\\Step\\Step.js"],"names":["React","Component","Button","Form","Input","Select","InputNumber","StepOne","num","console","log","props","onRef","content"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,WAAtC,QAAyD,MAAzD;AACA,OAAO,YAAP;AAKA;;;;;;;;;;;;;;;;;IAgBMC,O;;;;;;;;;;;;;0BACC;AACJ,UAAIC,GAAG,GAAC,CAAR;AACAA,MAAAA,GAAG;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;;;wCAEmB;AAElB,WAAKG,KAAL,CAAWC,KAAX,CAAiB,IAAjB;AACD,K,CACD;AACA;AACA;AACA;AACA;;;;6BACS;AACNH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,OAAvB;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAED;;;;EArBmBZ,S;;AAuBtB,eAAeM,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\r\nimport './Add.less';\r\n\r\n\r\n\r\n \r\n/* \r\n    antd 表单使用\r\n    resetFields() 重置表单内数据\r\n\r\n    getFieldsValue([\"name\"],).name  校验并获取一组输入域的值与 Error(用于提交之前)\r\n    name为ID也为Key值，函数返回值为对象\r\n    前两个参数都为数组， [fieldNames: string[]], [options: object] \r\n\r\n     validateFieldsAndScroll([\"name\"])//直接调用就可以\t  参考 validateFields\r\n     如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围（建议用在Submit）\r\n\r\n     isFieldValidating\t判断一个输入控件是否在校验状态（可以扔到help里面）\r\n     两种报错方法 validateFields和rule中的min判断条件\r\n     min默认为 name is require 使用message进行修改\r\n     \r\n*/\r\nclass StepOne extends Component {\r\n  add(){\r\n   let num=0;\r\n   num++\r\n   console.log(num)\r\n  }\r\n\r\n  componentDidMount( ){\r\n    \r\n    this.props.onRef(this)\r\n  }\r\n  // componentWillReceiveProps() {\r\n  // console.log(this.props.form.getFieldError(\"name\"))\r\n  //返回值     [\"输入1时显示报错\"]\r\n  //          [\"菜品名至少为 1个字符\"]  message \r\n  // };\r\n  render() {\r\n     console.log(this.props.content)\r\n\r\n    return <div>111</div>\r\n \r\n  }\r\n}\r\nexport default StepOne"]},"metadata":{},"sourceType":"module"}