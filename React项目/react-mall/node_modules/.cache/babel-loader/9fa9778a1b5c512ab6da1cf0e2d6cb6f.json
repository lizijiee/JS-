{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Person\\\\Clerk\\\\EditClick\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { Form, Select, Modal, Button, Input, message } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Edit.less';\nvar Option = Select.Option;\nvar confirm = Modal.confirm;\nvar FormItem = Form.Item;\nvar ButtonGroup = Button.Group;\nvar title = [\"姓名\", \"身份证号\", \"出生年月\", \"年龄\", \"入职时间\", \"职位\"];\n\nvar success = function success() {\n  message.success('The information is changed');\n};\n\nvar error = function error() {\n  message.error('Operation fails');\n};\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp() {\n    _classCallCheck(this, Temp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Temp).apply(this, arguments));\n  }\n\n  _createClass(Temp, [{\n    key: \"handlePageClick\",\n    // userExists(rule, value, callback) {\n    //   //当做validator函数来用,用来作为判断条件\n    //   if (!value) {\n    //     callback();\n    //   } else {\n    //     setTimeout(() => {\n    //       if (value === '宫爆鸡丁') {\n    //         callback([new Error('抱歉，该菜名已被占用。')]);\n    //       } else {\n    //         callback();\n    //       }\n    //     }, 800);\n    //   }\n    // };\n\n    /* \r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.form.validateFields((err, values) => {\r\n        console.log(err, values)\r\n        // if (!err) {\r\n        //   console.log('Received values of form: ', values);\r\n        // }\r\n      });\r\n    }\r\n     */\n    value: function handlePageClick() {\n      console.log(this.props.history.go(-1));\n    }\n  }, {\n    key: \"isObjectValueEqual\",\n    value: function isObjectValueEqual(a, b) {\n      //1.判断数据提交前后两对象value数值是否相等,\n      //2.相等的话返回true,进行数据请求,不想等的话返回不相等的key和value新对象\n      //3.取对象a和b的属性名\n      var aProps = Object.keys(a); // let bProps = Object.keys(b);  a、b的key值相同\n      //判断属性名的length是否一致\n      //表单两次提交内容对比不需要对length进行判断\n      //循环取出属性名，再判断属性值是否一致\n\n      for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        if (a[propName] + \"\" !== b[propName] + \"\") {\n          //因为数据类型不一致所以转一下，不对数据类型进行判断\n          return false; //如果进入这里下面return不会执行\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"showConfirm\",\n    value: function showConfirm() {\n      var _this = this;\n\n      var opts = {\n        method: \"POST\",\n        //请求方法\n        body: formData,\n        //请求体\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      confirm({\n        wrapClassName: '提示',\n        title: '提示:',\n        content: '是否提交数据',\n        okText: '确认',\n        cancelText: '取消',\n        icon: \"info-circle\",\n        bodyStyle: {\n          \".ant-modal-confirm-btns\": {\n            marginTop: 0\n          }\n        },\n        onOk: function () {\n          var _onOk = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (_this.isObjectValueEqual(_this.props.form.getFieldsValue(), _this.props.location.state[0])) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return fetch(\"http://localhost:2000/pers/clerks\", {\n                      method: 'POST'\n                    }).then(function (res) {\n                      return res.json();\n                    }).then(function (data) {\n                      // this.setState({ ...data })\n                      console.log(data);\n                    });\n\n                  case 3:\n                    _context.next = 7;\n                    break;\n\n                  case 5:\n                    //进行修改直接跳转到列表页\n                    success();\n\n                    _this.props.history.push({\n                      //退回到列表页\n                      pathname: \"/pers/clerks\"\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          function onOk() {\n            return _onOk.apply(this, arguments);\n          }\n\n          return onOk;\n        }()\n        /* \r\n        onCancel() {  //取消回调函数\r\n          console.log('Cancel');\r\n        }, \r\n        */\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //路由携带过来的数据\n      // console.log(this.props.location.state[0])\n      //获取对象中的所有keys数值;\n      var arr = Object.keys(this.props.location.state[0]); //对所有keys数值进行过滤;\n\n      var TempArr = arr.filter(function (currentValue, index) {\n        return currentValue != \"num\" && currentValue != \"sex\" && currentValue != \"state\";\n      });\n      var _this$props$form = this.props.form,\n          getFieldProps = _this$props$form.getFieldProps,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldValidating = _this$props$form.isFieldValidating,\n          getFieldDecorator = _this$props$form.getFieldDecorator;\n      var formItemLayout = {\n        //样式\n        // span是整体左移 pull是label左移   \n        labelCol: {\n          span: 6,\n          pull: 1\n        },\n        //左侧 offset:3\n        wrapperCol: {\n          span: 10\n        } //input 长度控制\n\n      };\n      return React.createElement(\"section\", {\n        className: \"clerk-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u72B6\\u6001:\"\n      }, formItemLayout, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), getFieldDecorator(\"state\", {\n        initialValue: this.props.location.state[0].state\n      })(React.createElement(Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\\u5728\\u804C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"\\u5728\\u804C\"), React.createElement(Option, {\n        value: \"\\u79BB\\u804C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"\\u79BB\\u804C\")))), React.createElement(FormItem, Object.assign({\n        label: \"\\u6027\\u522B:\"\n      }, formItemLayout, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), getFieldDecorator(\"sex\", {\n        initialValue: this.props.location.state[0].sex\n      })(React.createElement(Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\\u7537\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"\\u7537\"), React.createElement(Option, {\n        value: \"\\u5973\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"\\u5973\"), React.createElement(Option, {\n        value: \"Other\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"\\u4F60\\u8FD8\\u60F3\\u9009\\u5565,\\u53D8\\u6001\")))), title.map(function (ele, index) {\n        return React.createElement(FormItem, Object.assign({}, formItemLayout, {\n          key: index,\n          label: ele,\n          hasFeedback: true,\n          help: isFieldValidating(TempArr[index]) ? '校验中...' : (getFieldError(TempArr[index]) || []).join(', '),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }), getFieldDecorator(TempArr[index], {\n          initialValue: _this2.props.location.state[0][TempArr[index]],\n          rules: [{\n            required: true,\n            min: 1,\n            message: '输入内容至少为 1 个字符',\n            pattern: new RegExp(/.+/g) // { validator: this.userExists }\n\n          }]\n        })(React.createElement(Input, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        })));\n      }), React.createElement(FormItem, {\n        style: {\n          display: \"inline-block\",\n          marginRight: 10,\n          marginTop: 10,\n          marginLeft: 160,\n          fontSize: 13,\n          borderRadius: 5,\n          textIndent: \"100px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Button, {\n        ghost: \"true\",\n        type: \"primary\",\n        onClick: this.handlePageClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\")), React.createElement(FormItem, {\n        style: {\n          display: \"inline-block\",\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          display: \"inline-block\"\n        },\n        onClick: this.showConfirm.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\")))));\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar WrappedDemo = Form.create({\n  name: 'validate_other'\n})(Temp);\nexport default withRouter(WrappedDemo); // export default Temp","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Person\\Clerk\\EditClick\\Edit.js"],"names":["React","Component","Form","Select","Modal","Button","Input","message","Link","withRouter","Option","confirm","FormItem","Item","ButtonGroup","Group","title","success","error","Temp","console","log","props","history","go","a","b","aProps","Object","keys","i","length","propName","opts","method","body","formData","headers","wrapClassName","content","okText","cancelText","icon","bodyStyle","marginTop","onOk","isObjectValueEqual","form","getFieldsValue","location","state","fetch","then","res","json","data","push","pathname","arr","TempArr","filter","currentValue","index","getFieldProps","getFieldError","isFieldValidating","getFieldDecorator","formItemLayout","labelCol","span","pull","wrapperCol","initialValue","sex","map","ele","join","rules","required","min","pattern","RegExp","display","marginRight","marginLeft","fontSize","borderRadius","textIndent","handlePageClick","bind","showConfirm","WrappedDemo","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  Form, Select, Modal, Button, Input, message\r\n} from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './Edit.less';\r\n\r\nconst { Option } = Select;\r\nconst confirm = Modal.confirm;\r\nconst FormItem = Form.Item;\r\nconst ButtonGroup = Button.Group;\r\nconst title = [\"姓名\", \"身份证号\", \"出生年月\", \"年龄\", \"入职时间\", \"职位\"];\r\nconst success = () => {\r\n  message.success('The information is changed');\r\n};\r\n\r\nconst error = () => {\r\n  message.error('Operation fails');\r\n};\r\n\r\nclass Temp extends Component {\r\n  // userExists(rule, value, callback) {\r\n  //   //当做validator函数来用,用来作为判断条件\r\n  //   if (!value) {\r\n  //     callback();\r\n  //   } else {\r\n  //     setTimeout(() => {\r\n  //       if (value === '宫爆鸡丁') {\r\n  //         callback([new Error('抱歉，该菜名已被占用。')]);\r\n  //       } else {\r\n  //         callback();\r\n  //       }\r\n  //     }, 800);\r\n  //   }\r\n  // };\r\n  /* \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(err, values)\r\n      // if (!err) {\r\n      //   console.log('Received values of form: ', values);\r\n      // }\r\n    });\r\n  }\r\n   */\r\n  handlePageClick() {\r\n    console.log(this.props.history.go(-1))\r\n  }\r\n  isObjectValueEqual(a, b) {\r\n    //1.判断数据提交前后两对象value数值是否相等,\r\n    //2.相等的话返回true,进行数据请求,不想等的话返回不相等的key和value新对象\r\n    //3.取对象a和b的属性名\r\n    let aProps = Object.keys(a);\r\n    // let bProps = Object.keys(b);  a、b的key值相同\r\n    //判断属性名的length是否一致\r\n    //表单两次提交内容对比不需要对length进行判断\r\n\r\n    //循环取出属性名，再判断属性值是否一致\r\n    for (var i = 0; i < aProps.length; i++) {\r\n      var propName = aProps[i];\r\n      if (a[propName] + \"\" !== b[propName] + \"\") {\r\n        //因为数据类型不一致所以转一下，不对数据类型进行判断\r\n        return false;//如果进入这里下面return不会执行\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  showConfirm() {\r\n    let opts = {\r\n      method:\"POST\",   //请求方法\r\n      body:formData,   //请求体\r\n　　　　　headers: {\r\n 　　　　 'Accept': 'application/json',\r\n 　　　　 'Content-Type': 'application/json',\r\n　　　　 },\r\n  }\r\n    confirm({\r\n      wrapClassName: '提示',\r\n      title: '提示:',\r\n      content: '是否提交数据',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      icon: \"info-circle\",\r\n      bodyStyle: {\r\n        \".ant-modal-confirm-btns\": { marginTop: 0 }\r\n      },\r\n      onOk: async () => { // 箭头函数解决this\r\n        if (!this.isObjectValueEqual(this.props.form.getFieldsValue(), this.props.location.state[0])) {//表单内容修改后,进入判断。 \r\n          //思路：把num=？ 传入后台在后台进行查找相应的内容         \r\n          await fetch(`http://localhost:2000/pers/clerks`, {\r\n            method: 'POST'\r\n          })\r\n            .then(res => res.json()).then(\r\n              data => {\r\n                // this.setState({ ...data })\r\n                console.log(data)\r\n              })\r\n        } else { //进行修改直接跳转到列表页\r\n          success();\r\n          this.props.history.push({  //退回到列表页\r\n            pathname: \"/pers/clerks\",\r\n          });\r\n        }\r\n      },\r\n      /* \r\n      onCancel() {  //取消回调函数\r\n        console.log('Cancel');\r\n      }, \r\n      */\r\n    })\r\n  }\r\n\r\n  render() {\r\n    //路由携带过来的数据\r\n    // console.log(this.props.location.state[0])\r\n\r\n    //获取对象中的所有keys数值;\r\n    let arr = Object.keys(this.props.location.state[0])\r\n\r\n    //对所有keys数值进行过滤;\r\n    let TempArr = arr.filter((currentValue, index) => currentValue != \"num\" && currentValue != \"sex\" && currentValue != \"state\")\r\n    const { getFieldProps, getFieldError, isFieldValidating, getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {//样式\r\n      // span是整体左移 pull是label左移   \r\n      labelCol: { span: 6, pull: 1 },//左侧 offset:3\r\n      wrapperCol: { span: 10 },//input 长度控制\r\n    };\r\n    return (\r\n      <section className=\"clerk-info\">\r\n        <div className=\"wrap\">\r\n          <Form >\r\n            <FormItem\r\n              label=\"状态:\"\r\n              {...formItemLayout}\r\n              required\r\n            >\r\n              {getFieldDecorator(\"state\", {\r\n                initialValue: this.props.location.state[0].state\r\n              })(\r\n                <Select\r\n                >\r\n                  <Option value=\"在职\">在职</Option>\r\n                  <Option value=\"离职\">离职</Option>\r\n                </Select>\r\n              )}\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              label=\"性别:\"\r\n              {...formItemLayout}\r\n              required\r\n            >\r\n              {getFieldDecorator(\"sex\", {\r\n                initialValue: this.props.location.state[0].sex\r\n              })(\r\n                <Select\r\n                >\r\n                  <Option value=\"男\">男</Option>\r\n                  <Option value=\"女\">女</Option>\r\n                  <Option value=\"Other\" disabled>你还想选啥,变态</Option>\r\n                </Select>\r\n              )}\r\n            </FormItem>\r\n\r\n            {title.map((ele, index) =>\r\n              <FormItem\r\n                {...formItemLayout}\r\n                key={index}\r\n                label={ele}\r\n                hasFeedback\r\n                help={isFieldValidating(TempArr[index]) ? '校验中...' : (getFieldError(TempArr[index]) || []).join(', ')}\r\n              >\r\n                {getFieldDecorator(TempArr[index],\r\n                  {\r\n                    initialValue: this.props.location.state[0][TempArr[index]],\r\n                    rules: [{\r\n                      required: true,\r\n                      min: 1,\r\n                      message: '输入内容至少为 1 个字符',\r\n                      pattern: new RegExp(/.+/g),\r\n                      // { validator: this.userExists }\r\n                    }]\r\n                  })(\r\n                    <Input />\r\n                  )}\r\n              </FormItem>\r\n            )}\r\n            <FormItem\r\n              style={{\r\n                display: \"inline-block\", marginRight: 10, marginTop: 10, marginLeft: 160\r\n                , fontSize: 13, borderRadius: 5, textIndent: \"100px\"\r\n              }}>\r\n              <Button\r\n                ghost=\"true\"\r\n                type=\"primary\"\r\n                onClick={this.handlePageClick.bind(this)}\r\n              >\r\n                返回</Button>\r\n            </FormItem>\r\n            <FormItem\r\n              style={{ display: \"inline-block\", marginTop: 10 }}\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ display: \"inline-block\" }}\r\n                onClick={this.showConfirm.bind(this)}\r\n              >\r\n                提交</Button>\r\n            </FormItem>\r\n          </Form >\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\nconst WrappedDemo = Form.create({ name: 'validate_other' })(Temp);\r\n\r\nexport default withRouter(WrappedDemo)\r\n// export default Temp"]},"metadata":{},"sourceType":"module"}