{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { pluckNumber, pluck } from '../../../../fc-core/src/lib';\nimport AnnotationShape from './annotation-shape';\n\nvar STRAIGHT_ANGLE_DEGREES = 180,\n    FULL_ANGLE_DEGREES = 360,\n    DEFAULT_RADIUS_INNER = 0,\n    DEFAULT_ANGLE_START = 0,\n    DEFAULT_ANGLE_END = 360,\n    DEFAULT_PAPER_WIDTH = 700,\n    DEFAULT_PAPER_HEIGHT = 350,\n    isPerfectCircle = function isPerfectCircle(a) {\n  return a.startAngle === DEFAULT_ANGLE_START && a.endAngle === DEFAULT_ANGLE_END;\n},\n    circleHasHole = function circleHasHole(a) {\n  return 0 < a.innerRadius || 0 < a.innerYRadius;\n};\n\nfunction toRadian(a) {\n  return a * (Math.PI / STRAIGHT_ANGLE_DEGREES);\n}\n\nvar CircleAnnotation =\n/*#__PURE__*/\nfunction (_AnnotationShape) {\n  _inherits(CircleAnnotation, _AnnotationShape);\n\n  function CircleAnnotation() {\n    _classCallCheck(this, CircleAnnotation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CircleAnnotation).apply(this, arguments));\n  }\n\n  _createClass(CircleAnnotation, [{\n    key: \"getName\",\n    value: function getName() {\n      return 'circle';\n    }\n  }, {\n    key: \"configureAttributes\",\n    value: function configureAttributes() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(CircleAnnotation.prototype), \"configureAttributes\", this).call(this, a);\n\n      var b = this,\n          c = b.rawConfig,\n          d = b.getFromEnv('chart'),\n          e = +d.getFromEnv('chartHeight'),\n          f = +d.getFromEnv('chartWidth'),\n          g = Math.max(e || DEFAULT_PAPER_WIDTH, f || DEFAULT_PAPER_HEIGHT),\n          h = Math.sqrt(g);\n      b.config.radius = c.radius, b.config.xRadius = pluckNumber(parseFloat(c.radius), parseFloat(c.xRadius), h), b.config.yRadius = pluckNumber(parseFloat(c.yRadius), b.config.xRadius), b.config.startAngle = pluckNumber(parseFloat(c.startAngle), DEFAULT_ANGLE_START), b.config.endAngle = pluckNumber(parseFloat(c.endAngle), DEFAULT_ANGLE_END), b.config.innerRadius = pluckNumber(parseFloat(c.innerRadius), DEFAULT_RADIUS_INNER), b.config.innerYRadius = pluckNumber(parseFloat(c.innerYRadius), b.config.innerRadius, DEFAULT_RADIUS_INNER), b.config.elementType = 'arc' === b.config.type ? 'ringpath' : isPerfectCircle(b.config) && !circleHasHole(b.config) ? 'ellipse' : 'ringpath';\n    }\n  }, {\n    key: \"updateAttr\",\n    value: function updateAttr() {\n      var a,\n          b,\n          c = this,\n          d = this.config,\n          e = d.calculatedAttrs,\n          f = c.getFromEnv('chart'),\n          g = +f.getFromEnv('chartHeight'),\n          h = +f.getFromEnv('chartWidth'),\n          i = c.getScaledVal(d.xRadius),\n          j = c.getScaledVal(d.yRadius),\n          k = c.getScaledVal(d.innerRadius),\n          l = c.getScaledVal(d.innerYRadius);\n\n      switch (pluck(d.radius) || (d.radius = h < g ? c.getScaledVal(h) : c.getScaledVal(g), d.radius *= .3, k > d.radius && (k += d.radius, d.radius = k - d.radius, k -= d.radius), i = j = d.radius, l = k), d.elementType) {\n        case 'ringpath':\n          b = [pluckNumber(e.x, c.getScaledVal(d.x, !0)), pluckNumber(e.y, c.getScaledVal(d.y, !1)), i, k, toRadian(FULL_ANGLE_DEGREES - d.endAngle), toRadian(FULL_ANGLE_DEGREES - d.startAngle), j, l], a = {\n            ringpath: b\n          };\n          break;\n\n        default:\n          a = {\n            cx: pluckNumber(e.x, c.getScaledVal(d.x, !0)),\n            cy: pluckNumber(e.y, c.getScaledVal(d.y, !1))\n          };\n      }\n\n      c._setConfig('attr', a);\n    }\n  }, {\n    key: \"_getAnnotationAttrs\",\n    value: function _getAnnotationAttrs() {\n      var a,\n          b = this,\n          c = b.config,\n          d = b._getConfig('attr') || {},\n          e = c.x,\n          f = c.y,\n          g = b.getScaledVal(c.xRadius),\n          h = b.getScaledVal(c.yRadius),\n          i = b.getScaledVal(c.innerRadius),\n          j = b.getScaledVal(c.innerYRadius),\n          k = c.startAngle,\n          l = c.endAngle,\n          m = c.borderColor,\n          n = c.borderThickness,\n          o = c.dashArrayStr,\n          p = c.color;\n\n      switch (c.xRadius || (g = 0), c.yRadius || (h = 0), d.fill = p, d.stroke = m, d['stroke-width'] = n, d['stroke-dasharray'] = o, b.config.elementType) {\n        case 'ringpath':\n          a = [b.getScaledVal(e, !0), b.getScaledVal(f, !1), g, i, toRadian(FULL_ANGLE_DEGREES - l), toRadian(FULL_ANGLE_DEGREES - k), h, j], d.ringpath = d.ringpath || a;\n          break;\n\n        default:\n          d.rx = g, d.ry = h, d.cx = 'undefined' == typeof d.cx ? b.getScaledVal(e, !0) : d.cx, d.cy = 'undefined' == typeof d.cy ? b.getScaledVal(f, !1) : d.cy;\n      }\n\n      return d;\n    }\n  }]);\n\n  return CircleAnnotation;\n}(AnnotationShape);\n\nexport default CircleAnnotation;","map":null,"metadata":{},"sourceType":"module"}