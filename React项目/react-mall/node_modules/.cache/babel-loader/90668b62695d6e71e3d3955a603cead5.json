{"ast":null,"code":"import { stubFN, pluckNumber, pluck } from '../../lib';\nexport default function (a) {\n  var b,\n      c = a._availableAttrs,\n      d = '',\n      e = ' ',\n      f = '_',\n      g = ':',\n      h = '; ',\n      i = '=\"',\n      j = '\"',\n      k = '>',\n      l = 'text',\n      m = 'text-anchor',\n      n = 'middle',\n      o = 'font-size',\n      p = ')',\n      q = 'stroke-opacity',\n      s = 'linear',\n      t = 'radial',\n      u = '\" id = \"',\n      v = '\">',\n      r = /^matrix\\(|\\)$/g,\n      w = /\\,/g,\n      y = /\\n|<br\\s*?\\/?>/ig,\n      z = /[^\\d\\.]/ig,\n      x = /[\\%\\(\\)\\s,\\xb0#]/g,\n      A = /group/ig,\n      B = /&/g,\n      C = /\"/g,\n      D = /'/g,\n      E = /</g,\n      F = />/g,\n      G = 0,\n      H = {\n    userSpaceOnUse: 'userSpaceOnUse',\n    objectBoundingBox: 'objectBoundingBox'\n  },\n      I = Math,\n      J = parseFloat,\n      K = I.max,\n      L = I.abs,\n      M = I.pow,\n      N = String,\n      O = /[, ]+/,\n      P = {\n    blur: function blur() {},\n    transform: function transform() {},\n    src: function src() {\n      var a = arguments[1],\n          b = a.attrs,\n          c = b.src;\n      a.attrSTR += ' xlink:href=\"' + c + j;\n    },\n    path: function path() {\n      var b = arguments[1],\n          c = b.attrs,\n          f = c.path;\n      f = a._pathToAbsolute(f || d), b.attrSTR += ' d=\"' + (f.toString && f.toString() || d).replace(w, e) + j;\n    },\n    gradient: function gradient(c, e, g) {\n      var h,\n          j,\n          k,\n          l,\n          m,\n          n,\n          o,\n          q,\n          w,\n          y,\n          z = c.attrs,\n          A = z.gradient,\n          B = s,\n          C = A,\n          D = .5,\n          E = .5,\n          F = d,\n          G = d,\n          O = d;\n\n      if (C = C.replace(x, f), !g[C]) {\n        if (A = N(A).replace(a._radial_gradient, function (a, b) {\n          var c, d, e, f, g, h, i, j;\n          return (b = b && b.split(',') || [], B = t, c = b[0], d = b[1], f = b[2], g = b[3], h = b[4], y = b[5], j = c && d, f && (w = /\\%/.test(f) ? f : J(f)), y === H.userSpaceOnUse) ? (j && (D = c, E = d), g && h && (o = g, q = h, !j && (D = o, E = q)), '') : (j && (D = J(c), E = J(d), e = 2 * (.5 < E) - 1, .25 < (i = M(D - .5, 2)) + M(E - .5, 2) && .25 > i && (E = I.sqrt(.25 - i) * e + .5) && .5 !== E && (E = E.toFixed(5) - 1e-5 * e)), g && h && (o = J(g), q = J(h), e = 2 * (.5 < q) - 1, .25 < (i = M(o - .5, 2)) + M(q - .5, 2) && .25 > i && (q = I.sqrt(.25 - i) * e + .5) && .5 !== q && (q = q.toFixed(5) - 1e-5 * e), !j && (D = o, E = q)), '');\n        }), A = A.split(/\\s*\\-\\s*/), B == s) {\n          if (h = A.shift(), h = -J(h), isNaN(h)) return null;\n          j = [0, 0, I.cos(a.rad(h)), I.sin(a.rad(h))], k = 1 / (K(L(j[2]), L(j[3])) || 1), j[2] *= k, j[3] *= k, 0 > j[2] && (j[0] = -j[2], j[2] = 0), 0 > j[3] && (j[1] = -j[3], j[3] = 0);\n        }\n\n        if (l = a._parseDots(A), !l) return null;\n\n        for (B == t ? (F = '<radialGradient fx = \"' + D + '\" fy = \"' + E + '\" cy = \"' + q + '\" cx = \"' + o + '\" r = \"' + w + '\" gradientUnits = \"' + y + u + C + v, G = '</radialGradient>') : (F = '<linearGradient x1 = \"' + j[0] + '\" y1 = \"' + j[1] + '\" x2 = \"' + j[2] + '\" y2 = \"' + j[3] + '\" gradientTransform =\"matrix(' + c.matrix.invert() + p + u + C + v, G = '</linearGradient>'), m = 0, n = l.length; m < n; m++) {\n          O += '<stop offset=\"' + (l[m].offset ? l[m].offset : m ? '100%' : '0%') + '\" stop-color=\"' + (l[m].color || '#fff') + '\" stop-opacity=\"' + (l[m].opacity === b ? 1 : l[m].opacity) + '\" />';\n        }\n\n        g[C] = !0, g.str += F + O + G;\n      }\n\n      e.attrSTR += ' fill=\"url(\\'#' + C + '\\')\"';\n    },\n    fill: function fill(b, c) {\n      var d,\n          e,\n          f = c.attrs,\n          i = f.fill;\n      b.attrs.gradient || (d = a.color(i), e = d.opacity, b.type === l ? c.styleSTR += 'fill:' + d + h + q + g + 0 + h : (c.attrSTR += ' fill=\"' + d + j, !f['fill-opacity'] && (e || 0 === e) && (c.attrSTR += ' fill-opacity=\"' + e + j)));\n    },\n    stroke: function stroke(b, c) {\n      var d,\n          e,\n          f = c.attrs,\n          g = f.stroke;\n      d = a.color(g), e = d.opacity, b.type !== l && (c.attrSTR += ' stroke=\"' + d + j, !f[q] && (e || 0 === e) && (c.attrSTR += ' stroke-opacity=\"' + e + j));\n    },\n    \"clip-rect\": function clipRect(a, b, c) {\n      var e = b.attrs,\n          g = N(e['clip-rect']),\n          h = g.split(O),\n          i = g.replace(x, f) + f + f + G++;\n      4 === h.length && (!c[i] && (c[i] = !0, c.str += '<clipPath id=\"' + i + '\"><rect x=\"' + h[0] + '\" y=\"' + h[1] + '\" width=\"' + h[2] + '\" height=\"' + h[3] + '\" transform=\"matrix(' + a.matrix.invert().toMatrixString().replace(r, d) + p + '\"/></clipPath>'), b.attrSTR += ' clip-path=\"url(#' + i + p + j);\n    },\n    cursor: function cursor() {\n      var a = arguments[1],\n          b = a.attrs,\n          c = b.cursor;\n      c && (a.styleSTR += 'cursor:' + c + h);\n    },\n    font: function font() {\n      var a = arguments[1],\n          b = a.attrs,\n          c = b.font;\n      a.styleSTR += 'font:' + c.replace(/\\\"/ig, e) + h;\n    },\n    \"font-size\": function fontSize() {\n      var a = arguments[1],\n          b = a.attrs,\n          c = pluck(b[o], '10');\n      c && c.replace && (c = c.replace(z, d)), a.styleSTR += 'font-size:' + c + 'px; ';\n    },\n    \"font-weight\": function fontWeight() {\n      var a = arguments[1],\n          b = a.attrs,\n          c = b['font-weight'];\n      a.styleSTR += 'font-weight:' + c + h;\n    },\n    \"font-family\": function fontFamily() {\n      var a = arguments[1],\n          b = a.attrs,\n          c = b['font-family'];\n      a.styleSTR += 'font-family:' + c + h;\n    },\n    \"line-height\": stubFN,\n    \"clip-path\": stubFN,\n    visibility: stubFN,\n    \"vertical-align\": stubFN,\n    \"text-anchor\": function textAnchor(a, b) {\n      var c = b.attrs,\n          d = c[m] || n;\n      a.type === l && (b.attrSTR += ' text-anchor=\"' + d + j);\n    },\n    title: stubFN,\n    text: function text() {\n      var a,\n          b,\n          c,\n          e,\n          f,\n          g,\n          h,\n          l,\n          m = arguments[1],\n          p = m.attrs,\n          q = p.text,\n          r = pluck(p[o], p['font'], '10'),\n          s = pluck(p['line-height']);\n\n      for (r && r.replace && (r = r.replace(z, d)), r = pluckNumber(r), s && s.replace && (s = s.replace(z, d)), s = pluckNumber(s, r && 1.2 * r), a = r ? .85 * r : .75 * s, b = p.x, c = pluck(p['vertical-align'], n).toLowerCase(), e = N(q).split(y), g = e.length, f = 0, h = c === 'top' ? a : c === 'bottom' ? a - s * g : a - .5 * (s * g); f < g; f++) {\n        m.textSTR += '<tspan ', l = (e[f] || d).replace(B, '&amp;').replace(C, '&quot;').replace(D, '&#39;').replace(E, '&lt;').replace(F, '&gt;'), m.textSTR += f ? 'dy=\"' + s + '\" x=\"' + b + '\" ' : 'dy=\"' + h + j, m.textSTR += k + l + '</tspan>';\n      }\n    }\n  },\n      Q = function Q(a, f) {\n    var n,\n        o,\n        p,\n        q = d,\n        s = {\n      attrSTR: d,\n      styleSTR: d,\n      textSTR: d,\n      attrs: a.attr()\n    },\n        t = a.isShadow,\n        u = d,\n        v = d,\n        w = s.attrs;\n\n    if (a.node.style.display !== 'none' && !t) {\n      for (n in w) {\n        n !== 'gradient' && (c[n] !== b || P[n]) && w[n] !== b && (P[n] ? P[n](a, s, f) : s.attrSTR += e + n + i + w[n] + j);\n      }\n\n      for (o in a.attrs.gradient && P.gradient(a, s, f), a.type === 'rect' && w.r && (s.attrSTR += ' rx=\"' + w.r + j + e + 'ry' + i + w.r + j), a.styles) {\n        s.styleSTR += o + g + a.styles[o] + h;\n      }\n\n      a.type === 'image' && (s.attrSTR += ' preserveAspectRatio=\"none\"'), a.type !== l || w[m] || P[m](a, s), a.bottom && (u = Q(a.bottom, f)), a.next && (v = Q(a.next, f)), p = a.type, p.match(A) && (p = 'g'), q += '<' + p + ' transform=\"matrix(' + a.matrix.toMatrixString().replace(r, d) + ')\" style=\"' + s.styleSTR + j + s.attrSTR + k + s.textSTR + u + '</' + p + k + v;\n    } else a.next && (q += Q(a.next, f));\n\n    return q;\n  };\n\n  a.vml && (a.fn.toSVG = function (a) {\n    var b = this,\n        c = d,\n        e = {\n      str: d\n    },\n        f = d;\n    return c = '<svg style=\"overflow: hidden; position: relative;\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"' + b.width + '\" version=\"1.1\" height=\"' + b.height + '\">', b.bottom && (f = Q(b.bottom, e)), c += '<defs>' + e.str + '</defs>' + f + '</svg>', a || (c = c.replace(/<image[^\\>]*\\>[^\\>]*\\>/gi, function (a) {\n      return a.match(/href=\\\"data\\:image/i) ? a : '';\n    })), c;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}