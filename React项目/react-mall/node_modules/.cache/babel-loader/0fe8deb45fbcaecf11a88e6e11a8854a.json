{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React, { Component } from 'react';\nimport { Layout, Icon, Breadcrumb, Switch } from 'antd';\nimport { Link } from 'react-router-dom';\nimport '../../index.css';\nimport PropTypes from \"prop-types\";\nvar Header = Layout.Header;\nvar breadcrumbNameMap = {\n  '/pers': '人员',\n  \"/pers/clerks\": \"店员\",\n  \"/pers/member\": \"会员\"\n};\n\nvar D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(D, _Component);\n\n  function D(props, context) {\n    var _this;\n\n    _classCallCheck(this, D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(D).call(this, props, context));\n    _this.state = {\n      pathSnippets: null,\n      extraBreadcrumbItems: null\n    };\n    return _this;\n  }\n\n  _createClass(D, [{\n    key: \"getPath\",\n    value: function getPath() {\n      var _this2 = this;\n\n      //对路径进行切分，存放到this.state.pathSnippets中\n      this.state.pathSnippets = this.context.router.history.location.pathname.split('/').filter(function (i) {\n        return i;\n      }); //将切分的路径读出来，形成面包屑，存放到this.state.extraBreadcrumbItems\n\n      this.state.extraBreadcrumbItems = this.state.pathSnippets.map(function (_, index) {\n        var url = \"/\".concat(_this2.state.pathSnippets.slice(0, index + 1).join('/'));\n        console.log(url);\n        return React.createElement(Breadcrumb.Item, {\n          key: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, breadcrumbNameMap[url]));\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //首次加载的时候调用，形成面包屑\n      this.getPath();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      //任何子页面发生改变，均可调用，完成路径切分以及形成面包屑\n      // console.log(this.getPath())\n      this.getPath();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Header, {\n        style: {\n          background: '#fff',\n          padding: 0,\n          height: \"60px\",\n          border: '1px solid #e6e6e6',\n          marginLeft: \"16px\"\n        },\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"trigger\",\n        type: this.props.collapsed ? 'menu-unfold' : 'menu-fold',\n        onClick: this.props.toggle,\n        style: {\n          lineHeight: \"60px\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        style: {\n          margin: '12px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.extraBreadcrumbItems)));\n    }\n  }]);\n\n  return D;\n}(Component);\n\nD.contextTypes = {\n  router: PropTypes.object\n};\nexport { D as default };","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Header\\Header.js"],"names":["React","Component","Layout","Icon","Breadcrumb","Switch","Link","PropTypes","Header","breadcrumbNameMap","D","props","context","state","pathSnippets","extraBreadcrumbItems","router","history","location","pathname","split","filter","i","map","_","index","url","slice","join","console","log","getPath","background","padding","height","border","marginLeft","collapsed","toggle","lineHeight","fontSize","margin","contextTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Layout , Icon,Breadcrumb,Switch} from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../index.css' \r\nimport PropTypes from \"prop-types\";\r\n\r\nlet { Header} = Layout;\r\n \r\nconst breadcrumbNameMap = {\r\n  '/pers': '人员',\r\n  \"/pers/clerks\":\"店员\",\r\n  \"/pers/member\":\"会员\",\r\n   \r\n};\r\n\r\n\r\nexport default class D extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n        pathSnippets: null,\r\n        extraBreadcrumbItems: null\r\n    }\r\n};\r\n  static contextTypes = {\r\n    router: PropTypes.object\r\n  }\r\n  getPath() {\r\n    //对路径进行切分，存放到this.state.pathSnippets中\r\n          this.state.pathSnippets = this.context.router.history.location.pathname.split('/').filter(i => i);\r\n     //将切分的路径读出来，形成面包屑，存放到this.state.extraBreadcrumbItems\r\n          this.state.extraBreadcrumbItems = this.state.pathSnippets.map((_, index) => {\r\n              const url = `/${this.state.pathSnippets.slice(0, index + 1).join('/')}`;\r\n              console.log(url)\r\n               return (\r\n                  <Breadcrumb.Item key={url}>\r\n                      <Link to={url}>\r\n                          {breadcrumbNameMap[url]}\r\n                      </Link>\r\n                  </Breadcrumb.Item>\r\n              );\r\n          });\r\n      }\r\n      componentWillMount() {\r\n        //首次加载的时候调用，形成面包屑\r\n              this.getPath();\r\n          }\r\n          componentWillReceiveProps(){\r\n        //任何子页面发生改变，均可调用，完成路径切分以及形成面包屑\r\n        // console.log(this.getPath())\r\n              this.getPath();\r\n          }\r\n  render() {\r\n     return (\r\n      <Header style={{ background: '#fff', padding: 0,height: \"60px\",border:'1px solid #e6e6e6',marginLeft:\"16px\"}}\r\n          className='border-bottom'\r\n          >\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n              onClick={this.props.toggle}\r\n              style={{lineHeight:\"60px\",fontSize:\"20px\"}}\r\n            />\r\n              <span>\r\n                <Breadcrumb style={{ margin: '12px 0' }}>\r\n                    {this.state.extraBreadcrumbItems}\r\n                </Breadcrumb> \r\n           </span>\r\n     </Header>\r\n    )\r\n  }\r\n}\r\n\r\n \r\n \r\n\r\n"]},"metadata":{},"sourceType":"module"}