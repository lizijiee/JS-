{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Tool from './tool';\nimport { pluck, pluckNumber, pluckFontSize, getSuggestiveRotation, POSITION_TOP, POSITION_MIDDLE, POSITION_BOTTOM, convertColor } from '../../lib';\nvar NORMAL = 'normal',\n    DEFAULT_FONT_SIZE = 10,\n    DEFAULT_BORDER_PADDING = 2,\n    TEXT_ALIGN_OPTIONS = {\n  left: 'start',\n  right: 'end',\n  center: 'middle'\n},\n    TEXT_V_ALIGN_OPTIONS = {\n  top: POSITION_TOP,\n  middle: POSITION_MIDDLE,\n  bottom: POSITION_BOTTOM\n},\n    TEXT_ROTATION_OPTIONS = {\n  0: '0',\n  1: '270',\n  right: '90',\n  cw: '90',\n  left: '270',\n  ccw: '270'\n};\n\nvar Label =\n/*#__PURE__*/\nfunction (_Tool) {\n  _inherits(Label, _Tool);\n\n  function Label() {\n    _classCallCheck(this, Label);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Label).apply(this, arguments));\n  }\n\n  _createClass(Label, [{\n    key: \"__setDefaultConfig\",\n    value: function __setDefaultConfig() {\n      _get(_getPrototypeOf(Label.prototype), \"__setDefaultConfig\", this).call(this);\n\n      var a = this.config;\n      a.font = 'Verdana, sans', a.rotateText = 0;\n    }\n  }, {\n    key: \"configureAttributes\",\n    value: function configureAttributes() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(Label.prototype), \"configureAttributes\", this).call(this, a);\n\n      var b = this,\n          c = b.config;\n      c.font = pluck(a.font, c.font), c.fontSize = pluckFontSize(a['font-size'], a.fontSize, DEFAULT_FONT_SIZE) * c.scale, c.fontStyle = pluck(a['font-style'], a.fontStyle, NORMAL), c.fontWeight = pluck(a['font-weight'], a.fontWeight, NORMAL), c.rotateText = pluckNumber(a.rotateText, c.rotateText), c.rotateAngle = parseFloat(TEXT_ROTATION_OPTIONS[pluck(a.rotateAngle && a.rotateAngle.toLowerCase(), '0')]);\n    }\n  }, {\n    key: \"getTextBound\",\n    value: function getTextBound() {\n      var a = this,\n          b = a.config,\n          c = [];\n      return b.showTextBound && (c = [convertColor(b.fill), b.borderColor, b.borderThickness, DEFAULT_BORDER_PADDING, b.radius]), c;\n    }\n  }, {\n    key: \"getLogicalSpace\",\n    value: function getLogicalSpace() {\n      var a,\n          b = this,\n          c = b.getFromEnv('smartLabel'),\n          _b$config = b.config,\n          d = _b$config.width,\n          e = _b$config.height,\n          f = _b$config.marginTop,\n          g = _b$config.marginLeft,\n          h = _b$config.marginRight,\n          i = _b$config.marginBottom;\n      return a = c.getOriSize(b.config.text, !1), d = a.width, e = a.height, {\n        width: d,\n        height: e,\n        marginTop: f,\n        marginLeft: g,\n        marginRight: h,\n        marginBottom: i\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var a,\n          b = this,\n          c = b.config;\n      c.text && (a = {\n        x: c.x,\n        y: c.y,\n        text: c.text,\n        fill: convertColor(c.labelFill),\n        \"text-bound\": b.getTextBound(),\n        \"font-style\": c.fontStyle,\n        \"font-weight\": c.fontWeight,\n        \"font-family\": c.font,\n        \"font-size\": c.fontSize,\n        \"text-anchor\": TEXT_ALIGN_OPTIONS[c.hAlign],\n        \"vertical-align\": TEXT_V_ALIGN_OPTIONS[c.vAlign],\n        transform: c.rotateText ? getSuggestiveRotation(c.rotateAngle, c.x, c.y) : 't0,0'\n      }, !c.isHidden && b.addGraphicalElement({\n        el: 'text',\n        attr: a,\n        component: b,\n        container: {\n          id: 'group',\n          label: 'group',\n          isParent: !0\n        },\n        label: 'text',\n        id: 'label'\n      }));\n    }\n  }]);\n\n  return Label;\n}(Tool);\n\nexport default Label;","map":null,"metadata":{},"sourceType":"module"}