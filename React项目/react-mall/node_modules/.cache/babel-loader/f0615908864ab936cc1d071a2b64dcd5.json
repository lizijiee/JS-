{"ast":null,"code":"import _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _breadcrumbNameMap,\n    _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Header\\\\Header.js\";\n\nimport React, { Component } from 'react';\nimport { Layout, Icon, Breadcrumb, Switch } from 'antd';\nimport { Link } from 'react-router-dom';\nimport '../../index.css';\nimport PropTypes from \"prop-types\";\nvar Header = Layout.Header;\nvar breadcrumbNameMap = (_breadcrumbNameMap = {\n  //配置面包屑\n  \"/\": \"首页\",\n  '/pers': '人员',\n  \"/pers/clerks\": \"店员列表\",\n  \"/pers/clerksDetails\": \"店员信息\",\n  \"/pers/member\": \"会员列表\"\n}, _defineProperty(_breadcrumbNameMap, \"/pers/clerksDetails\", \"店员信息\"), _defineProperty(_breadcrumbNameMap, \"/food\", \"菜品\"), _defineProperty(_breadcrumbNameMap, \"/food/listDetails\", \"修改菜品\"), _defineProperty(_breadcrumbNameMap, \"/food/list\", \"菜品列表\"), _defineProperty(_breadcrumbNameMap, \"/food/add\", \"添加菜品\"), _defineProperty(_breadcrumbNameMap, \"/orders\", \"订单\"), _defineProperty(_breadcrumbNameMap, \"/orders/list\", \"订单列表\"), _defineProperty(_breadcrumbNameMap, \"/orders/handle\", \"订单处理\"), _defineProperty(_breadcrumbNameMap, \"/orders/cause\", \"订单原因设置\"), _defineProperty(_breadcrumbNameMap, \"/sale\", \"营销\"), _defineProperty(_breadcrumbNameMap, \"/sale/home\", \"首页宣传\"), _defineProperty(_breadcrumbNameMap, \"/sale/new\", \"新品推荐\"), _defineProperty(_breadcrumbNameMap, \"/sale/hot\", \"热销推荐\"), _defineProperty(_breadcrumbNameMap, \"/sale/deals\", \"首页宣传\"), _defineProperty(_breadcrumbNameMap, \"/sale/combo\", \"套餐推荐\"), _defineProperty(_breadcrumbNameMap, \"/address\", \"项目地址\"), _breadcrumbNameMap);\n\nvar D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(D, _Component);\n\n  function D(props, context) {\n    var _this;\n\n    _classCallCheck(this, D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(D).call(this, props, context));\n    _this.state = {\n      pathSnippets: null,\n      extraBreadcrumbItems: null\n    };\n    return _this;\n  }\n\n  _createClass(D, [{\n    key: \"getPath\",\n    value: function getPath() {\n      var _this2 = this;\n\n      //对路径进行切分，存放到this.state.pathSnippets中\n      var pathname = this.context.router.history.location.pathname;\n      this.state.pathSnippets = pathname.split('/').filter(function (i) {\n        return i;\n      }); //[\"pers\", \"clerks\"]\n\n      if (pathname == \"/\" || pathname == \"/address\") {\n        this.state.extraBreadcrumbItems = React.createElement(Breadcrumb.Item, {\n          key: pathname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: pathname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, breadcrumbNameMap[pathname]));\n      } else {\n        // this.state.pathSnippets.unshift(\"/\")//改变原来数组\n        this.state.extraBreadcrumbItems = this.state.pathSnippets.map(function (_, index) {\n          var url = \"/\".concat(_this2.state.pathSnippets.slice(0, index + 1).join('/'));\n\n          if (_this2.state.pathSnippets.length != index + 1) {\n            return React.createElement(Breadcrumb.Item, {\n              key: url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: url,\n              style: {\n                color: \"black\",\n                fontWeight: 600\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, breadcrumbNameMap[url]));\n          } else {\n            return React.createElement(Breadcrumb.Item, {\n              key: url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69\n              },\n              __self: this\n            }, breadcrumbNameMap[url]));\n          }\n        });\n        this.state.extraBreadcrumbItems = [React.createElement(Breadcrumb.Item, {\n          key: \"home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          style: {\n            color: \"black\",\n            fontWeight: 600\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"\\u9996\\u9875\"))].concat(this.state.extraBreadcrumbItems);\n      } //将切分的路径读出来，形成面包屑，存放到this.state.extraBreadcrumbItems\n\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //首次加载的时候调用，形成面包屑\n      this.getPath();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      //任何子页面发生改变，均可调用，完成路径切分以及形成面包屑\n      // console.log(this.getPath())\n      this.getPath();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Header, {\n        style: {\n          background: '#fff',\n          padding: 0,\n          height: \"60px\",\n          border: '1px solid #e6e6e6',\n          marginLeft: \"16px\"\n        },\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"trigger\",\n        type: this.props.collapsed ? 'menu-unfold' : 'menu-fold',\n        onClick: this.props.toggle,\n        style: {\n          lineHeight: \"60px\",\n          fontSize: \"20px\",\n          marginTop: 2,\n          color: \"#303133!important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Breadcrumb, {\n        style: {\n          verticalAlign: \"middle\",\n          lineHeight: \"60px\",\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.extraBreadcrumbItems));\n    }\n  }]);\n\n  return D;\n}(Component);\n\nD.contextTypes = {\n  router: PropTypes.object\n};\nexport { D as default };","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Header\\Header.js"],"names":["React","Component","Layout","Icon","Breadcrumb","Switch","Link","PropTypes","Header","breadcrumbNameMap","D","props","context","state","pathSnippets","extraBreadcrumbItems","pathname","router","history","location","split","filter","i","map","_","index","url","slice","join","length","color","fontWeight","concat","getPath","background","padding","height","border","marginLeft","collapsed","toggle","lineHeight","fontSize","marginTop","verticalAlign","marginBottom","contextTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Layout, Icon, Breadcrumb, Switch } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../index.css'\r\nimport PropTypes from \"prop-types\";\r\nlet { Header } = Layout;\r\n\r\nconst breadcrumbNameMap = { //配置面包屑\r\n  \"/\": \"首页\",\r\n  '/pers': '人员',\r\n  \"/pers/clerks\": \"店员列表\",\r\n  \"/pers/clerksDetails\":\"店员信息\",\r\n  \"/pers/member\": \"会员列表\",\r\n  \"/pers/clerksDetails\":\"店员信息\",\r\n\r\n  \"/food\": \"菜品\",\r\n  \"/food/listDetails\": \"修改菜品\",\r\n  \"/food/list\": \"菜品列表\",\r\n  \"/food/add\": \"添加菜品\",\r\n  \"/orders\": \"订单\",\r\n  \"/orders/list\": \"订单列表\",\r\n  \"/orders/handle\": \"订单处理\",\r\n  \"/orders/cause\": \"订单原因设置\",\r\n  \"/sale\": \"营销\",\r\n  \"/sale/home\": \"首页宣传\",\r\n  \"/sale/new\": \"新品推荐\",\r\n  \"/sale/hot\": \"热销推荐\",\r\n  \"/sale/deals\": \"首页宣传\",\r\n  \"/sale/combo\": \"套餐推荐\",\r\n  \"/address\": \"项目地址\"\r\n};\r\nexport default class D extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      pathSnippets: null,\r\n      extraBreadcrumbItems: null\r\n    }\r\n  };\r\n  static contextTypes = {\r\n    router: PropTypes.object\r\n  }\r\n  getPath() {\r\n     //对路径进行切分，存放到this.state.pathSnippets中\r\n     let pathname = this.context.router.history.location.pathname\r\n     this.state.pathSnippets = pathname.split('/').filter(i => i);//[\"pers\", \"clerks\"]\r\n      if(pathname==\"/\"||pathname==\"/address\"){\r\n        this.state.extraBreadcrumbItems= \r\n        <Breadcrumb.Item key={pathname}>\r\n        <Link to={pathname}>\r\n          {breadcrumbNameMap[pathname]}\r\n        </Link>\r\n      </Breadcrumb.Item>\r\n     }else{\r\n      // this.state.pathSnippets.unshift(\"/\")//改变原来数组\r\n       this.state.extraBreadcrumbItems = this.state.pathSnippets.map((_, index) => {\r\n        const url = `/${this.state.pathSnippets.slice(0, index + 1).join('/')}`; \r\n        if(this.state.pathSnippets.length!=(index+1)){\r\n          return (\r\n            <Breadcrumb.Item key={url}>\r\n              <Link to={url}   style={{color:\"black\",fontWeight:600}}>\r\n               {breadcrumbNameMap[url]}\r\n              </Link>\r\n            </Breadcrumb.Item>\r\n          );\r\n        }else{\r\n          return (\r\n            <Breadcrumb.Item key={url}>\r\n              <Link to={url} >\r\n               {breadcrumbNameMap[url]}\r\n              </Link>\r\n            </Breadcrumb.Item>\r\n          );\r\n        }\r\n         \r\n      });\r\n      this.state.extraBreadcrumbItems = [(\r\n        <Breadcrumb.Item key=\"home\">\r\n          <Link to=\"/\" style={{color:\"black\",fontWeight:600}}>首页</Link>\r\n        </Breadcrumb.Item>\r\n      )].concat( this.state.extraBreadcrumbItems);\r\n\r\n     }\r\n     \r\n    \r\n\r\n    //将切分的路径读出来，形成面包屑，存放到this.state.extraBreadcrumbItems\r\n\r\n  }\r\n  componentWillMount() {\r\n    //首次加载的时候调用，形成面包屑\r\n    this.getPath();\r\n  }\r\n  componentWillReceiveProps() {\r\n    //任何子页面发生改变，均可调用，完成路径切分以及形成面包屑\r\n    // console.log(this.getPath())\r\n    this.getPath();\r\n  }\r\n  render() {\r\n    return (\r\n      <Header style={{ background: '#fff', padding: 0, height: \"60px\", border: '1px solid #e6e6e6', marginLeft: \"16px\" }}\r\n        className='border-bottom'\r\n      >\r\n        <Icon\r\n          className=\"trigger\"\r\n          type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n          onClick={this.props.toggle}\r\n          style={{ lineHeight: \"60px\", fontSize: \"20px\",marginTop:2,color:\"#303133!important\" }}\r\n        />\r\n       \r\n          <Breadcrumb style={{verticalAlign:\"middle\",lineHeight:\"60px\",marginBottom:5,}}>\r\n            {this.state.extraBreadcrumbItems}\r\n          </Breadcrumb>\r\n         \r\n      </Header>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}