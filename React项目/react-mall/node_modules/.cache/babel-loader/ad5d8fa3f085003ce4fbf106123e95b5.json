{"ast":null,"code":"import { getDarkColor, getLightColor, getFirstAlpha, getFirstColor, COMMASTRING, hasSVG } from '../lib';\n\nvar pointColor = function pointColor(a, b, c, d) {\n  var e,\n      f,\n      g,\n      h,\n      i,\n      j,\n      k,\n      l = Math.floor;\n  return a = getFirstColor(a), b = getFirstAlpha(b), 100 > c && hasSVG ? d ? (i = getDarkColor(a, l(100 * (85 - .2 * (100 - c))) / 100), j = getLightColor(a, l(100 * (100 - .5 * c)) / 100), e = {\n    color: i + COMMASTRING + j + COMMASTRING + j + COMMASTRING + i,\n    alpha: b + COMMASTRING + b + COMMASTRING + b + COMMASTRING + b,\n    radialGradient: !0,\n    gradientUnits: 'userSpaceOnUse',\n    r: c\n  }) : (f = l(100 * (.85 * (100 - .35 * c))) / 100, g = getDarkColor(a, f), h = l(100 * (.5 * (100 + c))) / 100, k = getLightColor(a, h), e = {\n    color: k + COMMASTRING + g,\n    alpha: b + COMMASTRING + b,\n    ratio: c + ',' + (100 - c),\n    radialGradient: !0,\n    gradientUnits: 'userSpaceOnUse'\n  }) : e = {\n    color: a + COMMASTRING + a,\n    alpha: b + COMMASTRING + b,\n    ratio: '0,100'\n  }, e;\n};\n\nexport default pointColor;","map":null,"metadata":{},"sourceType":"module"}