{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Person\\\\Member\\\\EditClick\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { Form, Select, Modal, Button, Input, message } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Edit.less';\nvar Option = Select.Option;\nvar confirm = Modal.confirm;\nvar FormItem = Form.Item;\nvar ButtonGroup = Button.Group;\nvar title = [\"姓名\", \"身份证号\", \"出生年月\", \"年龄\", \"入职时间\", \"职位\"];\n\nvar success = function success() {\n  message.success('The information is changed');\n};\n\nvar error = function error() {\n  message.error('Operation fails');\n};\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp() {\n    _classCallCheck(this, Temp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Temp).apply(this, arguments));\n  }\n\n  _createClass(Temp, [{\n    key: \"handlePageClick\",\n    // userExists(rule, value, callback) {\n    //   //当做validator函数来用,用来作为判断条件\n    //   if (!value) {\n    //     callback();\n    //   } else {\n    //     setTimeout(() => {\n    //       if (value === '宫爆鸡丁') {\n    //         callback([new Error('抱歉，该菜名已被占用。')]);\n    //       } else {\n    //         callback();\n    //       }\n    //     }, 800);\n    //   }\n    // };\n\n    /* \r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.form.validateFields((err, values) => {\r\n        console.log(err, values)\r\n        // if (!err) {\r\n        //   console.log('Received values of form: ', values);\r\n        // }\r\n      });\r\n    }\r\n     */\n    value: function handlePageClick() {\n      console.log(this.props.history.go(-1));\n    }\n  }, {\n    key: \"isObjectValueEqual\",\n    value: function isObjectValueEqual(a, b) {\n      //1.判断数据提交前后两对象value数值是否相等,\n      //2.相等的话返回true,进行数据请求,不想等的话返回不相等的key和value新对象\n      //3.取对象a和b的属性名\n      var aProps = Object.keys(a); // let bProps = Object.keys(b);  a、b的key值相同\n      //判断属性名的length是否一致\n      //表单两次提交内容对比不需要对length进行判断\n      //循环取出属性名，再判断属性值是否一致\n\n      for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        if (a[propName] + \"\" !== b[propName] + \"\") {\n          //因为数据类型不一致所以转一下，不对数据类型进行判断\n          return false; //如果进入这里下面return不会执行\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"showConfirm\",\n    value: function showConfirm() {\n      var _this = this;\n\n      confirm({\n        wrapClassName: '提示',\n        title: '提示:',\n        content: '是否提交数据',\n        okText: '确认',\n        cancelText: '取消',\n        icon: \"info-circle\",\n        bodyStyle: {\n          \".ant-modal-confirm-btns\": {\n            marginTop: 0\n          }\n        },\n        onOk: function () {\n          var _onOk = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (_this.isObjectValueEqual(_this.props.form.getFieldsValue(), _this.props.location.state[0])) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return fetch(\"http://localhost:2000/pers?act=editClerks&&num=\".concat(_this.props.location.state[0].num), {\n                      method: 'POST',\n                      // mode: 'cors',\n                      // credentials: 'include', // cookie\n                      headers: {\n                        'Content-Type': 'application/json'\n                      },\n                      body: JSON.stringify(_this.props.form.getFieldsValue())\n                    }).then(function (res) {\n                      return res.json();\n                    }).then(function (data) {\n                      // this.setState({ ...data })\n                      console.log(data);\n                    });\n\n                  case 3:\n                    _context.next = 6;\n                    break;\n\n                  case 5:\n                    //进行修改直接跳转到列表页\n                    success();\n\n                  case 6:\n                    _this.props.history.push({\n                      //退回到列表页\n                      pathname: \"/pers/clerks\"\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          function onOk() {\n            return _onOk.apply(this, arguments);\n          }\n\n          return onOk;\n        }()\n        /* \r\n        onCancel() {  //取消回调函数\r\n          console.log('Cancel');\r\n        }, \r\n        */\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //路由携带过来的数据\n      console.log(this.props.location.state[0]); //获取对象中的所有keys数值;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"231\");\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar Demo = Form.create({\n  name: 'validate_other'\n})(Temp);\nexport default withRouter(Demo); // export default Temp","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Person\\Member\\EditClick\\Edit.js"],"names":["React","Component","Form","Select","Modal","Button","Input","message","Link","withRouter","Option","confirm","FormItem","Item","ButtonGroup","Group","title","success","error","Temp","console","log","props","history","go","a","b","aProps","Object","keys","i","length","propName","wrapClassName","content","okText","cancelText","icon","bodyStyle","marginTop","onOk","isObjectValueEqual","form","getFieldsValue","location","state","fetch","num","method","headers","body","JSON","stringify","then","res","json","data","push","pathname","Demo","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  Form, Select, Modal, Button, Input, message\r\n} from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './Edit.less';\r\n\r\nconst { Option } = Select;\r\nconst confirm = Modal.confirm;\r\nconst FormItem = Form.Item;\r\nconst ButtonGroup = Button.Group;\r\nconst title = [\"姓名\", \"身份证号\", \"出生年月\", \"年龄\", \"入职时间\", \"职位\"];\r\nconst success = () => {\r\n  message.success('The information is changed');\r\n};\r\n\r\nconst error = () => {\r\n  message.error('Operation fails');\r\n};\r\n\r\nclass Temp extends Component {\r\n  // userExists(rule, value, callback) {\r\n  //   //当做validator函数来用,用来作为判断条件\r\n  //   if (!value) {\r\n  //     callback();\r\n  //   } else {\r\n  //     setTimeout(() => {\r\n  //       if (value === '宫爆鸡丁') {\r\n  //         callback([new Error('抱歉，该菜名已被占用。')]);\r\n  //       } else {\r\n  //         callback();\r\n  //       }\r\n  //     }, 800);\r\n  //   }\r\n  // };\r\n  /* \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(err, values)\r\n      // if (!err) {\r\n      //   console.log('Received values of form: ', values);\r\n      // }\r\n    });\r\n  }\r\n   */\r\n  handlePageClick() {\r\n    console.log(this.props.history.go(-1))\r\n  }\r\n  isObjectValueEqual(a, b) {\r\n    //1.判断数据提交前后两对象value数值是否相等,\r\n    //2.相等的话返回true,进行数据请求,不想等的话返回不相等的key和value新对象\r\n    //3.取对象a和b的属性名\r\n    let aProps = Object.keys(a);\r\n    // let bProps = Object.keys(b);  a、b的key值相同\r\n    //判断属性名的length是否一致\r\n    //表单两次提交内容对比不需要对length进行判断\r\n\r\n    //循环取出属性名，再判断属性值是否一致\r\n    for (var i = 0; i < aProps.length; i++) {\r\n      var propName = aProps[i];\r\n      if (a[propName] + \"\" !== b[propName] + \"\") {\r\n        //因为数据类型不一致所以转一下，不对数据类型进行判断\r\n        return false;//如果进入这里下面return不会执行\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  showConfirm() {\r\n    confirm({\r\n      wrapClassName: '提示',\r\n      title: '提示:',\r\n      content: '是否提交数据',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      icon: \"info-circle\",\r\n      bodyStyle: {\r\n        \".ant-modal-confirm-btns\": { marginTop: 0 }\r\n      },\r\n      onOk: async () => { // 箭头函数解决this\r\n        if (!this.isObjectValueEqual(this.props.form.getFieldsValue(), this.props.location.state[0])) {\r\n\r\n          //表单内容修改后,进入判断。 \r\n          //思路：把num=？ 传入后台在后台进行查找相应的内容  \r\n          \r\n          //post 请求发送body时请求头必须改为'Content-Type': 'application/json'\r\n         \r\n          // 请求默认为： Content-Type: application/x-www-form-urlencoded \r\n          // json中使用aplication请求头导致坑  { '{\"state\":\"离职\",\"jobTitle\":\"迎宾员\"}': '' }\r\n          await fetch(`http://localhost:2000/pers?act=editClerks&&num=${this.props.location.state[0].num}`,\r\n          {\r\n            method: 'POST',\r\n            // mode: 'cors',\r\n            // credentials: 'include', // cookie\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(this.props.form.getFieldsValue())\r\n          }\r\n          )\r\n            .then(res => res.json())\r\n            .then(\r\n              data => {\r\n                // this.setState({ ...data })\r\n                console.log(data)\r\n              })\r\n        } else { //进行修改直接跳转到列表页\r\n          success();\r\n        }\r\n        this.props.history.push({  //退回到列表页\r\n          pathname: \"/pers/clerks\",\r\n        });\r\n      },\r\n      /* \r\n      onCancel() {  //取消回调函数\r\n        console.log('Cancel');\r\n      }, \r\n      */\r\n    })\r\n  }\r\n\r\n  render() {\r\n    //路由携带过来的数据\r\n\r\n    console.log(this.props.location.state[0]);\r\n    //获取对象中的所有keys数值;\r\n  \r\n    \r\n    return (\r\n      <div>231</div>\r\n     )\r\n  }\r\n}\r\nconst Demo = Form.create({ name: 'validate_other' })(Temp);\r\n\r\nexport default withRouter(Demo)\r\n// export default Temp"]},"metadata":{},"sourceType":"module"}