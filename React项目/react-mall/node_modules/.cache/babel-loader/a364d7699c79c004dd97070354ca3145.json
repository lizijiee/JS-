{"ast":null,"code":"import _objectSpread from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\List\\\\List.js\";\nimport React, { Component } from 'react';\nimport { Button, Pagination, Switch, Checkbox, Select, Popconfirm, message, Form, Input } from 'antd';\nimport IconFont from '../../../../iconfont/font';\nimport './List.less';\nimport { withRouter } from 'react-router-dom';\n/*   -----------------     redux引入部分      ------------------- */\n\nimport * as actionCreators from '../../../../redux/actions/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nvar Option = Select.Option;\nvar text = 'Are you sure to delete this task?';\nvar FormItem = Form.Item;\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp(props) {\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Temp).call(this, props));\n\n    _this.renderItems = function (ele, index) {\n      if (ele == null) {\n        return React.createElement(\"tr\", {\n          key: \"1\",\n          style: {\n            height: 40,\n            textAlign: \"center\",\n            fontSize: 20,\n            width: \"100%\",\n            margin: \"0 auto\",\n            color: \"grey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            width: 200,\n            borderLeft: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          style: {\n            width: 200,\n            borderLeft: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          style: {\n            width: 200,\n            borderLeft: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          style: {\n            width: 200,\n            borderLeft: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          style: {\n            color: \"grey\",\n            width: 500,\n            borderLeft: \"none\",\n            textAlign: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"\\u7ED3\\u679C\\u4E0D\\u5B58\\u5728\\uFF0C\"), React.createElement(\"td\", {\n          style: {\n            color: \"grey\",\n            width: 500,\n            borderLeft: \"none\",\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"\\u8BF7\\u91CD\\u65B0\\u67E5\\u627E\\u3002\"));\n      } else {\n        var _React$createElement;\n\n        return React.createElement(\"tr\", {\n          key: ele.spuId,\n          id: ele.spuId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          onChange: function onChange(ev) {\n            _this.checkedChange(index, ev);\n          } //传参小难点\n          // id={`num${index}`}\n          // indeterminate={this.state.storeArr[index]}\n          ,\n          checked: _this.state.storeArr[index],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, ele.spuId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: ele.littleImageUrl,\n          alt: ele.spuName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, ele.spuName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \" \", ele.categoryName, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, ele.saleVolume), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"\\uFFE5\", ele.currentPrice), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, _this.renderArr.map(function (item) {\n          return React.createElement(\"p\", {\n            key: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            style: {\n              paddingRight: 15\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, item), React.createElement(Switch, {\n            size: \"default\",\n            defaultChecked: ele.categoryName === item,\n            onChange:\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(valid) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _this.props.transRecommend(valid, item, ele);\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, this);\n              }));\n\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }));\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          size: \"small\",\n          ghost: \"true\",\n          onClick: function onClick(ev) {\n            _this.props.editClick(_this.props, ele, ev);\n          } //传参为tr索引\n          ,\n          style: {\n            marginRight: 10,\n            fontSize: 13,\n            width: 60,\n            height: 25,\n            borderRadius: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"\\u7F16\\u8F91\")), React.createElement(Popconfirm, (_React$createElement = {\n          placement: \"topRight\",\n          title: text,\n          onConfirm: _this.confirm,\n          okText: \"Yes\"\n        }, _defineProperty(_React$createElement, \"onConfirm\", function onConfirm() {\n          return _this.props.transRecommend(false, ele.categoryName, ele);\n        }), _defineProperty(_React$createElement, \"cancelText\", \"No\"), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(Button, {\n          type: \"primary\",\n          size: \"small\",\n          style: {\n            fontSize: 13,\n            width: 60,\n            height: 25,\n            borderRadius: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"))));\n      }\n    };\n\n    _this.checkedChange = function (index, ev) {\n      // 单个点击事件 index 为传入索引\n      ev.stopPropagation();\n      _this.itemsArr[index] = ev.target.checked; //改变操作复选框的数组        \n\n      if (_this.itemsArr.every(function (ele) {\n        return ele === true;\n      })) {\n        // 多选框全为 => true,全选按钮为true,indeterminate为false(indeterminate中间状态)\n        _this.setState({\n          storeArr: _this.itemsArr,\n          // 为了render\n          checkAll: true,\n          indeterminate: false\n        });\n      } else {\n        // console.log(this.selectValue)\n        _this.selectValue ? _this.setState({\n          storeArr: _this.itemsArr,\n          checkAll: false,\n          indeterminate: true,\n          booleanValue: false\n        }) : _this.setState({\n          // 存在多选框为 false\n          storeArr: _this.itemsArr,\n          checkAll: false,\n          indeterminate: true\n        });\n      }\n\n      if (!_this.itemsArr.some(function (ele) {\n        return ele === true;\n      })) {\n        //多选框全为 => false,indeterminate为false\n        _this.setState({\n          storeArr: _this.itemsArr,\n          indeterminate: false\n        });\n      }\n    };\n\n    _this.onCheckAllChange = function (e) {\n      //  全选 功能 \n      if (e.target.checked) {\n        _this.itemsArr.forEach(function (ele, index) {\n          _this.itemsArr[index] = e.target.checked;\n        });\n      } else {\n        _this.itemsArr.forEach(function (ele, index) {\n          _this.itemsArr[index] = e.target.checked;\n        });\n      }\n\n      _this.setState({\n        checkAll: e.target.checked,\n        storeArr: _this.itemsArr,\n        indeterminate: false\n      });\n    };\n\n    _this.confirm = function () {\n      // 气泡确认框内容\n      message.info('Clicked on Yes.');\n    };\n\n    _this.bulkOperation = function () {\n      /* 思路： \r\n          1.首先判断选中内容是哪些？(先看一下数组准不准,state 还是外面的准一些);\r\n          2.确定选中内容后,判断select中内容;(附加条件select数值有效)\r\n          3.点击确定发送请求,将选中数据发送到后台进行修改;\r\n          4.后台接收到的是一个数组,怎样处理进行数组解构;\r\n          5.后台进行判断,如果是一个数组一条一条增加处理？？\r\n      */\n      var tempArr = []; // 创建数组 \n\n      _this.state.storeArr.forEach(function (ele, index) {\n        if (ele) {\n          tempArr.push(_this.renderData[index]);\n        }\n      }); // 拿到索引,将点了对勾的数据push到新数组;\n      // 拿到选择内容再进行请求;\n      // console.log(tempArr)  拿到数据以后传送给后台进行修改;\n      // console.log(this.selectValue)  当下选框数组,不能为空字符串\n      // console.log(this.selectOption)  [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"]\n\n\n      if (_this.selectValue && tempArr.length) {\n        //select不能为空,复选框不能为空,进入判断;\n        var OperString = _this.selectValue.substring(2, 4); //操作方式： 热销 推荐 折扣 删除  \n\n\n        var collateData = function collateData() {\n          //查看是否存在\n          var tempData = [];\n\n          var data = _toConsumableArray(_this.props.data.data);\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var ele = _step.value;\n              var _iteratorNormalCompletion2 = true;\n              var _didIteratorError2 = false;\n              var _iteratorError2 = undefined;\n\n              try {\n                for (var _iterator2 = ele.spuList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                  var item = _step2.value;\n                  //  将拿回来spuList数组,数据处理\n                  item.categoryName = ele.categoryName; // 类名\n\n                  item.checked = false; //拿到数据可以加小tag方便自己操作\n\n                  tempData.push(item);\n                }\n              } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                    _iterator2.return();\n                  }\n                } finally {\n                  if (_didIteratorError2) {\n                    throw _iteratorError2;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          tempData = tempData.filter(function (ele) {\n            return ele.categoryName == \"折扣\" || ele.categoryName == \"热销\" || ele.categoryName == \"推荐\";\n          });\n          return tempData;\n          /* \r\n            思路整理: \r\n               拿到每个获取的信息;(操作方式用传入方式,删除就直接操作就可以了)\r\n               将信息进行匹配筛选,先按照categoryName查找再根据id查找\r\n               查找结果放在一个数组中,如果数组没找到添加进去,找到就禁止添加已存在 \r\n          */\n        };\n\n        if (OperString === \"删除\" && tempArr.length) {\n          // 批量操作选中删除,并且有数据被checked进入判断\n          // 循环调用删除,正常逻辑应该是一次请求结束,不能多次请求;\n          tempArr.forEach(function (ele) {\n            return _this.props.transRecommend(false, ele.categoryName, ele);\n          });\n        } else {\n          // 三种推荐操作\n          var testExist =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function testExist() {\n            var _loop, _i;\n\n            return _regeneratorRuntime.wrap(function testExist$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _loop =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _loop() {\n                      var ele;\n                      return _regeneratorRuntime.wrap(function _loop$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              ele = tempArr[_i];\n                              _context2.next = 3;\n                              return collateData().filter(function (item) {\n                                return ele.spuId === item.spuId && ele.categoryName === OperString;\n                              });\n\n                            case 3:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }, _loop, this);\n                    });\n                    _i = 0;\n\n                  case 2:\n                    if (!(_i < tempArr.length)) {\n                      _context3.next = 7;\n                      break;\n                    }\n\n                    return _context3.delegateYield(_loop(), \"t0\", 4);\n\n                  case 4:\n                    _i++;\n                    _context3.next = 2;\n                    break;\n\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, testExist, this);\n          });\n\n          var num = 0; //手动给循环加个索引,因为知道总数组,不知道循环的是谁\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            var _loop2 = function _loop2() {\n              var ele = _step3.value;\n              //循环原理\n              //没有就添加,有的话警告：已经存在\n              ++num;\n\n              if (ele.length) {\n                // 提示已经存在了\n                var success = function success() {\n                  message.success(\"\".concat(ele[0].spuName, \" \\u5B58\\u5728 \\u3010\").concat(ele[0].categoryName, \"\\u3011 \\u63A8\\u8350\\u4E2D \\u8BF7\\u91CD\\u65B0\\u9009\\u62E9~ \"));\n                };\n\n                success();\n              } else {\n                // 如果0,不存在就进行添加,不存在是谁\n                tempArr[num - 1].categoryName = OperString;\n\n                _this.props.transRecommend(true, tempArr[num - 1].categoryName, tempArr[num - 1]); //  console.log(\"推荐中不存在进行添加,添加到推荐中\")\n\n              }\n            };\n\n            for (var _iterator3 = testExist()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              _loop2();\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n\n        _this.props.batchUpdate(tempArr, OperString); //(数据,操作方式)\n\n      }\n\n      tempArr = [];\n    };\n\n    _this.Page = null; //用于包装Pagination组件;\n\n    _this.itemsArr = []; //初始化数组,page切换,清空\n\n    _this.renderArr = [\"热销\", \"推荐\", \"折扣\"];\n    _this.renderData = null; // 渲染的数据\n\n    _this.selectOption = [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"];\n    _this.selectValue = null; //选择内容\n\n    _this.categoryName = {}; //菜品类名\n\n    _this.initStoreData = null;\n    _this.state = {\n      current: 1,\n      storeData: [],\n      // 菜品数据\n      categoryName: {},\n      // 菜品类名 \n      indeterminate: false,\n      // 全选按钮 中间状态控制\n      checkAll: false,\n      // 全部选中\n      storeArr: [],\n      // 状态切换存储数据\n      booleanValue: true,\n      // 确认按钮disable 控制属性  \n      selecctValue: \"批量操作\",\n      // 批量操作 \n      colorBoolean: true // 控制select下拉框颜色\n\n    };\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.props.fetchFoodInfo();\n\n              case 2:\n                this.initStoreData = this.props.data;\n                /*  \r\n                问题：\r\n                   点请求数据异步,拿不到;\r\n                  在使用过成中将redux和state用导致变量无法更新,禁止混用;  \r\n                */\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\n\n  }, {\n    key: \"handleSearchClick\",\n    value: function () {\n      var _handleSearchClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var booleanValue;\n        return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                booleanValue = Object.values(this.props.form.getFieldsValue()).every(function (ele) {\n                  return !!ele === false;\n                });\n\n                if (!booleanValue) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                console.log(this.initStoreData);\n                return _context5.abrupt(\"return\", null);\n\n              case 6:\n                _context5.prev = 6;\n                _context5.next = 9;\n                return this.props.batchQuery(this.props.form.getFieldsValue(), this.props.data.data);\n\n              case 9:\n                console.log(2222);\n                _context5.next = 15;\n                break;\n\n              case 12:\n                _context5.prev = 12;\n                _context5.t0 = _context5[\"catch\"](6);\n                console.log(2222); // console.log(error)\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee3, this, [[6, 12]]);\n      }));\n\n      function handleSearchClick() {\n        return _handleSearchClick.apply(this, arguments);\n      }\n\n      return handleSearchClick;\n    }()\n  }, {\n    key: \"handleResetClick\",\n    value: function handleResetClick() {\n      if (this.props.data == null || this.props.data.code !== 0) {\n        //或者运算符有先后顺序\n        //查找不到再重置拿回来以后为null\n        this.props.fetchFoodInfo(); //简单减少请求\n      }\n\n      this.props.form.resetFields();\n    }\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\n\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\n\n  }, {\n    key: \"ChangePage\",\n\n    /* --------------------------  批量操作部分(以下) -------------------- */\n\n    /* ------------------------  底部页码组件部分(以下) -------------------- */\n\n    /* \r\n      组件声明变量:\r\n           this.Page 和 this.state.current:1\r\n    \r\n      复用注意：首先判断数据格式     \r\n    */\n    value: function () {\n      var _ChangePage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(page) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                // 使用<Pagination/>组件自带回调函数来设置页码对应渲染内容\n                // this.checkedChange()\n                this.itemsArr = [];\n                this.setState({\n                  current: page,\n                  storeArr: [],\n                  checkAll: false,\n                  indeterminate: false,\n                  selecctValue: \"批量操作\",\n                  colorBoolean: true,\n                  booleanValue: true // this.setState({selecctValue: value})\n\n                }); // 注意setState为异步,回调函数问题\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function ChangePage(_x2) {\n        return _ChangePage.apply(this, arguments);\n      }\n\n      return ChangePage;\n    }()\n  }, {\n    key: \"renderPage\",\n    value: function renderPage(tempData) {\n      //page第二步骤;\n      if (tempData.length) {\n        var length = tempData.length;\n        this.Page = React.createElement(Pagination //  底部页码组件\n        , {\n          defaultCurrent: 1,\n          pageSize: 5,\n          total: length,\n          onChange: this.ChangePage.bind(this),\n          style: {\n            marginRight: 25,\n            marginTop: 30,\n            float: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        });\n        return this.Page;\n      }\n    }\n    /* ------------------------  底部页码组件部分(以上) -------------------- */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Items = null;\n      var tempData = [];\n\n      var data = _objectSpread({}, this.props.data);\n\n      var _this$props$form = this.props.form,\n          getFieldProps = _this$props$form.getFieldProps,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldValidating = _this$props$form.isFieldValidating,\n          getFieldDecorator = _this$props$form.getFieldDecorator; // 初始为 {} 空对象\n\n      if (data.data) {\n        // 数据格式化处理,放在一个数组内,便于渲染\n        // Object.keys()  获取对象中keys值\n        // JSON.stringify(data) == \"{}\" //空对象判断方法\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = data.data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var ele = _step4.value;\n            this.categoryName[ele.categoryName] = ele.categoryName; // 存储类名\n\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = ele.spuList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var item = _step5.value;\n                //  将拿回来spuList数组,数据处理\n                item.categoryName = ele.categoryName; // 类名\n\n                item.checked = false; //拿到数据可以加小tag方便自己操作\n\n                tempData.push(item);\n              }\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      }\n\n      if (JSON.stringify(this.props.data) !== \"{}\" && !data.data) {\n        //弄成统一格式进行渲染,比如都放在一个数组里面,总是需要改格式,有深层嵌套很麻烦。\n        tempData.push(this.props.data);\n      }\n      /* ------------------------         渲染主要列表       -------------------- */\n\n\n      if (tempData.length) {\n        // 注释:  见用户：Member组件\n        var _data = tempData;\n\n        if (_data.length === 1) {\n          Items = _data.map(this.renderItems);\n        } else {\n          this.renderData = _data.filter(function (e, index) {\n            return index >= 5 * (_this2.state.current - 1) && index < 5 * _this2.state.current;\n          });\n          Items = this.renderData.map(this.renderItems);\n\n          if (!Items.length) {\n            var temp = this.state.current * 1;\n            this.setState({\n              current: temp - 1\n            });\n            return this.state;\n          }\n        }\n\n        if (!this.itemsArr.length) {\n          //itemsArr为空初始化，非空不进判断，避免重复render\n          this.itemsArr = Array(Items.length).fill(false);\n        }\n      }\n\n      return React.createElement(\"section\", {\n        className: \"food-info-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-serch-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-glass\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"\\u7B5B\\u9009\\u68C0\\u7D22\"), React.createElement(\"button\", {\n        className: \"add\",\n        onClick: function onClick() {\n          _this2.handleSearchClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\\u7ED3\\u679C\"), React.createElement(Button, {\n        className: \"btn\",\n        style: {\n          color: \"#1890ff\",\n          float: \"right\",\n          marginRight: 20\n        },\n        ghost: true,\n        onClick: this.handleResetClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E\")), React.createElement(Form, {\n        layout: \"inline\",\n        action: \"\",\n        style: {\n          marginTop: 15,\n          marginBottom: 20,\n          marginLeft: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"\\u8F93\\u5165\\u68C0\\u7D22\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, getFieldDecorator(\"spuName\", {// initialValue: this.props.location.state[0].state\n      })(React.createElement(Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u83DC\\u540D\",\n        style: {\n          width: 170,\n          color: \"#606266\",\n          fontSize: 12,\n          marginRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: \"\\u83DC\\u54C1\\u7C7B\\u578B\" // {...formItemLayout}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, getFieldDecorator(\"categoryName\", {// initialValue: this.props.location.state[0].state\n      })(React.createElement(Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\\u7C7B\\u578B\",\n        style: {\n          width: 170,\n          color: \"#606266\",\n          fontSize: 12,\n          marginRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, Object.keys(this.categoryName).filter(function (ele) {\n        return ele !== \"折扣\" && ele !== \"推荐\" && ele !== \"热销\";\n      }).map(function (ele) {\n        return React.createElement(Option, {\n          value: ele,\n          key: ele,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432\n          },\n          __self: this\n        }, ele);\n      })))), React.createElement(FormItem, {\n        label: \"\\u63A8\\u8350\\u72B6\\u6001\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, getFieldDecorator(\"recommendState\", {// initialValue: this.props.location.state[0].state\n      })(React.createElement(Select, {\n        placeholder: \"\\u63A8\\u8350\\u72B6\\u6001\",\n        style: {\n          width: 170,\n          color: \"#606266\",\n          fontSize: 12,\n          marginRight: \"0!imoprtant\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, this.renderArr.map(function (ele) {\n        return React.createElement(Option, {\n          value: ele,\n          key: ele,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }, ele);\n      }))))))), React.createElement(\"div\", {\n        className: \"el-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-title-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(IconFont, {\n        type: \"mall-doc-list\",\n        style: {\n          fontSize: 16,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \"\\u6570\\u636E\\u5217\\u8868\"))), React.createElement(\"main\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        cellPadding: \"0\",\n        cellSpacing: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: this.onCheckAllChange.bind(this),\n        indeterminate: this.state.indeterminate,\n        checked: this.state.checkAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"\\u7F16\\u53F7\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"\\u83DC\\u54C1\\u56FE\\u7247\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"\\u83DC\\u54C1\\u540D\\u79F0\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \"\\u83DC\\u54C1\\u7C7B\\u578B\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"\\u9500\\u91CF\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"\\u4EF7\\u683C\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"\\u6807\\u7B7E\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, \"\\u64CD\\u4F5C\"))), React.createElement(\"tbody\", {\n        id: \"ItemWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, Items))), React.createElement(Select // defaultValue= {this.state.defalutSelecctValue} //不能改变颜色\n      , {\n        placeholder: \"\\u6279\\u91CF\\u64CD\\u4F5C\" //默认值\n        ,\n        style: {\n          marginRight: 20,\n          marginTop: 30,\n          float: \"left\",\n          width: 150,\n          size: \"large\",\n          color: this.state.colorBoolean ? \"rgba(0, 0, 0, 0.45)\" : \"rgba(0, 0, 0, 1)\" // 颜色控制方法: 初始一个颜色下拉选择后一个颜色,page改变后内容和文字颜色都恢复\n\n        },\n        value: this.state.selecctValue,\n        onSelect: function onSelect(value) {\n          _this2.selectValue = value;\n\n          _this2.setState({\n            //下拉后改变颜色tag--colorBoolean,把下拉表内容也弄回去;\n            colorBoolean: false,\n            selecctValue: value\n          });\n\n          if (_this2.itemsArr.some(function (ele) {\n            return ele === true;\n          })) {\n            _this2.setState({\n              booleanValue: false\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, this.selectOption.map(function (item) {\n        return React.createElement(Option, {\n          value: item,\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517\n          },\n          __self: this\n        }, item);\n      })), React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          marginTop: 30,\n          fontSize: 13,\n          height: 30,\n          size: \"large\"\n        },\n        disabled: this.state.booleanValue,\n        onClick: function onClick() {\n          return _this2.bulkOperation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\"), this.renderPage(tempData)));\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar Demo = Form.create({\n  name: 'title'\n})(Temp);\nexport default withRouter(connect(function (state) {\n  return {\n    data: state.foodData\n  };\n}, //将redux变量赋值到组件,成组件变量Data\nfunction (dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n})(Demo)); // export default withRouter(Demo)","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\List\\List.js"],"names":["React","Component","Button","Pagination","Switch","Checkbox","Select","Popconfirm","message","Form","Input","IconFont","withRouter","actionCreators","connect","bindActionCreators","Option","text","FormItem","Item","Temp","props","renderItems","ele","index","height","textAlign","fontSize","width","margin","color","borderLeft","spuId","ev","checkedChange","state","storeArr","littleImageUrl","spuName","categoryName","saleVolume","currentPrice","renderArr","map","item","paddingRight","valid","transRecommend","editClick","marginRight","borderRadius","confirm","stopPropagation","itemsArr","target","checked","every","setState","checkAll","indeterminate","selectValue","booleanValue","some","onCheckAllChange","e","forEach","info","bulkOperation","tempArr","push","renderData","length","OperString","substring","collateData","tempData","data","spuList","filter","testExist","num","success","batchUpdate","Page","selectOption","initStoreData","current","storeData","selecctValue","colorBoolean","fetchFoodInfo","Object","values","form","getFieldsValue","console","log","batchQuery","code","resetFields","page","ChangePage","bind","marginTop","float","Items","getFieldProps","getFieldError","isFieldValidating","getFieldDecorator","JSON","stringify","temp","Array","fill","handleSearchClick","handleResetClick","marginBottom","marginLeft","keys","size","value","renderPage","Demo","create","name","foodData","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Pagination, Switch, Checkbox, Select, Popconfirm, message, Form, Input } from 'antd';\r\nimport IconFont from '../../../../iconfont/font'\r\nimport './List.less';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/*   -----------------     redux引入部分      ------------------- */\r\nimport * as actionCreators from '../../../../redux/actions/actions';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from \"redux\"\r\n\r\nconst Option = Select.Option;\r\nconst text = 'Are you sure to delete this task?';\r\nconst FormItem = Form.Item;\r\n\r\nclass Temp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.Page = null;  //用于包装Pagination组件;\r\n        this.itemsArr = []; //初始化数组,page切换,清空\r\n        this.renderArr = [\"热销\", \"推荐\", \"折扣\"];\r\n        this.renderData = null;        // 渲染的数据\r\n        this.selectOption = [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"]\r\n        this.selectValue = null //选择内容\r\n        this.categoryName = {} //菜品类名\r\n        this.initStoreData=null;\r\n        this.state = {\r\n            current: 1,\r\n            storeData: [],        // 菜品数据\r\n            categoryName: {},      // 菜品类名 \r\n            indeterminate: false, // 全选按钮 中间状态控制\r\n            checkAll: false,      // 全部选中\r\n            storeArr: [],         // 状态切换存储数据\r\n            booleanValue: true,   // 确认按钮disable 控制属性  \r\n            selecctValue: \"批量操作\", // 批量操作 \r\n            colorBoolean: true       // 控制select下拉框颜色\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        // 提前计划放入redux中的数据和方法\r\n        // console.log(this)\r\n        await this.props.fetchFoodInfo()\r\n        this.initStoreData=this.props.data\r\n         /*  \r\n        问题：\r\n            点请求数据异步,拿不到;\r\n \r\n        在使用过成中将redux和state用导致变量无法更新,禁止混用;  \r\n         */\r\n    }\r\n\r\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\r\n    async handleSearchClick() {\r\n        let booleanValue = Object.values(this.props.form.getFieldsValue()).every(ele => !!ele === false)\r\n        if (booleanValue) {\r\n            console.log( this.initStoreData )\r\n            return null\r\n        } else {\r\n            try {\r\n                await this.props.batchQuery(this.props.form.getFieldsValue(), this.props.data.data)\r\n                console.log(2222)\r\n            } catch (error) {\r\n                console.log(2222)\r\n                // console.log(error)\r\n            }\r\n        }\r\n        // booleanValue? null :\r\n        // 调用redux操作数据,传入表单内设置值,并将操作前数据传过去\r\n    }\r\n    handleResetClick() {\r\n        if ((this.props.data == null) || (this.props.data.code !== 0)) { //或者运算符有先后顺序\r\n            //查找不到再重置拿回来以后为null\r\n            this.props.fetchFoodInfo()  //简单减少请求\r\n        }\r\n        this.props.form.resetFields()\r\n    }\r\n\r\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\r\n\r\n    /* ------------------    信息内容列表部分渲染(以下)   ------------------- */\r\n    renderItems = (ele, index) => {\r\n        if (ele == null) {\r\n            return <tr key=\"1\"\r\n                style={{\r\n                    height: 40, textAlign: \"center\", fontSize: 20, width: \"100%\", margin: \"0 auto\",\r\n                    color: \"grey\"\r\n                }}>\r\n                {/* <td style={{ width: 200,borderRight:\"none\" }}></td> */}\r\n                <td style={{ width: 200, borderLeft: \"none\" }}></td>\r\n                <td style={{ width: 200, borderLeft: \"none\" }}></td>\r\n                <td style={{ width: 200, borderLeft: \"none\" }}></td>\r\n                <td style={{ width: 200, borderLeft: \"none\" }}></td>\r\n                <td style={{ color: \"grey\", width: 500, borderLeft: \"none\", textAlign: \"right\" }}>结果不存在，</td>\r\n                <td style={{ color: \"grey\", width: 500, borderLeft: \"none\", textAlign: \"left\" }}>请重新查找。</td>\r\n            </tr>\r\n        } else {\r\n            return (\r\n                <tr key={ele.spuId} id={ele.spuId} >\r\n                    <td>\r\n                        < Checkbox\r\n                            onChange={(ev) => { this.checkedChange(index, ev) }}//传参小难点\r\n                            // id={`num${index}`}\r\n                            // indeterminate={this.state.storeArr[index]}\r\n                            checked={this.state.storeArr[index]}\r\n                        />\r\n                    </td>\r\n                    <td>{ele.spuId}</td>\r\n                    <td><img src={ele.littleImageUrl} alt={ele.spuName} /></td>\r\n                    <td>{ele.spuName}</td>\r\n                    <td > {ele.categoryName} </td>\r\n                    <td>{ele.saleVolume}</td>\r\n                    <td>￥{ele.currentPrice}</td>\r\n                    <td>\r\n                        {this.renderArr.map((item) =>\r\n                            <p key={item}>\r\n                                <span style={{ paddingRight: 15 }}>{item}</span>\r\n                                <Switch\r\n                                    size=\"default\"\r\n                                    defaultChecked={ele.categoryName === item}\r\n                                    onChange={async (valid) => {\r\n                                        await this.props.transRecommend(valid, item, ele);\r\n                                    }}\r\n                                />\r\n                            </p>\r\n                        )}\r\n                    </td>\r\n                    <td>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            size=\"small\"\r\n                            ghost=\"true\"\r\n                            onClick={(ev) => {\r\n                                this.props.editClick(this.props, ele, ev)\r\n                            }}//传参为tr索引\r\n                            style={{ marginRight: 10, fontSize: 13, width: 60, height: 25, borderRadius: 5 }}\r\n                        >\r\n                            <span>编辑</span>\r\n                        </Button>\r\n                        <Popconfirm\r\n                            placement=\"topRight\"\r\n                            title={text}\r\n                            onConfirm={this.confirm}\r\n                            okText=\"Yes\"\r\n                            onConfirm={() =>\r\n                                this.props.transRecommend(false, ele.categoryName, ele)\r\n                            }\r\n                            cancelText=\"No\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"small\"\r\n                                style={{ fontSize: 13, width: 60, height: 25, borderRadius: 5 }}\r\n                            >删除</Button>\r\n                        </Popconfirm>\r\n                    </td>\r\n                </tr>)\r\n        }\r\n    }\r\n    checkedChange = (index, ev) => {\r\n        // 单个点击事件 index 为传入索引\r\n        ev.stopPropagation()\r\n        this.itemsArr[index] = ev.target.checked  //改变操作复选框的数组        \r\n        if (this.itemsArr.every(ele => ele === true)) {\r\n            // 多选框全为 => true,全选按钮为true,indeterminate为false(indeterminate中间状态)\r\n            this.setState({\r\n                storeArr: this.itemsArr,  // 为了render\r\n                checkAll: true,\r\n                indeterminate: false\r\n            })\r\n        } else {\r\n            // console.log(this.selectValue)\r\n            (this.selectValue) ? this.setState({\r\n                storeArr: this.itemsArr,\r\n                checkAll: false,\r\n                indeterminate: true, booleanValue: false\r\n            }) : this.setState({ // 存在多选框为 false\r\n                storeArr: this.itemsArr,\r\n                checkAll: false,\r\n                indeterminate: true\r\n            })\r\n        }\r\n        if (!this.itemsArr.some(ele => ele === true)) {\r\n            //多选框全为 => false,indeterminate为false\r\n            this.setState({\r\n                storeArr: this.itemsArr,\r\n                indeterminate: false\r\n            })\r\n        }\r\n    }\r\n    onCheckAllChange = (e) => {\r\n        //  全选 功能 \r\n        if (e.target.checked) {\r\n            this.itemsArr.forEach((ele, index) => {\r\n                this.itemsArr[index] = e.target.checked\r\n            });\r\n        }\r\n        else {\r\n            this.itemsArr.forEach((ele, index) => {\r\n                this.itemsArr[index] = e.target.checked\r\n            });\r\n        }\r\n        this.setState({\r\n            checkAll: e.target.checked,\r\n            storeArr: this.itemsArr,\r\n            indeterminate: false\r\n        })\r\n\r\n    }\r\n    confirm = () => {\r\n        // 气泡确认框内容\r\n        message.info('Clicked on Yes.');\r\n    }\r\n    /* ------------------    信息内容列表部分渲染(以上)   ------------------- */\r\n\r\n    /* -------------------------- 批量操作部分(以下) -------------------- */\r\n    bulkOperation = () => {\r\n        /* 思路： \r\n            1.首先判断选中内容是哪些？(先看一下数组准不准,state 还是外面的准一些);\r\n            2.确定选中内容后,判断select中内容;(附加条件select数值有效)\r\n            3.点击确定发送请求,将选中数据发送到后台进行修改;\r\n            4.后台接收到的是一个数组,怎样处理进行数组解构;\r\n            5.后台进行判断,如果是一个数组一条一条增加处理？？\r\n        */\r\n        let tempArr = [] // 创建数组 \r\n        this.state.storeArr.forEach((ele, index) => { if (ele) { tempArr.push(this.renderData[index]) } })\r\n        // 拿到索引,将点了对勾的数据push到新数组;\r\n        // 拿到选择内容再进行请求;\r\n        // console.log(tempArr)  拿到数据以后传送给后台进行修改;\r\n        // console.log(this.selectValue)  当下选框数组,不能为空字符串\r\n        // console.log(this.selectOption)  [\"设为推荐\", \"设为热销\", \"设为折扣\", \"批量删除\"]\r\n        if (this.selectValue && tempArr.length) {//select不能为空,复选框不能为空,进入判断;\r\n            let OperString = this.selectValue.substring(2, 4) //操作方式： 热销 推荐 折扣 删除  \r\n\r\n            let collateData = () => { //查看是否存在\r\n                let tempData = [];\r\n                let data = [...this.props.data.data]\r\n                for (let ele of data) {\r\n                    for (let item of ele.spuList) {//  将拿回来spuList数组,数据处理\r\n                        item.categoryName = ele.categoryName // 类名\r\n                        item.checked = false  //拿到数据可以加小tag方便自己操作\r\n                        tempData.push(item)\r\n                    }\r\n                }\r\n                tempData = tempData.filter((ele) => ele.categoryName == \"折扣\" || ele.categoryName == \"热销\" || ele.categoryName == \"推荐\"\r\n                )\r\n                return tempData\r\n                /* \r\n                  思路整理: \r\n                     拿到每个获取的信息;(操作方式用传入方式,删除就直接操作就可以了)\r\n                     将信息进行匹配筛选,先按照categoryName查找再根据id查找\r\n                     查找结果放在一个数组中,如果数组没找到添加进去,找到就禁止添加已存在 \r\n                */\r\n            }\r\n\r\n            if (OperString === \"删除\" && tempArr.length) {\r\n                // 批量操作选中删除,并且有数据被checked进入判断\r\n                // 循环调用删除,正常逻辑应该是一次请求结束,不能多次请求;\r\n                tempArr.forEach((ele) => this.props.transRecommend(false, ele.categoryName, ele))\r\n            } else {\r\n                // 三种推荐操作\r\n                let testExist = function* () {\r\n                    for (let ele of tempArr) {\r\n                        yield collateData().filter((item) => {\r\n                            return ele.spuId === item.spuId && ele.categoryName === OperString\r\n                        })\r\n                    }\r\n                };\r\n                let num = 0;//手动给循环加个索引,因为知道总数组,不知道循环的是谁\r\n                for (let ele of testExist()) { //循环原理\r\n                    //没有就添加,有的话警告：已经存在\r\n                    ++num\r\n                    if (ele.length) {\r\n                        // 提示已经存在了\r\n                        const success = () => {\r\n                            message.success(`${ele[0].spuName} 存在 【${ele[0].categoryName}】 推荐中 请重新选择~ `);\r\n                        };\r\n                        success()\r\n                    } else {\r\n                        // 如果0,不存在就进行添加,不存在是谁\r\n                        tempArr[num - 1].categoryName = OperString\r\n                        this.props.transRecommend(true, tempArr[num - 1].categoryName, tempArr[num - 1])\r\n                        //  console.log(\"推荐中不存在进行添加,添加到推荐中\")\r\n                    }\r\n                }\r\n            }\r\n            this.props.batchUpdate(tempArr, OperString) //(数据,操作方式)\r\n        }\r\n        tempArr = []\r\n    }\r\n    /* --------------------------  批量操作部分(以下) -------------------- */\r\n\r\n    /* ------------------------  底部页码组件部分(以下) -------------------- */\r\n    /* \r\n      组件声明变量:\r\n           this.Page 和 this.state.current:1\r\n    \r\n      复用注意：首先判断数据格式     \r\n    */\r\n    async ChangePage(page) {\r\n        // 使用<Pagination/>组件自带回调函数来设置页码对应渲染内容\r\n        // this.checkedChange()\r\n        this.itemsArr = []\r\n        this.setState({\r\n            current: page,\r\n            storeArr: [],\r\n            checkAll: false,\r\n            indeterminate: false,\r\n            selecctValue: \"批量操作\",\r\n            colorBoolean: true,\r\n            booleanValue: true\r\n            // this.setState({selecctValue: value})\r\n        })\r\n        // 注意setState为异步,回调函数问题\r\n    }\r\n    renderPage(tempData) {\r\n        //page第二步骤;\r\n        if (tempData.length) {\r\n            let length = tempData.length;\r\n            this.Page = <Pagination  //  底部页码组件\r\n                defaultCurrent={1}\r\n                pageSize={5}\r\n                total={length}\r\n                onChange={this.ChangePage.bind(this)}\r\n                style={{\r\n                    marginRight: 25, marginTop: 30, float: \"right\"\r\n                }} />\r\n            return this.Page\r\n        }\r\n    }\r\n    /* ------------------------  底部页码组件部分(以上) -------------------- */\r\n    render() {\r\n        let Items = null;\r\n        let tempData = [];\r\n        let data = { ...this.props.data }\r\n        const { getFieldProps, getFieldError, isFieldValidating, getFieldDecorator } = this.props.form;\r\n        // 初始为 {} 空对象\r\n        if (data.data) { // 数据格式化处理,放在一个数组内,便于渲染\r\n            // Object.keys()  获取对象中keys值\r\n            // JSON.stringify(data) == \"{}\" //空对象判断方法\r\n            for (let ele of data.data) {\r\n                this.categoryName[ele.categoryName] = ele.categoryName// 存储类名\r\n                for (let item of ele.spuList) {//  将拿回来spuList数组,数据处理\r\n                    item.categoryName = ele.categoryName // 类名\r\n                    item.checked = false  //拿到数据可以加小tag方便自己操作\r\n                    tempData.push(item)\r\n                }\r\n            }\r\n        }\r\n        if (JSON.stringify(this.props.data) !== \"{}\" && !data.data) {\r\n            //弄成统一格式进行渲染,比如都放在一个数组里面,总是需要改格式,有深层嵌套很麻烦。\r\n            tempData.push(this.props.data)\r\n        }\r\n        /* ------------------------         渲染主要列表       -------------------- */\r\n\r\n        if (tempData.length) { // 注释:  见用户：Member组件\r\n            let data = tempData;\r\n            if (data.length === 1) {\r\n                Items = data.map(this.renderItems)\r\n            } else {\r\n                this.renderData = data.filter((e, index) =>\r\n                    index >= 5 * (this.state.current - 1) &&\r\n                    index < 5 * this.state.current\r\n                )\r\n                Items = (this.renderData).map(this.renderItems)\r\n                if (!Items.length) {\r\n                    let temp = this.state.current * 1\r\n                    this.setState({ current: temp - 1 })\r\n                    return this.state\r\n                }\r\n            }\r\n            if (!this.itemsArr.length) { //itemsArr为空初始化，非空不进判断，避免重复render\r\n                this.itemsArr = Array(Items.length).fill(false)\r\n            }\r\n        }\r\n        return (\r\n            <section className=\"food-info-list\">\r\n                {/*   员工信息组件  */}\r\n                <div className=\"app-container\">\r\n                    <div className=\"el-serch-wrap\">\r\n                        <div className=\"el-title-body\">\r\n                            <div>\r\n                                <IconFont type=\"mall-doc-glass\" style={{ fontSize: 16, marginRight: 5 }} />\r\n                                <span>筛选检索</span>\r\n                                <button className=\"add\"\r\n                                    onClick={() => { this.handleSearchClick() }}\r\n                                >查询结果</button>\r\n                                <Button\r\n                                    className=\"btn\"\r\n                                    style={{\r\n                                        color: \"#1890ff\",\r\n                                        float: \"right\",\r\n                                        marginRight: 20,\r\n                                    }}\r\n                                    ghost\r\n                                    onClick={this.handleResetClick.bind(this)}\r\n                                >重置</Button>\r\n                            </div>\r\n                            <Form\r\n                                layout=\"inline\"\r\n                                action=\"\"\r\n                                style={{\r\n                                    marginTop: 15,\r\n                                    marginBottom: 20,\r\n                                    marginLeft: 60\r\n                                }}\r\n                            >\r\n                                <FormItem\r\n                                    label=\"输入检索\"\r\n                                >\r\n                                    {getFieldDecorator(\"spuName\", {\r\n                                        // initialValue: this.props.location.state[0].state\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"请输入菜名\"\r\n                                            style={{\r\n                                                width: 170, color: \"#606266\", fontSize: 12, marginRight: 20\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                </FormItem>\r\n                                <FormItem\r\n                                    label=\"菜品类型\"\r\n                                // {...formItemLayout}\r\n                                >\r\n                                    {getFieldDecorator(\"categoryName\", {\r\n                                        // initialValue: this.props.location.state[0].state\r\n                                    })(\r\n                                        <Select\r\n                                            placeholder=\"请选择类型\"\r\n                                            style={{ width: 170, color: \"#606266\", fontSize: 12, marginRight: 20 }}\r\n                                        >\r\n                                            {Object.keys(this.categoryName).filter(ele => ele !== \"折扣\" && ele !== \"推荐\" && ele !== \"热销\").map(ele =>\r\n                                                <Option value={ele} key={ele}>{ele}</Option>\r\n                                            )}\r\n                                        </Select>,\r\n                                    )}\r\n                                </FormItem>\r\n                                <FormItem\r\n                                    label=\"推荐状态\"\r\n                                >\r\n                                    {getFieldDecorator(\"recommendState\", {\r\n                                        // initialValue: this.props.location.state[0].state\r\n                                    })(\r\n                                        <Select\r\n                                            placeholder=\"推荐状态\"\r\n                                            style={{ width: 170, color: \"#606266\", fontSize: 12, marginRight: \"0!imoprtant\" }}\r\n                                        >\r\n                                            {this.renderArr.map(ele =>\r\n                                                <Option value={ele} key={ele}>{ele}</Option>\r\n                                            )}\r\n                                        </Select>\r\n                                    )}\r\n\r\n                                </FormItem>\r\n\r\n                            </Form >\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"el-title\">\r\n                        <div className=\"el-title-body\">\r\n                            <IconFont type=\"mall-doc-list\" style={{ fontSize: 16, marginRight: 5 }} />\r\n                            <span>数据列表</span>\r\n                            {/* <button className=\"add\">添加菜0品</button> */}\r\n                        </div>\r\n                    </div>\r\n                    <main className=\"table-container\">\r\n                        <table cellPadding=\"0\" cellSpacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        < Checkbox\r\n                                            onChange={this.onCheckAllChange.bind(this)}\r\n                                            indeterminate={this.state.indeterminate}\r\n                                            checked={this.state.checkAll}\r\n                                        />\r\n                                    </th>\r\n                                    <th>编号</th>\r\n                                    <th>菜品图片</th>\r\n                                    <th>菜品名称</th>\r\n                                    <th>菜品类型</th>\r\n                                    <th>销量</th>\r\n                                    <th>价格</th>\r\n                                    <th>标签</th>\r\n                                    <th>操作</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"ItemWrap\">{Items}</tbody>\r\n                        </table>\r\n                    </main>\r\n                    <Select\r\n                        // defaultValue= {this.state.defalutSelecctValue} //不能改变颜色\r\n                        placeholder=\"批量操作\" //默认值\r\n                        style={{\r\n                            marginRight: 20, marginTop: 30,\r\n                            float: \"left\", width: 150,\r\n                            size: \"large\",\r\n                            color: this.state.colorBoolean ? \"rgba(0, 0, 0, 0.45)\" : \"rgba(0, 0, 0, 1)\"\r\n                            // 颜色控制方法: 初始一个颜色下拉选择后一个颜色,page改变后内容和文字颜色都恢复\r\n                        }}\r\n                        value={this.state.selecctValue}\r\n                        onSelect={value => {\r\n                            this.selectValue = value\r\n                            this.setState({  //下拉后改变颜色tag--colorBoolean,把下拉表内容也弄回去;\r\n                                colorBoolean: false,\r\n                                selecctValue: value\r\n                            })\r\n                            if (this.itemsArr.some(ele => ele === true)) {\r\n                                this.setState({\r\n                                    booleanValue: false\r\n                                })\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.selectOption.map(item =>\r\n                            <Option value={item} key={item} >{item}</Option>\r\n                        )}\r\n                    </Select>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{\r\n                            marginTop: 30, fontSize: 13,\r\n                            height: 30, size: \"large\"\r\n                        }}\r\n                        disabled={this.state.booleanValue}\r\n                        onClick={\r\n                            () => this.bulkOperation()}\r\n                    >确定</Button>\r\n                    {this.renderPage(tempData)}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst Demo = Form.create({ name: 'title' })(Temp);\r\n\r\nexport default withRouter(connect(\r\n    state => { return { data: state.foodData } },//将redux变量赋值到组件,成组件变量Data\r\n    dispatch => bindActionCreators(actionCreators, dispatch))(Demo))\r\n\r\n// export default withRouter(Demo)\r\n"]},"metadata":{},"sourceType":"module"}