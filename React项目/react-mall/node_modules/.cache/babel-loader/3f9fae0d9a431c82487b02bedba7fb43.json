{"ast":null,"code":"import { raiseError, triggerEvent } from '../event-api';\nvar typeStore = {},\n    depStore = {};\n\nfunction getExtensionName() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var b = a.getName && a.getName() || a.name;\n  return 'undefined' == typeof b && raiseError({\n    id: 'Extension'\n  }, '90211', 'extension', 'Name', new Error('A FusionCharts extension must have a getName API or a name property.')), b && b.toLowerCase();\n}\n\nfunction getExtensionType() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var b = a.getType && a.getType() || a.type;\n  return b && b.toLowerCase();\n}\n\nfunction defineDepType(a) {\n  'string' == typeof a && (typeStore[a] = {});\n}\n\nfunction addDep() {\n  var _this = this;\n\n  for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n    a[_key] = arguments[_key];\n  }\n\n  return a.length ? void a.forEach(function (a) {\n    var b, c, d, e, f;\n    return a ? void (c = a.extension ? a.extension : a, b = getExtensionName(a), d = getExtensionType(a), f = a.requiresFusionCharts, d ? (!typeStore[d] && defineDepType(d), (e = typeStore[d][b] !== c) && (typeStore[d][b] = c)) : b && (e = depStore[b] !== c) && (depStore[b] = c), e && triggerEvent('dependencyadded', _this, {\n      name: b,\n      type: d\n    }), e && f && c(_this)) : void raiseError({\n      id: 'Extension'\n    }, '90211', 'dependency', 'Extension', new Error('A FusionCharts extension must have a valid extension property.'));\n  }) : void raiseError({\n    id: 'Extension'\n  }, '90211', 'dependency', 'Extension', new Error('A FusionCharts extension must have a valid extension property.'));\n}\n\nfunction getDep(a, b) {\n  var c;\n  if (a = a && a.toLowerCase(), b && typeStore[b]) return typeStore[b][a];\n  if (!b) for (var d in typeStore) {\n    if (typeStore.hasOwnProperty(d) && (c = typeStore[d][a], c)) return c;\n  }\n  return depStore[a];\n}\n\nfunction getDepsByType() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return '' === a ? typeStore : typeStore[a.toLowerCase()];\n}\n\nexport { addDep, getDep, getDepsByType };","map":null,"metadata":{},"sourceType":"module"}