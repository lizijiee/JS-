{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\App Store\\\\Coding\\\\Github_Download\\\\JS-\\\\React\\u9879\\u76EE\\\\react-mall\\\\src\\\\components\\\\Content\\\\Food\\\\List\\\\EditClick\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport \"./Step/Add.less\";\nimport { Steps, Button, message, Form } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport StepOne from './Step/StepOne';\nimport StepTwo from './Step/StepTwo';\nimport StepThree from './Step/StepThree';\nvar confirm = Modal.confirm;\nvar Step = Steps.Step;\nvar steps = [{\n  title: '填写菜品信息',\n  content: '填写商品信息'\n}, {\n  title: '填写菜品促销',\n  content: 'Second-content'\n}, {\n  title: '填写商品属性',\n  content: 'Last-content'\n}];\n\nvar Temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Temp, _Component);\n\n  function Temp() {\n    var _this;\n\n    _classCallCheck(this, Temp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Temp).call(this));\n    _this.state = {\n      current: 0,\n      storeData: null,\n      categoryName: null,\n      data: {\n        comment: \"\",\n        loading: \"\",\n        name: \"\",\n        price: \"\",\n        promot: \"\",\n        radioButton: \"\",\n        select: \"\",\n        switch1: false,\n        switch2: false,\n        textarea: \"\",\n        upload: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Temp, [{\n    key: \"next\",\n    value: function next() {\n      var current = this.state.current + 1;\n      this.setState({\n        current: current\n      });\n      setTimeout(function () {// this.props.form.setFieldsValue(this.state.data)\n      }, 2000);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      var current = this.state.current - 1;\n      this.setState({\n        current: current\n      }); //回调函数\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setState({\n                  storeData: this.props.location.state.ele,\n                  categoryName: this.props.location.state.categoryName\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      // 表单内容提交组件,校验并获取一组输入域的值与 Error;\n      // 获取编辑后内容判断是否有变化没有有变化发出请求;\n      // 修改数据库,更新redux; (重新获取数据);\n      this.props.form.validateFields(function (errors, values) {\n        if (!!errors) {\n          message.error('验证失败!');\n          return;\n        }\n\n        var storeData = Object.assign({}, _this2.state.storeData, _this2.props.form.getFieldsValue());\n\n        _this2.setState({\n          storeData: storeData\n        }, function () {// console.log(this.state.storeData)\n        });\n\n        _this2.next();\n      });\n    }\n  }, {\n    key: \"isObjectValueEqual\",\n    value: function isObjectValueEqual(a, b) {\n      //1.判断数据提交前后两对象value数值是否相等,\n      //2.相等的话返回true,进行数据请求,不想等的话返回不相等的key和value新对象\n      //3.取对象a和b的属性名\n      var aProps = Object.keys(a); // let bProps = Object.keys(b);  a、b的key值相同\n      //判断属性名的length是否一致\n      //表单两次提交内容对比不需要对length进行判断\n      //循环取出属性名，再判断属性值是否一致\n\n      for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        if (a[propName] + \"\" !== b[propName] + \"\") {\n          //因为数据类型不一致所以转一下，不对数据类型进行判断\n          return false; //如果进入这里下面return不会执行\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"showConfirm\",\n    value: function showConfirm() {\n      var _this3 = this;\n\n      confirm({\n        wrapClassName: '提示',\n        title: '提示:',\n        content: '是否提交数据',\n        okText: '确认',\n        cancelText: '取消',\n        icon: \"info-circle\",\n        bodyStyle: {\n          \".ant-modal-confirm-btns\": {\n            marginTop: 0\n          }\n        },\n        onOk: function () {\n          var _onOk = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2() {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    // 箭头函数解决this\n                    if (!_this3.isObjectValueEqual(_this3.props.form.getFieldsValue(), _this3.props.location.state[0])) {//表单内容修改后,进入判断。 \n                      //思路：把num=？ 传入后台在后台进行查找相应的内容               \n\n                      /* await fetch(`http://localhost:2000/pers?act=editClerks&&num=${this.props.location.state[0].num}`,\r\n                      {\r\n                        method: 'POST',\r\n                        // mode: 'cors',\r\n                        // credentials: 'include', // cookie\r\n                        headers: {\r\n                          'Content-Type': 'application/json'\r\n                        },\r\n                        body:JSON.stringify(this.props.form.getFieldsValue())\r\n                      }\r\n                      ) \r\n                        .then(res => res.json())\r\n                        .then(\r\n                          data => {\r\n                            // this.setState({ ...data })\r\n                            console.log(data)\r\n                          })*/\n                    } else {\n                      //进行修改直接跳转到列表页\n                      success();\n                    }\n\n                    _this3.props.history.push({\n                      //退回到列表页\n                      pathname: \"/pers/clerks\"\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          function onOk() {\n            return _onOk.apply(this, arguments);\n          }\n\n          return onOk;\n        }()\n        /* \r\n        onCancel() {  //取消回调函数\r\n          console.log('Cancel');\r\n        }, \r\n        */\n\n      });\n    }\n  }, {\n    key: \"Submit\",\n    value: function Submit() {\n      console.log(this.props);\n    }\n  }, {\n    key: \"selest\",\n    value: function selest(params) {\n      //控制步骤条对应内容\n      if (this.state.storeData) {\n        // console.log(this.state.storeData)\n        switch (params) {\n          case 0:\n            return React.createElement(StepOne, {\n              props: this.props,\n              handleSubmit: this.handleSubmit,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            });\n            break;\n\n          case 1:\n            return React.createElement(StepTwo, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164\n              },\n              __self: this\n            });\n            break;\n\n          case 2:\n            return React.createElement(StepThree, {\n              props: this.props,\n              state: this.state,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            });\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var current = this.state.current;\n      return React.createElement(\"main\", {\n        className: \"food-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"food-add-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Steps, {\n        current: current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, steps.map(function (item) {\n        return React.createElement(Step, {\n          key: item.title,\n          title: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"form-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.selest(current)), React.createElement(\"div\", {\n        className: \"steps-action\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, current > 0 && React.createElement(Button, {\n        style: {\n          textAlign: \"left\",\n          marginRight: 30\n        },\n        onClick: function onClick() {\n          return _this4.prev();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"\\u4E0A\\u4E00\\u6B65\\uFF0C\", steps[current].title), current === steps.length - 1 && React.createElement(Button, {\n        style: {},\n        type: \"primary\",\n        onClick: this.showConfirm.bind(this) // onClick={(e) => {\n        //     message.success('Processing complete!')\n        //     this.Submit(e)\n        // }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"\\u5B8C\\u6210\\uFF0C\\u63D0\\u4EA4\\u83DC\\u54C1\"), current < steps.length - 1 && React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          margin: \"0 auto\",\n          textAlign: \"right\" // position: \"absolute\",\n          // right: -15,\n          // top: -32\n\n        },\n        onClick: function onClick(e) {\n          _this4.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"\\u4E0B\\u4E00\\u6B65\\uFF0C\", steps[current].title) // 下一步，填写商品信息\n      )));\n    }\n  }]);\n\n  return Temp;\n}(Component);\n\nvar createForm = Form.create;\nTemp = createForm()(Temp); //将Form表单,通过props获取到各种方法\n\nexport default withRouter(Temp);","map":{"version":3,"sources":["F:\\App Store\\Coding\\Github_Download\\JS-\\React项目\\react-mall\\src\\components\\Content\\Food\\List\\EditClick\\Edit.js"],"names":["React","Component","Steps","Button","message","Form","withRouter","StepOne","StepTwo","StepThree","confirm","Modal","Step","steps","title","content","Temp","state","current","storeData","categoryName","data","comment","loading","name","price","promot","radioButton","select","switch1","switch2","textarea","upload","setState","setTimeout","props","location","ele","e","form","validateFields","errors","values","error","Object","assign","getFieldsValue","next","a","b","aProps","keys","i","length","propName","wrapClassName","okText","cancelText","icon","bodyStyle","marginTop","onOk","isObjectValueEqual","success","history","push","pathname","console","log","params","handleSubmit","map","item","selest","textAlign","marginRight","prev","showConfirm","bind","margin","createForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./Step/Add.less\";\r\nimport { Steps, Button, message, Form } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport StepOne from './Step/StepOne';\r\nimport StepTwo from './Step/StepTwo';\r\nimport StepThree from './Step/StepThree';\r\nconst confirm = Modal.confirm;\r\n\r\nconst Step = Steps.Step;\r\nconst steps = [{\r\n    title: '填写菜品信息',\r\n    content: '填写商品信息',\r\n}, {\r\n    title: '填写菜品促销',\r\n    content: 'Second-content',\r\n}, {\r\n    title: '填写商品属性',\r\n    content: 'Last-content',\r\n}];\r\n\r\nclass Temp extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            current: 0,\r\n            storeData: null,\r\n            categoryName: null,\r\n            data: {\r\n                comment: \"\",\r\n                loading: \"\",\r\n                name: \"\",\r\n                price: \"\",\r\n                promot: \"\",\r\n                radioButton: \"\",\r\n                select: \"\",\r\n                switch1: false,\r\n                switch2: false,\r\n                textarea: \"\",\r\n                upload: \"\"\r\n            }\r\n        };\r\n    }\r\n    next() {\r\n        const current = this.state.current + 1;\r\n        this.setState({ current })\r\n        setTimeout(() => {\r\n            // this.props.form.setFieldsValue(this.state.data)\r\n        }, 2000);\r\n    }\r\n\r\n    prev() {\r\n        const current = this.state.current - 1;\r\n        this.setState({ current })//回调函数\r\n\r\n    }\r\n    async  componentDidMount() {\r\n        await this.setState({\r\n            storeData: this.props.location.state.ele,\r\n            categoryName: this.props.location.state.categoryName\r\n        })\r\n        // this.props.form.setFieldsValue( this.state.data) \r\n    }\r\n\r\n    handleSubmit(e) {\r\n        // 表单内容提交组件,校验并获取一组输入域的值与 Error;\r\n        // 获取编辑后内容判断是否有变化没有有变化发出请求;\r\n        // 修改数据库,更新redux; (重新获取数据);\r\n        this.props.form.validateFields((errors, values) => {\r\n            if (!!errors) {\r\n                message.error('验证失败!')\r\n                return;\r\n            }\r\n            let storeData = Object.assign({}, this.state.storeData, this.props.form.getFieldsValue())\r\n            this.setState({\r\n                storeData\r\n            }, () => {\r\n                // console.log(this.state.storeData)\r\n            })\r\n            this.next()\r\n        });\r\n    };\r\n    isObjectValueEqual(a, b) {\r\n        //1.判断数据提交前后两对象value数值是否相等,\r\n        //2.相等的话返回true,进行数据请求,不想等的话返回不相等的key和value新对象\r\n        //3.取对象a和b的属性名\r\n        let aProps = Object.keys(a);\r\n        // let bProps = Object.keys(b);  a、b的key值相同\r\n        //判断属性名的length是否一致\r\n        //表单两次提交内容对比不需要对length进行判断\r\n\r\n        //循环取出属性名，再判断属性值是否一致\r\n        for (var i = 0; i < aProps.length; i++) {\r\n            var propName = aProps[i];\r\n            if (a[propName] + \"\" !== b[propName] + \"\") {\r\n                //因为数据类型不一致所以转一下，不对数据类型进行判断\r\n                return false;//如果进入这里下面return不会执行\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    showConfirm() {\r\n        confirm({\r\n            wrapClassName: '提示',\r\n            title: '提示:',\r\n            content: '是否提交数据',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            icon: \"info-circle\",\r\n            bodyStyle: {\r\n                \".ant-modal-confirm-btns\": { marginTop: 0 }\r\n            },\r\n            onOk: async () => { // 箭头函数解决this\r\n                if (!this.isObjectValueEqual(this.props.form.getFieldsValue(), this.props.location.state[0])) {\r\n\r\n                    //表单内容修改后,进入判断。 \r\n                    //思路：把num=？ 传入后台在后台进行查找相应的内容               \r\n\r\n                    /* await fetch(`http://localhost:2000/pers?act=editClerks&&num=${this.props.location.state[0].num}`,\r\n                    {\r\n                      method: 'POST',\r\n                      // mode: 'cors',\r\n                      // credentials: 'include', // cookie\r\n                      headers: {\r\n                        'Content-Type': 'application/json'\r\n                      },\r\n                      body:JSON.stringify(this.props.form.getFieldsValue())\r\n                    }\r\n                    ) \r\n                      .then(res => res.json())\r\n                      .then(\r\n                        data => {\r\n                          // this.setState({ ...data })\r\n                          console.log(data)\r\n                        })*/\r\n                } else { //进行修改直接跳转到列表页\r\n                    success();\r\n                }\r\n                this.props.history.push({  //退回到列表页\r\n                    pathname: \"/pers/clerks\",\r\n                });\r\n            },\r\n            /* \r\n            onCancel() {  //取消回调函数\r\n              console.log('Cancel');\r\n            }, \r\n            */\r\n        })\r\n    }\r\n    Submit() {\r\n        console.log(this.props)\r\n    }\r\n\r\n    selest(params) {   //控制步骤条对应内容\r\n        if (this.state.storeData) {\r\n            // console.log(this.state.storeData)\r\n            switch (params) {\r\n                case 0:\r\n                    return <StepOne props={this.props} handleSubmit={this.handleSubmit} state={this.state} />;\r\n                    break;\r\n                case 1:\r\n                    return <StepTwo props={this.props} state={this.state} />;\r\n                    break;\r\n                case 2:\r\n                    return <StepThree props={this.props} state={this.state} />;\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { current } = this.state;\r\n\r\n        return (\r\n            <main className=\"food-add\">\r\n                <div className=\"food-add-wrap\">\r\n                    <Steps current={current}   >\r\n                        {steps.map(item => <Step key={item.title} title={item.title} />\r\n                        )}\r\n                    </Steps>\r\n                    <div className=\"form-wrap\">\r\n                        {/* 分步组件 */}\r\n                        {this.selest(current)}\r\n                    </div>\r\n                    <div className=\"steps-action\"\r\n                        style={{ textAlign: \"center\" }}>\r\n                        {\r\n                            current > 0\r\n                            && (\r\n                                <Button\r\n                                    style={{\r\n                                        textAlign: \"left\",\r\n                                        marginRight: 30\r\n                                    }}\r\n                                    onClick={() => this.prev()}>\r\n                                    上一步，{steps[current].title}\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        {\r\n                            current === steps.length - 1\r\n                            && <Button\r\n                                style={{}}\r\n                                type=\"primary\"\r\n                                onClick={this.showConfirm.bind(this)}\r\n\r\n                                // onClick={(e) => {\r\n                                //     message.success('Processing complete!')\r\n                                //     this.Submit(e)\r\n                                // }}\r\n                            >完成，提交菜品</Button>\r\n                        }\r\n                        {\r\n                            current < steps.length - 1\r\n                            && <Button\r\n                                type=\"primary\"\r\n                                style={{\r\n                                    margin: \"0 auto\",\r\n                                    textAlign: \"right\",\r\n                                    // position: \"absolute\",\r\n                                    // right: -15,\r\n                                    // top: -32\r\n                                }}\r\n                                onClick={(e) => {\r\n                                    this.handleSubmit(e)\r\n                                }}>下一步，{steps[current].title}</Button>\r\n                            // 下一步，填写商品信息\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst createForm = Form.create;\r\nTemp = createForm()(Temp);//将Form表单,通过props获取到各种方法\r\nexport default withRouter(Temp)"]},"metadata":{},"sourceType":"module"}