import{SmartRenderer}from'../../../../fc-core/src/component-interface';import{pluck,pluckNumber,convertColor}from'../../../../fc-core/src/lib';const VERTICAL='vertical',GUTTER_5=5,M='M',L='L',h='h',v='v',z='z';class Crossline extends SmartRenderer{__setDefaultConfig(){super.__setDefaultConfig(),this.config.type=VERTICAL,this.config.value=void 0,this.config['default-stroke-width']=1,this.config['default-vertical-marker-fill']='#5f5f5f',this.config['default-vertical-label-fill']='#ffffff',this.config['default-horizontal-marker-fill']='#5f5f5f',this.config['default-horizontal-label-fill']='#ffffff',this.config['default-stroke']='#9a9a9a',this.config['default-stroke-opacity']=100,this.config['default-font-size']='10',this.config['default-font-family']='sans-serif',this.config['default-font-weight']='normal',this.config['default-font-style']='normal',this.config['default-padding']='2',this.config['default-text-anchor']='middle'}configureAttributes(a){super.configureAttributes(a);let b=this.config;for(let c in a)a.hasOwnProperty(c)&&(b[c]=a[c])}getPathArr(){let a,b=this,c=b.config,d=c.type===VERTICAL,e=c.scale,f=c.value,g=b.getLinkedParent().config;return a=d?[M,e.getRangeValue(f),g.canvasTop,v,g.canvasHeight]:[M,g.canvasTop,e.getRangeValue(f),h,g.canvasWidth],a}drawVerticalCrosslineText(){let a,b,c,d,e=this,f=e.config,g=f.dateRange,i=f.timeFormatterFn({dateRange:g,type:'crossline'}),j=f.value,k=f.scale,l=pluckNumber(f.padding,f['default-padding']),m=e.getLinkedParent().config,n=m.canvasTop+m.canvasHeight,o=m.canvasLeft,p=o+m.canvasWidth,q=e.getFromEnv('smartLabel'),r=0,s=pluck(f.markerFill,f['default-vertical-marker-fill']),t=pluck(f.labelFill,f['default-vertical-label-fill']);+j&&(q.setStyle({fontFamily:pluck(f['font-family'],f['default-font-family']),fontSize:pluck(f['font-size'],f['default-font-size']),fontWeight:pluck(f['font-weight'],f['default-font-weight'])}),d=q.getSmartText(i),c=k.getRangeValue(j),e.addGraphicalElement({el:'group',container:{id:'strato',label:'strato',isParent:!0},component:e,label:'crossline',attr:{name:'veritcal-crosssline-marker-group'},id:'crossline'}),c+d.width/2+2*l>p?(a=[M,c,n,L,c,n+l,v,d.height+2*l,h,-(d.width+4*l),v,-(d.height+2*l),L,c-l,n+l,z],b='end',r=-2*l):c-d.width/2-2*l<o?(a=[M,c,n,L,c,n+l,v,d.height+2*l,h,d.width+4*l,v,-(d.height+2*l),L,c+l,n+l,z],b='start',r=2*l):(a=[M,c,n,L,c-l,n+l,L,c-d.width/2-2*l,n+l,v,d.height+2*l,h,d.width+4*l,v,-(d.height+2*l),L,c+l,n+l,z],b='middle'),e.addGraphicalElement({el:'path',attr:{path:a,fill:s},id:'vertical-crossline-marker',container:{label:'crossline'}}),e.addGraphicalElement({el:'text',attr:{fill:t,text:i,x:c+r,y:n+2*l+d.height/2,"text-anchor":b,"font-family":pluck(f['font-family'],f['default-font-family']),"font-size":pluck(f['font-size'],f['default-font-size']),"font-weight":pluck(f['font-weight'],f['default-font-weight']),"font-style":pluck(f['font-style'],f['default-font-style'])},id:'vertical-crossline-text',container:{label:'crossline'}}))}drawHorizontalCrosslineText(){let a,b,c=this,d=c.config,e=d.value,f=d.scale,g=pluckNumber(d.padding,d['default-padding']),i=c.getLinkedParent().config,j=d.formatterFn({value:d.text,type:'crossline',prefix:d.prefix,suffix:d.suffix}),k=i.canvasLeft,l=c.getFromEnv('smartLabel'),m=pluck(d.markerFill,d['default-horizontal-marker-fill']),n=pluck(d.labelFill,d['default-horizontal-label-fill']);+e&&(l.setStyle({fontFamily:pluck(d['font-family'],d['default-font-family']),fontSize:pluck(d['font-size'],d['default-font-size']),fontWeight:pluck(d['font-weight'],d['default-font-weight'])}),a=f.getRangeValue(e),b=l.getSmartText(j),c.addGraphicalElement({el:'group',container:{id:'strato',label:'strato',isParent:!0},component:c,label:'crossline',attr:{name:'horizontal-crosssline-marker-group'},id:'crossline'}),c.addGraphicalElement({el:'path',attr:{path:[M,k,a,L,k-GUTTER_5,a,L,k-10,a-b.height/2-2*g,h,-(b.width+2*g),v,b.height+4*g,h,b.width+2*g,L,k-GUTTER_5,a],fill:m,stroke:m},id:'horizontal-crossline-marker',container:{label:'crossline'}}),c.addGraphicalElement({el:'text',attr:{fill:n,text:j,x:k-10-(b.width+2*g)/2,y:a,"text-anchor":pluck(d['text-anchor'],d['default-text-anchor']),"font-family":pluck(d['font-family'],d['default-font-family']),"font-size":pluck(d['font-size'],d['default-font-size']),"font-weight":pluck(d['font-weight'],d['default-font-weight']),"font-style":pluck(d['font-style'],d['default-font-style'])},id:'horizontal-crossline-text',container:{label:'crossline'}}))}draw(){let a=this,b=a.config,c=+b.value&&a.getPathArr()||[],d=convertColor(pluck(b.stroke,b['default-stroke'])),e=pluckNumber(b['stroke-width'],b['default-stroke-width']),f=pluckNumber(b['stroke-opacity'],b['default-stroke-opacity']);a.addGraphicalElement({el:'group',container:{id:'strato',label:'strato',isParent:!0},component:a,label:'verticalcrossline',attr:{name:'vertical-crosssline-group'},id:'crossline'}),a.addGraphicalElement({el:'group',container:{id:'strato',label:'strato',isParent:!0},component:a,label:'horizontalcrossline',attr:{name:'horizontal-crosssline-group'},id:'crossline'}),c.length&&a.addGraphicalElement({el:'path',attr:{path:c,stroke:d,"stroke-width":e,"stroke-opacity":f},container:{label:b.type+'crossline'},id:b.type+'-crossline-path',component:a}),b.showMarker&&(b.type===VERTICAL?a.drawVerticalCrosslineText():a.drawHorizontalCrosslineText())}}export default Crossline;