import{SmartRenderer}from'../../../../../fc-core/src/component-interface';import Handle from'./handle';import Label from'./label';import Selection from'./selection';import TimeConverter from'../../../../../fc-utils/src/time-converter';class Brush extends SmartRenderer{constructor(){super(),this._maxDimensions={},this._currDimensions={}}__setDefaultConfig(a={}){super.__setDefaultConfig(a);let b=this.config;b.handleWidth=12,b.handleHeight=20}configureAttributes(a={}){super.configureAttributes(a);let b=this,c=b.config;c.values=a.values,b.createChildComponents()}setChildDimension(){let a=this,b=a.config,c=a.getChildren('selection')[0],d=a.getChildren('leftHandle')[0],e=a.getChildren('rightHandle')[0],f=a.getChildren('leftLabel')[0],g=a.getChildren('rightLabel')[0],h=a.getFromEnv('chart'),i=a.getFromEnv('timeNavigatorConfig').xConfigs[0].scale,j=a.getFromEnv('timeNavigatorConfig').values||[],k=a.getMaxBrushDimensions(),l=j[0]===h.getContextLimit()[0]?k.x:i.getRangeValue(j[0]),m=j[1]===h.getContextLimit()[1]?k.x+k.width:i.getRangeValue(j[1]);c.setDimension({x:l,y:a._maxDimensions.y,width:m-l,height:a._maxDimensions.height}),d.setDimension({x:l-b.handleWidth,y:a._maxDimensions.y+a._maxDimensions.height/2-b.handleHeight/2,width:b.handleWidth,height:b.handleHeight}),e.setDimension({x:m,y:a._maxDimensions.y+a._maxDimensions.height/2-b.handleHeight/2,width:b.handleWidth,height:b.handleHeight}),f.setDimension({x:l,y:a._maxDimensions.y}),g.setDimension({x:m,y:a._maxDimensions.y}),a.setCurrentBrushDimensions({x:l,y:a._maxDimensions.y,width:m-l,height:a._maxDimensions.height-a._maxDimensions.y})}getLabelSpace(){let a,b,c,d=this,e=d.getChildren('leftLabel')[0],f=d.getChildren('rightLabel')[0],g=d.getFromEnv('smartLabel'),h=TimeConverter.formatter('%b %d, %Y');return a=e.config.labelStyle,g.setStyle({fontSize:a['font-size'],fontFamily:a['font-family'],lineHeight:a['line-height'],fontWeight:a['font-weight']}),b=g.getSmartText(h.format(d.config.values[0])),a=f.config.labelStyle,g.setStyle({fontSize:a['font-size'],fontFamily:a['font-family'],lineHeight:a['line-height'],fontWeight:a['font-weight']}),c=g.getSmartText(h.format(d.config.values[1])),Math.max(b.height,c.height)}draw(){let a=this;a.addGraphicalElement({el:'group',attr:{name:'brush-group'},id:'brushGroup',label:'brushGroup',component:a,container:{id:'thermo',label:'group',isParent:!0}})}hideAllLabels(){let a=this,b=a.getChildren('leftLabel')[0],c=a.getChildren('rightLabel')[0];a.config.pointerReleasedOnParent||(b.config.showLabel=c.config.showLabel=!1,b.asyncDraw(),c.asyncDraw())}createChildComponents(){let a,b,c,d,e,f=this;e=f.attachChild(Selection,'selection'),e.attachHandlers(),e.configure({orientation:'horizontal'}),a=f.attachChild(Handle,'leftHandle'),a.attachHandlers(),a.configure({orientation:'horizontal',type:'leftHandle'}),b=f.attachChild(Handle,'rightHandle'),b.attachHandlers(),b.configure({orientation:'horizontal',type:'rightHandle'}),c=f.attachChild(Label,'leftLabel'),c.attachHandlers(),c.configure({orientation:'horizontal',type:'leftLabel'}),d=f.attachChild(Label,'rightLabel'),d.attachHandlers(),d.configure({orientation:'horizontal',type:'rightLabel'})}setMaxBrushDimensions(a){this._maxDimensions=a,this.setChildDimension()}getMaxBrushDimensions(){return this._maxDimensions}setCurrentBrushDimensions(a){this._currDimensions=a}getCurrentBrushDimensions(){return this._currDimensions}}export default Brush;