import{SmartRenderer}from'../../../../../fc-core/src/component-interface';import TimeConverter from'../../../../../fc-utils/src/time-converter';import{extend2,getTouchEvent,DEFAULT_FT_FONT}from'../../../../../fc-core/src/lib';const START='start',END='end';class Label extends SmartRenderer{constructor(){super(),this._dimensions={}}configureAttributes(a={}){super.configureAttributes(a);let b=this,c=b.config;c.orientation=a.orientation,c.type=a.type}__setDefaultConfig(){super.__setDefaultConfig(),this.config.labelStyle={fill:'#f3f3f3',"font-size":'11px',"font-weight":600,"font-family":DEFAULT_FT_FONT,"background-color":'#5f5f5f',"border-horizontal-padding":5,"border-vertical-padding":3,"vertical-align":'middle'}}setDimension(a){this._dimensions=a}getDimension(){return this._dimensions}attachHandlers(){let a,b,c,d,f,g,h=this,i=h.getFromEnv('animationManager'),j=h.getLinkedParent(),k=j.getFromEnv('timeNavigator');h.addEventListener('fc-dragstart',h.dragstartHandler||(h.dragstartHandler=function(d){c=getTouchEvent(d).clientX,a=j.getCurrentBrushDimensions(),k.config.labelsGettingDragged=!0,b=d.originalEvent.target,j.config.pointerReleasedOnParent=!1})),h.addEventListener('fc-dragmove',h.dragmoveHandler||(h.dragmoveHandler=function(b){i.setAnimationState('timenavSqueeze'),d=getTouchEvent(b).clientX-c,'leftLabel'===h.config.type?(f=a.x+d,g=a.x+a.width):(f=a.x,g=a.x+a.width+d),k.validateDomain([f,g],h.config.type)})),h.addEventListener('fc-dragend',h.dragendHandler||(h.dragendHandler=function(a){i.setAnimationState('timenavSqueeze'),k.config.labelsGettingDragged=!1,b!==a.originalEvent.target&&j.hideAllLabels()}))}draw(){let a,b,c,d,e,f,g,h,i,j=this,k=j.config,l=extend2(extend2({},j.getFromEnv('textStyle')),k.labelStyle),m=j.getLinkedParent(),n=j.getFromEnv('timeNavigator').config,o=j.getFromEnv('smartLabel'),p=m.getMaxBrushDimensions(),q=j.getDimension(),r=q.x,s=TimeConverter.formatter('%b %d, %Y'),t='leftLabel'===k.type?n.values[0]:n.values[1],u=s.format(t),v=q.y;o.setStyle({fontSize:l['font-size'],fontFamily:l['font-family'],lineHeight:l['line-height'],fontWeight:l['font-weight']}),c=o.getSmartText(u),'leftLabel'===k.type?r-c.width>=p.x?(b=END,a=1):(b=START,a=-1):r+c.width<=p.x+p.width?(b=START,a=-1):(b=END,a=1),k.showLabel&&(f=c.width,g=c.height,h=f+2*l['border-horizontal-padding'],i=g+2*l['border-vertical-padding'],d=r-a*l['border-horizontal-padding'],e=v-(g+2*l['border-vertical-padding'])/2,j.addGraphicalElement({el:'rect',attr:{x:b===START?r:r-h,y:v-i,width:h,height:i,fill:l['background-color']},css:{cursor:'move'},shadow:[!0,1],label:'dragableLabelBackground',id:'dragableLabelBackground',component:j,container:{id:'brushGroup',label:'brushGroup',isParent:!0}}),j.addGraphicalElement({el:'text',attr:{x:d,y:e,text:u,"font-family":l['font-family'],"font-style":l['font-style'],"vertical-align":l['vertical-align'],"font-size":l['font-size'],"font-weight":l['font-weight'],"text-anchor":b,fill:l.fill},css:{cursor:'move'},label:'dragableLabel',component:j,container:{id:'brushGroup',label:'brushGroup',isParent:!0}}))}}export default Label;